{
	"id": "12a5002ef86f1a7203cf6cf5d97baf17",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.22",
	"solcLongVersion": "0.8.22+commit.4fc1097e",
	"input": {
		"language": "Solidity",
		"sources": {
			"AGC_FInal/AGCReward.sol": {
				"content": "// SPDX-License-Identifier: UNLICENSED\n\npragma solidity ^0.8.22;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\n\ncontract RewardContract is Ownable, ReentrancyGuard {\n    IERC20 public immutable agcToken;\n\n    uint256 public constant MAX_REWARD_AMOUNT = 500*10**18;\n    uint public constant MAX_TAX=0;\n\n    event UserRewarded(address indexed user, uint256 amount);\n    constructor(address _agcTokenAddress) Ownable(msg.sender) {\n        agcToken = IERC20(_agcTokenAddress);\n    }\n    function rewardUser(address user, uint256 amount) external nonReentrant {\n        require(amount > 0 && amount <= MAX_REWARD_AMOUNT, \"Amount must be greater than zero and less than or equal to 500\");\n        require(agcToken.balanceOf(address(this)) >= amount, \"Insufficient funds\");\n        agcToken.transfer(user, amount);\n        emit UserRewarded(user, amount);\n    }\n    function checkBalance() external view returns (uint256) {\n        return agcToken.balanceOf(address(this));\n    }\n}"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 158,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"AGC_FInal/AGCReward.sol": {
				"RewardContract": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_agcTokenAddress",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "UserRewarded",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "MAX_REWARD_AMOUNT",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MAX_TAX",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "agcToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "checkBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "rewardUser",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"AGC_FInal/AGCReward.sol\":240:1102  contract RewardContract is Ownable, ReentrancyGuard {... */\n  mstore(0x40, 0xa0)\n    /* \"AGC_FInal/AGCReward.sol\":496:606  constructor(address _agcTokenAddress) Ownable(msg.sender) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"AGC_FInal/AGCReward.sol\":542:552  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_8\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_9\n  swap2\n  swap1\n  tag_10\n  jump\t// in\ntag_9:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_8:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_11\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_12)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_11:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1828  _status */\n  dup1\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"AGC_FInal/AGCReward.sol\":582:598  _agcTokenAddress */\n  dup1\n    /* \"AGC_FInal/AGCReward.sol\":564:599  agcToken = IERC20(_agcTokenAddress) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x80\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"AGC_FInal/AGCReward.sol\":496:606  constructor(address _agcTokenAddress) Ownable(msg.sender) {... */\n  pop\n    /* \"AGC_FInal/AGCReward.sol\":240:1102  contract RewardContract is Ownable, ReentrancyGuard {... */\n  jump(tag_15)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_12:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x00\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_18:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_20:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_21:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_31\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_20\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_22:\n    /* \"#utility.yul\":641:665   */\n  tag_33\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_21\n  jump\t// in\ntag_33:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_34\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_34:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_23:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_36\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_22\n  jump\t// in\ntag_36:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1196   */\ntag_3:\n    /* \"#utility.yul\":915:921   */\n  0x00\n    /* \"#utility.yul\":964:966   */\n  0x20\n    /* \"#utility.yul\":952:961   */\n  dup3\n    /* \"#utility.yul\":943:950   */\n  dup5\n    /* \"#utility.yul\":939:962   */\n  sub\n    /* \"#utility.yul\":935:967   */\n  slt\n    /* \"#utility.yul\":932:1051   */\n  iszero\n  tag_38\n  jumpi\n    /* \"#utility.yul\":970:1049   */\n  tag_39\n  tag_18\n  jump\t// in\ntag_39:\n    /* \"#utility.yul\":932:1051   */\ntag_38:\n    /* \"#utility.yul\":1090:1091   */\n  0x00\n    /* \"#utility.yul\":1115:1179   */\n  tag_40\n    /* \"#utility.yul\":1171:1178   */\n  dup5\n    /* \"#utility.yul\":1162:1168   */\n  dup3\n    /* \"#utility.yul\":1151:1160   */\n  dup6\n    /* \"#utility.yul\":1147:1169   */\n  add\n    /* \"#utility.yul\":1115:1179   */\n  tag_23\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":1105:1179   */\n  swap2\n  pop\n    /* \"#utility.yul\":1061:1189   */\n  pop\n    /* \"#utility.yul\":845:1196   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1202:1320   */\ntag_24:\n    /* \"#utility.yul\":1289:1313   */\n  tag_42\n    /* \"#utility.yul\":1307:1312   */\n  dup2\n    /* \"#utility.yul\":1289:1313   */\n  tag_21\n  jump\t// in\ntag_42:\n    /* \"#utility.yul\":1284:1287   */\n  dup3\n    /* \"#utility.yul\":1277:1314   */\n  mstore\n    /* \"#utility.yul\":1202:1320   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1326:1548   */\ntag_10:\n    /* \"#utility.yul\":1419:1423   */\n  0x00\n    /* \"#utility.yul\":1457:1459   */\n  0x20\n    /* \"#utility.yul\":1446:1455   */\n  dup3\n    /* \"#utility.yul\":1442:1460   */\n  add\n    /* \"#utility.yul\":1434:1460   */\n  swap1\n  pop\n    /* \"#utility.yul\":1470:1541   */\n  tag_44\n    /* \"#utility.yul\":1538:1539   */\n  0x00\n    /* \"#utility.yul\":1527:1536   */\n  dup4\n    /* \"#utility.yul\":1523:1540   */\n  add\n    /* \"#utility.yul\":1514:1520   */\n  dup5\n    /* \"#utility.yul\":1470:1541   */\n  tag_24\n  jump\t// in\ntag_44:\n    /* \"#utility.yul\":1326:1548   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"AGC_FInal/AGCReward.sol\":240:1102  contract RewardContract is Ownable, ReentrancyGuard {... */\ntag_15:\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x7af96f1f1efc65ed484a0803de1d90713519e6ec663d7600835d02d7249d71c5\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"AGC_FInal/AGCReward.sol\":240:1102  contract RewardContract is Ownable, ReentrancyGuard {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xc39124ab\n      gt\n      tag_11\n      jumpi\n      dup1\n      0xc39124ab\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xc71daccb\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xe4e103dc\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_11:\n      dup1\n      0x715018a6\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x86a35f25\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xa04f6b4b\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_3:\n      tag_12\n      tag_13\n      jump\t// in\n    tag_12:\n      stop\n        /* \"AGC_FInal/AGCReward.sol\":397:427  uint public constant MAX_TAX=0 */\n    tag_4:\n      tag_14\n      tag_15\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      tag_16\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_5:\n      tag_18\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      tag_20\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"AGC_FInal/AGCReward.sol\":337:391  uint256 public constant MAX_REWARD_AMOUNT = 500*10**18 */\n    tag_6:\n      tag_22\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"AGC_FInal/AGCReward.sol\":298:330  IERC20 public immutable agcToken */\n    tag_7:\n      tag_25\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"AGC_FInal/AGCReward.sol\":987:1100  function checkBalance() external view returns (uint256) {... */\n    tag_8:\n      tag_29\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      tag_31\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"AGC_FInal/AGCReward.sol\":611:982  function rewardUser(address user, uint256 amount) external nonReentrant {... */\n    tag_9:\n      tag_32\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_33\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      tag_35\n      jump\t// in\n    tag_32:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_10:\n      tag_36\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      tag_39\n      jump\t// in\n    tag_36:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_13:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_41\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_42\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_41:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_44\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_45\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_44:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"AGC_FInal/AGCReward.sol\":397:427  uint public constant MAX_TAX=0 */\n    tag_15:\n        /* \"AGC_FInal/AGCReward.sol\":426:427  0 */\n      0x00\n        /* \"AGC_FInal/AGCReward.sol\":397:427  uint public constant MAX_TAX=0 */\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_19:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"AGC_FInal/AGCReward.sol\":337:391  uint256 public constant MAX_REWARD_AMOUNT = 500*10**18 */\n    tag_23:\n        /* \"AGC_FInal/AGCReward.sol\":381:391  500*10**18 */\n      0x1b1ae4d6e2ef500000\n        /* \"AGC_FInal/AGCReward.sol\":337:391  uint256 public constant MAX_REWARD_AMOUNT = 500*10**18 */\n      dup2\n      jump\t// out\n        /* \"AGC_FInal/AGCReward.sol\":298:330  IERC20 public immutable agcToken */\n    tag_26:\n      immutable(\"0x7af96f1f1efc65ed484a0803de1d90713519e6ec663d7600835d02d7249d71c5\")\n      dup2\n      jump\t// out\n        /* \"AGC_FInal/AGCReward.sol\":987:1100  function checkBalance() external view returns (uint256) {... */\n    tag_30:\n        /* \"AGC_FInal/AGCReward.sol\":1034:1041  uint256 */\n      0x00\n        /* \"AGC_FInal/AGCReward.sol\":1060:1068  agcToken */\n      immutable(\"0x7af96f1f1efc65ed484a0803de1d90713519e6ec663d7600835d02d7249d71c5\")\n        /* \"AGC_FInal/AGCReward.sol\":1060:1078  agcToken.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"AGC_FInal/AGCReward.sol\":1087:1091  this */\n      address\n        /* \"AGC_FInal/AGCReward.sol\":1060:1093  agcToken.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_48\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_48:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_50\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_50:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_51\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_51:\n        /* \"AGC_FInal/AGCReward.sol\":1053:1093  return agcToken.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"AGC_FInal/AGCReward.sol\":987:1100  function checkBalance() external view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"AGC_FInal/AGCReward.sol\":611:982  function rewardUser(address user, uint256 amount) external nonReentrant {... */\n    tag_35:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_54\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_55\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_54:\n        /* \"AGC_FInal/AGCReward.sol\":710:711  0 */\n      0x00\n        /* \"AGC_FInal/AGCReward.sol\":701:707  amount */\n      dup2\n        /* \"AGC_FInal/AGCReward.sol\":701:711  amount > 0 */\n      gt\n        /* \"AGC_FInal/AGCReward.sol\":701:742  amount > 0 && amount <= MAX_REWARD_AMOUNT */\n      dup1\n      iszero\n      tag_57\n      jumpi\n      pop\n        /* \"AGC_FInal/AGCReward.sol\":381:391  500*10**18 */\n      0x1b1ae4d6e2ef500000\n        /* \"AGC_FInal/AGCReward.sol\":715:721  amount */\n      dup2\n        /* \"AGC_FInal/AGCReward.sol\":715:742  amount <= MAX_REWARD_AMOUNT */\n      gt\n      iszero\n        /* \"AGC_FInal/AGCReward.sol\":701:742  amount > 0 && amount <= MAX_REWARD_AMOUNT */\n    tag_57:\n        /* \"AGC_FInal/AGCReward.sol\":693:809  require(amount > 0 && amount <= MAX_REWARD_AMOUNT, \"Amount must be greater than zero and less than or equal to 500\") */\n      tag_58\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_59\n      swap1\n      tag_60\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_58:\n        /* \"AGC_FInal/AGCReward.sol\":864:870  amount */\n      dup1\n        /* \"AGC_FInal/AGCReward.sol\":827:835  agcToken */\n      immutable(\"0x7af96f1f1efc65ed484a0803de1d90713519e6ec663d7600835d02d7249d71c5\")\n        /* \"AGC_FInal/AGCReward.sol\":827:845  agcToken.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"AGC_FInal/AGCReward.sol\":854:858  this */\n      address\n        /* \"AGC_FInal/AGCReward.sol\":827:860  agcToken.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_61\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_61:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_63\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_63:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_64\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_64:\n        /* \"AGC_FInal/AGCReward.sol\":827:870  agcToken.balanceOf(address(this)) >= amount */\n      lt\n      iszero\n        /* \"AGC_FInal/AGCReward.sol\":819:893  require(agcToken.balanceOf(address(this)) >= amount, \"Insufficient funds\") */\n      tag_65\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_66\n      swap1\n      tag_67\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_65:\n        /* \"AGC_FInal/AGCReward.sol\":903:911  agcToken */\n      immutable(\"0x7af96f1f1efc65ed484a0803de1d90713519e6ec663d7600835d02d7249d71c5\")\n        /* \"AGC_FInal/AGCReward.sol\":903:920  agcToken.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"AGC_FInal/AGCReward.sol\":921:925  user */\n      dup4\n        /* \"AGC_FInal/AGCReward.sol\":927:933  amount */\n      dup4\n        /* \"AGC_FInal/AGCReward.sol\":903:934  agcToken.transfer(user, amount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_68\n      swap3\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_68:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_71\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_71:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_72\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_72:\n      pop\n        /* \"AGC_FInal/AGCReward.sol\":962:966  user */\n      dup2\n        /* \"AGC_FInal/AGCReward.sol\":949:975  UserRewarded(user, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xe366ef68d2c0620e9e4c5074fd7ad0ce6739b65287f9c2d09b7d002da556879b\n        /* \"AGC_FInal/AGCReward.sol\":968:974  amount */\n      dup3\n        /* \"AGC_FInal/AGCReward.sol\":949:975  UserRewarded(user, amount) */\n      mload(0x40)\n      tag_74\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_75\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_76\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_75:\n        /* \"AGC_FInal/AGCReward.sol\":611:982  function rewardUser(address user, uint256 amount) external nonReentrant {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_39:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_78\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_42\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_78:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_80\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_81\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_80:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_82\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_45\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_82:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_42:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_84\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_85\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_84:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_86\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_19\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_86:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_87\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_88\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_85\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_88:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_89\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_87:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_45:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n    tag_55:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2475  _status */\n      sload(0x01)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2487  _status != _ENTERED */\n      sub\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_92\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_93\n      swap1\n      tag_94\n      jump\t// in\n    tag_93:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_92:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2605  _status */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2616  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n    tag_76:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2816  _status */\n      dup1\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2831  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_85:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:84   */\n    tag_97:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":73:78   */\n      dup2\n        /* \"#utility.yul\":62:78   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:84   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":90:208   */\n    tag_98:\n        /* \"#utility.yul\":177:201   */\n      tag_128\n        /* \"#utility.yul\":195:200   */\n      dup2\n        /* \"#utility.yul\":177:201   */\n      tag_97\n      jump\t// in\n    tag_128:\n        /* \"#utility.yul\":172:175   */\n      dup3\n        /* \"#utility.yul\":165:202   */\n      mstore\n        /* \"#utility.yul\":90:208   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":214:436   */\n    tag_17:\n        /* \"#utility.yul\":307:311   */\n      0x00\n        /* \"#utility.yul\":345:347   */\n      0x20\n        /* \"#utility.yul\":334:343   */\n      dup3\n        /* \"#utility.yul\":330:348   */\n      add\n        /* \"#utility.yul\":322:348   */\n      swap1\n      pop\n        /* \"#utility.yul\":358:429   */\n      tag_130\n        /* \"#utility.yul\":426:427   */\n      0x00\n        /* \"#utility.yul\":415:424   */\n      dup4\n        /* \"#utility.yul\":411:428   */\n      add\n        /* \"#utility.yul\":402:408   */\n      dup5\n        /* \"#utility.yul\":358:429   */\n      tag_98\n      jump\t// in\n    tag_130:\n        /* \"#utility.yul\":214:436   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":442:568   */\n    tag_99:\n        /* \"#utility.yul\":479:486   */\n      0x00\n        /* \"#utility.yul\":519:561   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":512:517   */\n      dup3\n        /* \"#utility.yul\":508:562   */\n      and\n        /* \"#utility.yul\":497:562   */\n      swap1\n      pop\n        /* \"#utility.yul\":442:568   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":574:670   */\n    tag_100:\n        /* \"#utility.yul\":611:618   */\n      0x00\n        /* \"#utility.yul\":640:664   */\n      tag_133\n        /* \"#utility.yul\":658:663   */\n      dup3\n        /* \"#utility.yul\":640:664   */\n      tag_99\n      jump\t// in\n    tag_133:\n        /* \"#utility.yul\":629:664   */\n      swap1\n      pop\n        /* \"#utility.yul\":574:670   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":676:794   */\n    tag_101:\n        /* \"#utility.yul\":763:787   */\n      tag_135\n        /* \"#utility.yul\":781:786   */\n      dup2\n        /* \"#utility.yul\":763:787   */\n      tag_100\n      jump\t// in\n    tag_135:\n        /* \"#utility.yul\":758:761   */\n      dup3\n        /* \"#utility.yul\":751:788   */\n      mstore\n        /* \"#utility.yul\":676:794   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":800:1022   */\n    tag_21:\n        /* \"#utility.yul\":893:897   */\n      0x00\n        /* \"#utility.yul\":931:933   */\n      0x20\n        /* \"#utility.yul\":920:929   */\n      dup3\n        /* \"#utility.yul\":916:934   */\n      add\n        /* \"#utility.yul\":908:934   */\n      swap1\n      pop\n        /* \"#utility.yul\":944:1015   */\n      tag_137\n        /* \"#utility.yul\":1012:1013   */\n      0x00\n        /* \"#utility.yul\":1001:1010   */\n      dup4\n        /* \"#utility.yul\":997:1014   */\n      add\n        /* \"#utility.yul\":988:994   */\n      dup5\n        /* \"#utility.yul\":944:1015   */\n      tag_101\n      jump\t// in\n    tag_137:\n        /* \"#utility.yul\":800:1022   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1028:1088   */\n    tag_102:\n        /* \"#utility.yul\":1056:1059   */\n      0x00\n        /* \"#utility.yul\":1077:1082   */\n      dup2\n        /* \"#utility.yul\":1070:1082   */\n      swap1\n      pop\n        /* \"#utility.yul\":1028:1088   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1094:1236   */\n    tag_103:\n        /* \"#utility.yul\":1144:1153   */\n      0x00\n        /* \"#utility.yul\":1177:1230   */\n      tag_140\n        /* \"#utility.yul\":1195:1229   */\n      tag_141\n        /* \"#utility.yul\":1204:1228   */\n      tag_142\n        /* \"#utility.yul\":1222:1227   */\n      dup5\n        /* \"#utility.yul\":1204:1228   */\n      tag_99\n      jump\t// in\n    tag_142:\n        /* \"#utility.yul\":1195:1229   */\n      tag_102\n      jump\t// in\n    tag_141:\n        /* \"#utility.yul\":1177:1230   */\n      tag_99\n      jump\t// in\n    tag_140:\n        /* \"#utility.yul\":1164:1230   */\n      swap1\n      pop\n        /* \"#utility.yul\":1094:1236   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1242:1368   */\n    tag_104:\n        /* \"#utility.yul\":1292:1301   */\n      0x00\n        /* \"#utility.yul\":1325:1362   */\n      tag_144\n        /* \"#utility.yul\":1356:1361   */\n      dup3\n        /* \"#utility.yul\":1325:1362   */\n      tag_103\n      jump\t// in\n    tag_144:\n        /* \"#utility.yul\":1312:1362   */\n      swap1\n      pop\n        /* \"#utility.yul\":1242:1368   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1374:1514   */\n    tag_105:\n        /* \"#utility.yul\":1438:1447   */\n      0x00\n        /* \"#utility.yul\":1471:1508   */\n      tag_146\n        /* \"#utility.yul\":1502:1507   */\n      dup3\n        /* \"#utility.yul\":1471:1508   */\n      tag_104\n      jump\t// in\n    tag_146:\n        /* \"#utility.yul\":1458:1508   */\n      swap1\n      pop\n        /* \"#utility.yul\":1374:1514   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1520:1679   */\n    tag_106:\n        /* \"#utility.yul\":1621:1672   */\n      tag_148\n        /* \"#utility.yul\":1666:1671   */\n      dup2\n        /* \"#utility.yul\":1621:1672   */\n      tag_105\n      jump\t// in\n    tag_148:\n        /* \"#utility.yul\":1616:1619   */\n      dup3\n        /* \"#utility.yul\":1609:1673   */\n      mstore\n        /* \"#utility.yul\":1520:1679   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1685:1935   */\n    tag_28:\n        /* \"#utility.yul\":1792:1796   */\n      0x00\n        /* \"#utility.yul\":1830:1832   */\n      0x20\n        /* \"#utility.yul\":1819:1828   */\n      dup3\n        /* \"#utility.yul\":1815:1833   */\n      add\n        /* \"#utility.yul\":1807:1833   */\n      swap1\n      pop\n        /* \"#utility.yul\":1843:1928   */\n      tag_150\n        /* \"#utility.yul\":1925:1926   */\n      0x00\n        /* \"#utility.yul\":1914:1923   */\n      dup4\n        /* \"#utility.yul\":1910:1927   */\n      add\n        /* \"#utility.yul\":1901:1907   */\n      dup5\n        /* \"#utility.yul\":1843:1928   */\n      tag_106\n      jump\t// in\n    tag_150:\n        /* \"#utility.yul\":1685:1935   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2022:2139   */\n    tag_108:\n        /* \"#utility.yul\":2131:2132   */\n      0x00\n        /* \"#utility.yul\":2128:2129   */\n      dup1\n        /* \"#utility.yul\":2121:2133   */\n      revert\n        /* \"#utility.yul\":2268:2390   */\n    tag_110:\n        /* \"#utility.yul\":2341:2365   */\n      tag_155\n        /* \"#utility.yul\":2359:2364   */\n      dup2\n        /* \"#utility.yul\":2341:2365   */\n      tag_100\n      jump\t// in\n    tag_155:\n        /* \"#utility.yul\":2334:2339   */\n      dup2\n        /* \"#utility.yul\":2331:2366   */\n      eq\n        /* \"#utility.yul\":2321:2384   */\n      tag_156\n      jumpi\n        /* \"#utility.yul\":2380:2381   */\n      0x00\n        /* \"#utility.yul\":2377:2378   */\n      dup1\n        /* \"#utility.yul\":2370:2382   */\n      revert\n        /* \"#utility.yul\":2321:2384   */\n    tag_156:\n        /* \"#utility.yul\":2268:2390   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2396:2535   */\n    tag_111:\n        /* \"#utility.yul\":2442:2447   */\n      0x00\n        /* \"#utility.yul\":2480:2486   */\n      dup2\n        /* \"#utility.yul\":2467:2487   */\n      calldataload\n        /* \"#utility.yul\":2458:2487   */\n      swap1\n      pop\n        /* \"#utility.yul\":2496:2529   */\n      tag_158\n        /* \"#utility.yul\":2523:2528   */\n      dup2\n        /* \"#utility.yul\":2496:2529   */\n      tag_110\n      jump\t// in\n    tag_158:\n        /* \"#utility.yul\":2396:2535   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2541:2663   */\n    tag_112:\n        /* \"#utility.yul\":2614:2638   */\n      tag_160\n        /* \"#utility.yul\":2632:2637   */\n      dup2\n        /* \"#utility.yul\":2614:2638   */\n      tag_97\n      jump\t// in\n    tag_160:\n        /* \"#utility.yul\":2607:2612   */\n      dup2\n        /* \"#utility.yul\":2604:2639   */\n      eq\n        /* \"#utility.yul\":2594:2657   */\n      tag_161\n      jumpi\n        /* \"#utility.yul\":2653:2654   */\n      0x00\n        /* \"#utility.yul\":2650:2651   */\n      dup1\n        /* \"#utility.yul\":2643:2655   */\n      revert\n        /* \"#utility.yul\":2594:2657   */\n    tag_161:\n        /* \"#utility.yul\":2541:2663   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2669:2808   */\n    tag_113:\n        /* \"#utility.yul\":2715:2720   */\n      0x00\n        /* \"#utility.yul\":2753:2759   */\n      dup2\n        /* \"#utility.yul\":2740:2760   */\n      calldataload\n        /* \"#utility.yul\":2731:2760   */\n      swap1\n      pop\n        /* \"#utility.yul\":2769:2802   */\n      tag_163\n        /* \"#utility.yul\":2796:2801   */\n      dup2\n        /* \"#utility.yul\":2769:2802   */\n      tag_112\n      jump\t// in\n    tag_163:\n        /* \"#utility.yul\":2669:2808   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2814:3288   */\n    tag_34:\n        /* \"#utility.yul\":2882:2888   */\n      0x00\n        /* \"#utility.yul\":2890:2896   */\n      dup1\n        /* \"#utility.yul\":2939:2941   */\n      0x40\n        /* \"#utility.yul\":2927:2936   */\n      dup4\n        /* \"#utility.yul\":2918:2925   */\n      dup6\n        /* \"#utility.yul\":2914:2937   */\n      sub\n        /* \"#utility.yul\":2910:2942   */\n      slt\n        /* \"#utility.yul\":2907:3026   */\n      iszero\n      tag_165\n      jumpi\n        /* \"#utility.yul\":2945:3024   */\n      tag_166\n      tag_108\n      jump\t// in\n    tag_166:\n        /* \"#utility.yul\":2907:3026   */\n    tag_165:\n        /* \"#utility.yul\":3065:3066   */\n      0x00\n        /* \"#utility.yul\":3090:3143   */\n      tag_167\n        /* \"#utility.yul\":3135:3142   */\n      dup6\n        /* \"#utility.yul\":3126:3132   */\n      dup3\n        /* \"#utility.yul\":3115:3124   */\n      dup7\n        /* \"#utility.yul\":3111:3133   */\n      add\n        /* \"#utility.yul\":3090:3143   */\n      tag_111\n      jump\t// in\n    tag_167:\n        /* \"#utility.yul\":3080:3143   */\n      swap3\n      pop\n        /* \"#utility.yul\":3036:3153   */\n      pop\n        /* \"#utility.yul\":3192:3194   */\n      0x20\n        /* \"#utility.yul\":3218:3271   */\n      tag_168\n        /* \"#utility.yul\":3263:3270   */\n      dup6\n        /* \"#utility.yul\":3254:3260   */\n      dup3\n        /* \"#utility.yul\":3243:3252   */\n      dup7\n        /* \"#utility.yul\":3239:3261   */\n      add\n        /* \"#utility.yul\":3218:3271   */\n      tag_113\n      jump\t// in\n    tag_168:\n        /* \"#utility.yul\":3208:3271   */\n      swap2\n      pop\n        /* \"#utility.yul\":3163:3281   */\n      pop\n        /* \"#utility.yul\":2814:3288   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3294:3623   */\n    tag_38:\n        /* \"#utility.yul\":3353:3359   */\n      0x00\n        /* \"#utility.yul\":3402:3404   */\n      0x20\n        /* \"#utility.yul\":3390:3399   */\n      dup3\n        /* \"#utility.yul\":3381:3388   */\n      dup5\n        /* \"#utility.yul\":3377:3400   */\n      sub\n        /* \"#utility.yul\":3373:3405   */\n      slt\n        /* \"#utility.yul\":3370:3489   */\n      iszero\n      tag_170\n      jumpi\n        /* \"#utility.yul\":3408:3487   */\n      tag_171\n      tag_108\n      jump\t// in\n    tag_171:\n        /* \"#utility.yul\":3370:3489   */\n    tag_170:\n        /* \"#utility.yul\":3528:3529   */\n      0x00\n        /* \"#utility.yul\":3553:3606   */\n      tag_172\n        /* \"#utility.yul\":3598:3605   */\n      dup5\n        /* \"#utility.yul\":3589:3595   */\n      dup3\n        /* \"#utility.yul\":3578:3587   */\n      dup6\n        /* \"#utility.yul\":3574:3596   */\n      add\n        /* \"#utility.yul\":3553:3606   */\n      tag_111\n      jump\t// in\n    tag_172:\n        /* \"#utility.yul\":3543:3606   */\n      swap2\n      pop\n        /* \"#utility.yul\":3499:3616   */\n      pop\n        /* \"#utility.yul\":3294:3623   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3629:3772   */\n    tag_114:\n        /* \"#utility.yul\":3686:3691   */\n      0x00\n        /* \"#utility.yul\":3717:3723   */\n      dup2\n        /* \"#utility.yul\":3711:3724   */\n      mload\n        /* \"#utility.yul\":3702:3724   */\n      swap1\n      pop\n        /* \"#utility.yul\":3733:3766   */\n      tag_174\n        /* \"#utility.yul\":3760:3765   */\n      dup2\n        /* \"#utility.yul\":3733:3766   */\n      tag_112\n      jump\t// in\n    tag_174:\n        /* \"#utility.yul\":3629:3772   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3778:4129   */\n    tag_52:\n        /* \"#utility.yul\":3848:3854   */\n      0x00\n        /* \"#utility.yul\":3897:3899   */\n      0x20\n        /* \"#utility.yul\":3885:3894   */\n      dup3\n        /* \"#utility.yul\":3876:3883   */\n      dup5\n        /* \"#utility.yul\":3872:3895   */\n      sub\n        /* \"#utility.yul\":3868:3900   */\n      slt\n        /* \"#utility.yul\":3865:3984   */\n      iszero\n      tag_176\n      jumpi\n        /* \"#utility.yul\":3903:3982   */\n      tag_177\n      tag_108\n      jump\t// in\n    tag_177:\n        /* \"#utility.yul\":3865:3984   */\n    tag_176:\n        /* \"#utility.yul\":4023:4024   */\n      0x00\n        /* \"#utility.yul\":4048:4112   */\n      tag_178\n        /* \"#utility.yul\":4104:4111   */\n      dup5\n        /* \"#utility.yul\":4095:4101   */\n      dup3\n        /* \"#utility.yul\":4084:4093   */\n      dup6\n        /* \"#utility.yul\":4080:4102   */\n      add\n        /* \"#utility.yul\":4048:4112   */\n      tag_114\n      jump\t// in\n    tag_178:\n        /* \"#utility.yul\":4038:4112   */\n      swap2\n      pop\n        /* \"#utility.yul\":3994:4122   */\n      pop\n        /* \"#utility.yul\":3778:4129   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4135:4304   */\n    tag_115:\n        /* \"#utility.yul\":4219:4230   */\n      0x00\n        /* \"#utility.yul\":4253:4259   */\n      dup3\n        /* \"#utility.yul\":4248:4251   */\n      dup3\n        /* \"#utility.yul\":4241:4260   */\n      mstore\n        /* \"#utility.yul\":4293:4297   */\n      0x20\n        /* \"#utility.yul\":4288:4291   */\n      dup3\n        /* \"#utility.yul\":4284:4298   */\n      add\n        /* \"#utility.yul\":4269:4298   */\n      swap1\n      pop\n        /* \"#utility.yul\":4135:4304   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4310:4559   */\n    tag_116:\n        /* \"#utility.yul\":4450:4484   */\n      0x416d6f756e74206d7573742062652067726561746572207468616e207a65726f\n        /* \"#utility.yul\":4446:4447   */\n      0x00\n        /* \"#utility.yul\":4438:4444   */\n      dup3\n        /* \"#utility.yul\":4434:4448   */\n      add\n        /* \"#utility.yul\":4427:4485   */\n      mstore\n        /* \"#utility.yul\":4519:4551   */\n      0x20616e64206c657373207468616e206f7220657175616c20746f203530300000\n        /* \"#utility.yul\":4514:4516   */\n      0x20\n        /* \"#utility.yul\":4506:4512   */\n      dup3\n        /* \"#utility.yul\":4502:4517   */\n      add\n        /* \"#utility.yul\":4495:4552   */\n      mstore\n        /* \"#utility.yul\":4310:4559   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4565:4931   */\n    tag_117:\n        /* \"#utility.yul\":4707:4710   */\n      0x00\n        /* \"#utility.yul\":4728:4795   */\n      tag_182\n        /* \"#utility.yul\":4792:4794   */\n      0x3e\n        /* \"#utility.yul\":4787:4790   */\n      dup4\n        /* \"#utility.yul\":4728:4795   */\n      tag_115\n      jump\t// in\n    tag_182:\n        /* \"#utility.yul\":4721:4795   */\n      swap2\n      pop\n        /* \"#utility.yul\":4804:4897   */\n      tag_183\n        /* \"#utility.yul\":4893:4896   */\n      dup3\n        /* \"#utility.yul\":4804:4897   */\n      tag_116\n      jump\t// in\n    tag_183:\n        /* \"#utility.yul\":4922:4924   */\n      0x40\n        /* \"#utility.yul\":4917:4920   */\n      dup3\n        /* \"#utility.yul\":4913:4925   */\n      add\n        /* \"#utility.yul\":4906:4925   */\n      swap1\n      pop\n        /* \"#utility.yul\":4565:4931   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4937:5356   */\n    tag_60:\n        /* \"#utility.yul\":5103:5107   */\n      0x00\n        /* \"#utility.yul\":5141:5143   */\n      0x20\n        /* \"#utility.yul\":5130:5139   */\n      dup3\n        /* \"#utility.yul\":5126:5144   */\n      add\n        /* \"#utility.yul\":5118:5144   */\n      swap1\n      pop\n        /* \"#utility.yul\":5190:5199   */\n      dup2\n        /* \"#utility.yul\":5184:5188   */\n      dup2\n        /* \"#utility.yul\":5180:5200   */\n      sub\n        /* \"#utility.yul\":5176:5177   */\n      0x00\n        /* \"#utility.yul\":5165:5174   */\n      dup4\n        /* \"#utility.yul\":5161:5178   */\n      add\n        /* \"#utility.yul\":5154:5201   */\n      mstore\n        /* \"#utility.yul\":5218:5349   */\n      tag_185\n        /* \"#utility.yul\":5344:5348   */\n      dup2\n        /* \"#utility.yul\":5218:5349   */\n      tag_117\n      jump\t// in\n    tag_185:\n        /* \"#utility.yul\":5210:5349   */\n      swap1\n      pop\n        /* \"#utility.yul\":4937:5356   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5362:5530   */\n    tag_118:\n        /* \"#utility.yul\":5502:5522   */\n      0x496e73756666696369656e742066756e64730000000000000000000000000000\n        /* \"#utility.yul\":5498:5499   */\n      0x00\n        /* \"#utility.yul\":5490:5496   */\n      dup3\n        /* \"#utility.yul\":5486:5500   */\n      add\n        /* \"#utility.yul\":5479:5523   */\n      mstore\n        /* \"#utility.yul\":5362:5530   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5536:5902   */\n    tag_119:\n        /* \"#utility.yul\":5678:5681   */\n      0x00\n        /* \"#utility.yul\":5699:5766   */\n      tag_188\n        /* \"#utility.yul\":5763:5765   */\n      0x12\n        /* \"#utility.yul\":5758:5761   */\n      dup4\n        /* \"#utility.yul\":5699:5766   */\n      tag_115\n      jump\t// in\n    tag_188:\n        /* \"#utility.yul\":5692:5766   */\n      swap2\n      pop\n        /* \"#utility.yul\":5775:5868   */\n      tag_189\n        /* \"#utility.yul\":5864:5867   */\n      dup3\n        /* \"#utility.yul\":5775:5868   */\n      tag_118\n      jump\t// in\n    tag_189:\n        /* \"#utility.yul\":5893:5895   */\n      0x20\n        /* \"#utility.yul\":5888:5891   */\n      dup3\n        /* \"#utility.yul\":5884:5896   */\n      add\n        /* \"#utility.yul\":5877:5896   */\n      swap1\n      pop\n        /* \"#utility.yul\":5536:5902   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5908:6327   */\n    tag_67:\n        /* \"#utility.yul\":6074:6078   */\n      0x00\n        /* \"#utility.yul\":6112:6114   */\n      0x20\n        /* \"#utility.yul\":6101:6110   */\n      dup3\n        /* \"#utility.yul\":6097:6115   */\n      add\n        /* \"#utility.yul\":6089:6115   */\n      swap1\n      pop\n        /* \"#utility.yul\":6161:6170   */\n      dup2\n        /* \"#utility.yul\":6155:6159   */\n      dup2\n        /* \"#utility.yul\":6151:6171   */\n      sub\n        /* \"#utility.yul\":6147:6148   */\n      0x00\n        /* \"#utility.yul\":6136:6145   */\n      dup4\n        /* \"#utility.yul\":6132:6149   */\n      add\n        /* \"#utility.yul\":6125:6172   */\n      mstore\n        /* \"#utility.yul\":6189:6320   */\n      tag_191\n        /* \"#utility.yul\":6315:6319   */\n      dup2\n        /* \"#utility.yul\":6189:6320   */\n      tag_119\n      jump\t// in\n    tag_191:\n        /* \"#utility.yul\":6181:6320   */\n      swap1\n      pop\n        /* \"#utility.yul\":5908:6327   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6333:6665   */\n    tag_69:\n        /* \"#utility.yul\":6454:6458   */\n      0x00\n        /* \"#utility.yul\":6492:6494   */\n      0x40\n        /* \"#utility.yul\":6481:6490   */\n      dup3\n        /* \"#utility.yul\":6477:6495   */\n      add\n        /* \"#utility.yul\":6469:6495   */\n      swap1\n      pop\n        /* \"#utility.yul\":6505:6576   */\n      tag_193\n        /* \"#utility.yul\":6573:6574   */\n      0x00\n        /* \"#utility.yul\":6562:6571   */\n      dup4\n        /* \"#utility.yul\":6558:6575   */\n      add\n        /* \"#utility.yul\":6549:6555   */\n      dup6\n        /* \"#utility.yul\":6505:6576   */\n      tag_101\n      jump\t// in\n    tag_193:\n        /* \"#utility.yul\":6586:6658   */\n      tag_194\n        /* \"#utility.yul\":6654:6656   */\n      0x20\n        /* \"#utility.yul\":6643:6652   */\n      dup4\n        /* \"#utility.yul\":6639:6657   */\n      add\n        /* \"#utility.yul\":6630:6636   */\n      dup5\n        /* \"#utility.yul\":6586:6658   */\n      tag_98\n      jump\t// in\n    tag_194:\n        /* \"#utility.yul\":6333:6665   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6671:6761   */\n    tag_120:\n        /* \"#utility.yul\":6705:6712   */\n      0x00\n        /* \"#utility.yul\":6748:6753   */\n      dup2\n        /* \"#utility.yul\":6741:6754   */\n      iszero\n        /* \"#utility.yul\":6734:6755   */\n      iszero\n        /* \"#utility.yul\":6723:6755   */\n      swap1\n      pop\n        /* \"#utility.yul\":6671:6761   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6767:6883   */\n    tag_121:\n        /* \"#utility.yul\":6837:6858   */\n      tag_197\n        /* \"#utility.yul\":6852:6857   */\n      dup2\n        /* \"#utility.yul\":6837:6858   */\n      tag_120\n      jump\t// in\n    tag_197:\n        /* \"#utility.yul\":6830:6835   */\n      dup2\n        /* \"#utility.yul\":6827:6859   */\n      eq\n        /* \"#utility.yul\":6817:6877   */\n      tag_198\n      jumpi\n        /* \"#utility.yul\":6873:6874   */\n      0x00\n        /* \"#utility.yul\":6870:6871   */\n      dup1\n        /* \"#utility.yul\":6863:6875   */\n      revert\n        /* \"#utility.yul\":6817:6877   */\n    tag_198:\n        /* \"#utility.yul\":6767:6883   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6889:7026   */\n    tag_122:\n        /* \"#utility.yul\":6943:6948   */\n      0x00\n        /* \"#utility.yul\":6974:6980   */\n      dup2\n        /* \"#utility.yul\":6968:6981   */\n      mload\n        /* \"#utility.yul\":6959:6981   */\n      swap1\n      pop\n        /* \"#utility.yul\":6990:7020   */\n      tag_200\n        /* \"#utility.yul\":7014:7019   */\n      dup2\n        /* \"#utility.yul\":6990:7020   */\n      tag_121\n      jump\t// in\n    tag_200:\n        /* \"#utility.yul\":6889:7026   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7032:7377   */\n    tag_73:\n        /* \"#utility.yul\":7099:7105   */\n      0x00\n        /* \"#utility.yul\":7148:7150   */\n      0x20\n        /* \"#utility.yul\":7136:7145   */\n      dup3\n        /* \"#utility.yul\":7127:7134   */\n      dup5\n        /* \"#utility.yul\":7123:7146   */\n      sub\n        /* \"#utility.yul\":7119:7151   */\n      slt\n        /* \"#utility.yul\":7116:7235   */\n      iszero\n      tag_202\n      jumpi\n        /* \"#utility.yul\":7154:7233   */\n      tag_203\n      tag_108\n      jump\t// in\n    tag_203:\n        /* \"#utility.yul\":7116:7235   */\n    tag_202:\n        /* \"#utility.yul\":7274:7275   */\n      0x00\n        /* \"#utility.yul\":7299:7360   */\n      tag_204\n        /* \"#utility.yul\":7352:7359   */\n      dup5\n        /* \"#utility.yul\":7343:7349   */\n      dup3\n        /* \"#utility.yul\":7332:7341   */\n      dup6\n        /* \"#utility.yul\":7328:7350   */\n      add\n        /* \"#utility.yul\":7299:7360   */\n      tag_122\n      jump\t// in\n    tag_204:\n        /* \"#utility.yul\":7289:7360   */\n      swap2\n      pop\n        /* \"#utility.yul\":7245:7370   */\n      pop\n        /* \"#utility.yul\":7032:7377   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7383:7564   */\n    tag_123:\n        /* \"#utility.yul\":7523:7556   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":7519:7520   */\n      0x00\n        /* \"#utility.yul\":7511:7517   */\n      dup3\n        /* \"#utility.yul\":7507:7521   */\n      add\n        /* \"#utility.yul\":7500:7557   */\n      mstore\n        /* \"#utility.yul\":7383:7564   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7570:7936   */\n    tag_124:\n        /* \"#utility.yul\":7712:7715   */\n      0x00\n        /* \"#utility.yul\":7733:7800   */\n      tag_207\n        /* \"#utility.yul\":7797:7799   */\n      0x1f\n        /* \"#utility.yul\":7792:7795   */\n      dup4\n        /* \"#utility.yul\":7733:7800   */\n      tag_115\n      jump\t// in\n    tag_207:\n        /* \"#utility.yul\":7726:7800   */\n      swap2\n      pop\n        /* \"#utility.yul\":7809:7902   */\n      tag_208\n        /* \"#utility.yul\":7898:7901   */\n      dup3\n        /* \"#utility.yul\":7809:7902   */\n      tag_123\n      jump\t// in\n    tag_208:\n        /* \"#utility.yul\":7927:7929   */\n      0x20\n        /* \"#utility.yul\":7922:7925   */\n      dup3\n        /* \"#utility.yul\":7918:7930   */\n      add\n        /* \"#utility.yul\":7911:7930   */\n      swap1\n      pop\n        /* \"#utility.yul\":7570:7936   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7942:8361   */\n    tag_94:\n        /* \"#utility.yul\":8108:8112   */\n      0x00\n        /* \"#utility.yul\":8146:8148   */\n      0x20\n        /* \"#utility.yul\":8135:8144   */\n      dup3\n        /* \"#utility.yul\":8131:8149   */\n      add\n        /* \"#utility.yul\":8123:8149   */\n      swap1\n      pop\n        /* \"#utility.yul\":8195:8204   */\n      dup2\n        /* \"#utility.yul\":8189:8193   */\n      dup2\n        /* \"#utility.yul\":8185:8205   */\n      sub\n        /* \"#utility.yul\":8181:8182   */\n      0x00\n        /* \"#utility.yul\":8170:8179   */\n      dup4\n        /* \"#utility.yul\":8166:8183   */\n      add\n        /* \"#utility.yul\":8159:8206   */\n      mstore\n        /* \"#utility.yul\":8223:8354   */\n      tag_210\n        /* \"#utility.yul\":8349:8353   */\n      dup2\n        /* \"#utility.yul\":8223:8354   */\n      tag_124\n      jump\t// in\n    tag_210:\n        /* \"#utility.yul\":8215:8354   */\n      swap1\n      pop\n        /* \"#utility.yul\":7942:8361   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220e337a088448733aa69ec55fa078bfa50ca898c0708feac8d109515e0a8ba49aa64736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_166": {
									"entryPoint": null,
									"id": 166,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_364": {
									"entryPoint": null,
									"id": 364,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 254,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 526,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 548,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 596,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 613,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 482,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 451,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 447,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 501,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1551:5",
										"nodeType": "YulBlock",
										"src": "0:1551:5",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:5",
													"nodeType": "YulBlock",
													"src": "47:35:5",
													"statements": [
														{
															"nativeSrc": "57:19:5",
															"nodeType": "YulAssignment",
															"src": "57:19:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:5",
																		"nodeType": "YulLiteral",
																		"src": "73:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:5"
																},
																"nativeSrc": "67:9:5",
																"nodeType": "YulFunctionCall",
																"src": "67:9:5"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:5"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:5",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:5",
														"nodeType": "YulTypedName",
														"src": "40:6:5",
														"type": ""
													}
												],
												"src": "7:75:5"
											},
											{
												"body": {
													"nativeSrc": "177:28:5",
													"nodeType": "YulBlock",
													"src": "177:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:5",
																		"nodeType": "YulLiteral",
																		"src": "194:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:5",
																		"nodeType": "YulLiteral",
																		"src": "197:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:5"
																},
																"nativeSrc": "187:12:5",
																"nodeType": "YulFunctionCall",
																"src": "187:12:5"
															},
															"nativeSrc": "187:12:5",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:5"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:5",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:5"
											},
											{
												"body": {
													"nativeSrc": "300:28:5",
													"nodeType": "YulBlock",
													"src": "300:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:5",
																		"nodeType": "YulLiteral",
																		"src": "317:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:5",
																		"nodeType": "YulLiteral",
																		"src": "320:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:5"
																},
																"nativeSrc": "310:12:5",
																"nodeType": "YulFunctionCall",
																"src": "310:12:5"
															},
															"nativeSrc": "310:12:5",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:5"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:5",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:5"
											},
											{
												"body": {
													"nativeSrc": "379:81:5",
													"nodeType": "YulBlock",
													"src": "379:81:5",
													"statements": [
														{
															"nativeSrc": "389:65:5",
															"nodeType": "YulAssignment",
															"src": "389:65:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:5",
																		"nodeType": "YulLiteral",
																		"src": "411:42:5",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:5"
																},
																"nativeSrc": "400:54:5",
																"nodeType": "YulFunctionCall",
																"src": "400:54:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:5",
														"nodeType": "YulTypedName",
														"src": "361:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:5",
														"nodeType": "YulTypedName",
														"src": "371:7:5",
														"type": ""
													}
												],
												"src": "334:126:5"
											},
											{
												"body": {
													"nativeSrc": "511:51:5",
													"nodeType": "YulBlock",
													"src": "511:51:5",
													"statements": [
														{
															"nativeSrc": "521:35:5",
															"nodeType": "YulAssignment",
															"src": "521:35:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:5"
																},
																"nativeSrc": "532:24:5",
																"nodeType": "YulFunctionCall",
																"src": "532:24:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:5",
														"nodeType": "YulTypedName",
														"src": "493:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:5",
														"nodeType": "YulTypedName",
														"src": "503:7:5",
														"type": ""
													}
												],
												"src": "466:96:5"
											},
											{
												"body": {
													"nativeSrc": "611:79:5",
													"nodeType": "YulBlock",
													"src": "611:79:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:5",
																"nodeType": "YulBlock",
																"src": "668:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:5",
																					"nodeType": "YulLiteral",
																					"src": "677:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:5",
																					"nodeType": "YulLiteral",
																					"src": "680:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:5"
																			},
																			"nativeSrc": "670:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:5"
																		},
																		"nativeSrc": "670:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:5",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:5"
																				},
																				"nativeSrc": "641:24:5",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:5"
																		},
																		"nativeSrc": "631:35:5",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:5"
																},
																"nativeSrc": "624:43:5",
																"nodeType": "YulFunctionCall",
																"src": "624:43:5"
															},
															"nativeSrc": "621:63:5",
															"nodeType": "YulIf",
															"src": "621:63:5"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:5",
														"nodeType": "YulTypedName",
														"src": "604:5:5",
														"type": ""
													}
												],
												"src": "568:122:5"
											},
											{
												"body": {
													"nativeSrc": "759:80:5",
													"nodeType": "YulBlock",
													"src": "759:80:5",
													"statements": [
														{
															"nativeSrc": "769:22:5",
															"nodeType": "YulAssignment",
															"src": "769:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:5"
																},
																"nativeSrc": "778:13:5",
																"nodeType": "YulFunctionCall",
																"src": "778:13:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:5",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:5"
																},
																"nativeSrc": "800:33:5",
																"nodeType": "YulFunctionCall",
																"src": "800:33:5"
															},
															"nativeSrc": "800:33:5",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:5"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:5",
														"nodeType": "YulTypedName",
														"src": "737:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:5",
														"nodeType": "YulTypedName",
														"src": "745:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:5",
														"nodeType": "YulTypedName",
														"src": "753:5:5",
														"type": ""
													}
												],
												"src": "696:143:5"
											},
											{
												"body": {
													"nativeSrc": "922:274:5",
													"nodeType": "YulBlock",
													"src": "922:274:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "968:83:5",
																"nodeType": "YulBlock",
																"src": "968:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "970:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "970:77:5"
																			},
																			"nativeSrc": "970:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "970:79:5"
																		},
																		"nativeSrc": "970:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "970:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "943:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "943:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "952:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "952:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "939:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "939:3:5"
																		},
																		"nativeSrc": "939:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "939:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "964:2:5",
																		"nodeType": "YulLiteral",
																		"src": "964:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "935:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:5"
																},
																"nativeSrc": "935:32:5",
																"nodeType": "YulFunctionCall",
																"src": "935:32:5"
															},
															"nativeSrc": "932:119:5",
															"nodeType": "YulIf",
															"src": "932:119:5"
														},
														{
															"nativeSrc": "1061:128:5",
															"nodeType": "YulBlock",
															"src": "1061:128:5",
															"statements": [
																{
																	"nativeSrc": "1076:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1076:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1090:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1080:6:5",
																			"nodeType": "YulTypedName",
																			"src": "1080:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1105:74:5",
																	"nodeType": "YulAssignment",
																	"src": "1105:74:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1151:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "1151:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1162:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "1162:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1147:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "1147:3:5"
																				},
																				"nativeSrc": "1147:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1147:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1171:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "1171:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1115:31:5",
																			"nodeType": "YulIdentifier",
																			"src": "1115:31:5"
																		},
																		"nativeSrc": "1115:64:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1115:64:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1105:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "1105:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "845:351:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "892:9:5",
														"nodeType": "YulTypedName",
														"src": "892:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "903:7:5",
														"nodeType": "YulTypedName",
														"src": "903:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "915:6:5",
														"nodeType": "YulTypedName",
														"src": "915:6:5",
														"type": ""
													}
												],
												"src": "845:351:5"
											},
											{
												"body": {
													"nativeSrc": "1267:53:5",
													"nodeType": "YulBlock",
													"src": "1267:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1284:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "1284:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1307:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "1307:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "1289:17:5",
																			"nodeType": "YulIdentifier",
																			"src": "1289:17:5"
																		},
																		"nativeSrc": "1289:24:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1289:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1277:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1277:6:5"
																},
																"nativeSrc": "1277:37:5",
																"nodeType": "YulFunctionCall",
																"src": "1277:37:5"
															},
															"nativeSrc": "1277:37:5",
															"nodeType": "YulExpressionStatement",
															"src": "1277:37:5"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "1202:118:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1255:5:5",
														"nodeType": "YulTypedName",
														"src": "1255:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1262:3:5",
														"nodeType": "YulTypedName",
														"src": "1262:3:5",
														"type": ""
													}
												],
												"src": "1202:118:5"
											},
											{
												"body": {
													"nativeSrc": "1424:124:5",
													"nodeType": "YulBlock",
													"src": "1424:124:5",
													"statements": [
														{
															"nativeSrc": "1434:26:5",
															"nodeType": "YulAssignment",
															"src": "1434:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1446:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "1446:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1457:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1457:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1442:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1442:3:5"
																},
																"nativeSrc": "1442:18:5",
																"nodeType": "YulFunctionCall",
																"src": "1442:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1434:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "1434:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1514:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "1514:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1527:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1527:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1538:1:5",
																				"nodeType": "YulLiteral",
																				"src": "1538:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1523:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1523:3:5"
																		},
																		"nativeSrc": "1523:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1523:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "1470:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "1470:43:5"
																},
																"nativeSrc": "1470:71:5",
																"nodeType": "YulFunctionCall",
																"src": "1470:71:5"
															},
															"nativeSrc": "1470:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "1470:71:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1326:222:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1396:9:5",
														"nodeType": "YulTypedName",
														"src": "1396:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1408:6:5",
														"nodeType": "YulTypedName",
														"src": "1408:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1419:4:5",
														"nodeType": "YulTypedName",
														"src": "1419:4:5",
														"type": ""
													}
												],
												"src": "1326:222:5"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60a060405234801562000010575f80fd5b5060405162000d9f38038062000d9f833981810160405281019062000036919062000224565b335f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620000aa575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401620000a1919062000265565b60405180910390fd5b620000bb81620000fe60201b60201c565b50600180819055508073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250505062000280565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f620001ee82620001c3565b9050919050565b6200020081620001e2565b81146200020b575f80fd5b50565b5f815190506200021e81620001f5565b92915050565b5f602082840312156200023c576200023b620001bf565b5b5f6200024b848285016200020e565b91505092915050565b6200025f81620001e2565b82525050565b5f6020820190506200027a5f83018462000254565b92915050565b608051610af1620002ae5f395f81816101af015281816101d4015281816102d101526103aa0152610af15ff3fe608060405234801561000f575f80fd5b5060043610610086575f3560e01c8063c39124ab11610059578063c39124ab146100ee578063c71daccb1461010c578063e4e103dc1461012a578063f2fde38b1461014657610086565b8063715018a61461008a57806386a35f25146100945780638da5cb5b146100b2578063a04f6b4b146100d0575b5f80fd5b610092610162565b005b61009c610175565b6040516100a991906106e1565b60405180910390f35b6100ba610179565b6040516100c79190610739565b60405180910390f35b6100d86101a0565b6040516100e591906106e1565b60405180910390f35b6100f66101ad565b60405161010391906107ad565b60405180910390f35b6101146101d1565b60405161012191906106e1565b60405180910390f35b610144600480360381019061013f919061081e565b61026f565b005b610160600480360381019061015b919061085c565b61049e565b005b61016a610522565b6101735f6105a9565b565b5f81565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b681b1ae4d6e2ef50000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b5f7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161022b9190610739565b602060405180830381865afa158015610246573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061026a919061089b565b905090565b61027761066a565b5f8111801561028f5750681b1ae4d6e2ef5000008111155b6102ce576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102c590610946565b60405180910390fd5b807f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016103289190610739565b602060405180830381865afa158015610343573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610367919061089b565b10156103a8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161039f906109ae565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff1660e01b81526004016104039291906109cc565b6020604051808303815f875af115801561041f573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104439190610a28565b508173ffffffffffffffffffffffffffffffffffffffff167fe366ef68d2c0620e9e4c5074fd7ad0ce6739b65287f9c2d09b7d002da556879b8260405161048a91906106e1565b60405180910390a261049a6106b9565b5050565b6104a6610522565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610516575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161050d9190610739565b60405180910390fd5b61051f816105a9565b50565b61052a6106c2565b73ffffffffffffffffffffffffffffffffffffffff16610548610179565b73ffffffffffffffffffffffffffffffffffffffff16146105a75761056b6106c2565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161059e9190610739565b60405180910390fd5b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6002600154036106af576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106a690610a9d565b60405180910390fd5b6002600181905550565b60018081905550565b5f33905090565b5f819050919050565b6106db816106c9565b82525050565b5f6020820190506106f45f8301846106d2565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610723826106fa565b9050919050565b61073381610719565b82525050565b5f60208201905061074c5f83018461072a565b92915050565b5f819050919050565b5f61077561077061076b846106fa565b610752565b6106fa565b9050919050565b5f6107868261075b565b9050919050565b5f6107978261077c565b9050919050565b6107a78161078d565b82525050565b5f6020820190506107c05f83018461079e565b92915050565b5f80fd5b6107d381610719565b81146107dd575f80fd5b50565b5f813590506107ee816107ca565b92915050565b6107fd816106c9565b8114610807575f80fd5b50565b5f81359050610818816107f4565b92915050565b5f8060408385031215610834576108336107c6565b5b5f610841858286016107e0565b92505060206108528582860161080a565b9150509250929050565b5f60208284031215610871576108706107c6565b5b5f61087e848285016107e0565b91505092915050565b5f81519050610895816107f4565b92915050565b5f602082840312156108b0576108af6107c6565b5b5f6108bd84828501610887565b91505092915050565b5f82825260208201905092915050565b7f416d6f756e74206d7573742062652067726561746572207468616e207a65726f5f8201527f20616e64206c657373207468616e206f7220657175616c20746f203530300000602082015250565b5f610930603e836108c6565b915061093b826108d6565b604082019050919050565b5f6020820190508181035f83015261095d81610924565b9050919050565b7f496e73756666696369656e742066756e647300000000000000000000000000005f82015250565b5f6109986012836108c6565b91506109a382610964565b602082019050919050565b5f6020820190508181035f8301526109c58161098c565b9050919050565b5f6040820190506109df5f83018561072a565b6109ec60208301846106d2565b9392505050565b5f8115159050919050565b610a07816109f3565b8114610a11575f80fd5b50565b5f81519050610a22816109fe565b92915050565b5f60208284031215610a3d57610a3c6107c6565b5b5f610a4a84828501610a14565b91505092915050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c005f82015250565b5f610a87601f836108c6565b9150610a9282610a53565b602082019050919050565b5f6020820190508181035f830152610ab481610a7b565b905091905056fea2646970667358221220e337a088448733aa69ec55fa078bfa50ca898c0708feac8d109515e0a8ba49aa64736f6c63430008160033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xD9F CODESIZE SUB DUP1 PUSH3 0xD9F DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x36 SWAP2 SWAP1 PUSH3 0x224 JUMP JUMPDEST CALLER PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0xAA JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xA1 SWAP2 SWAP1 PUSH3 0x265 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0xBB DUP2 PUSH3 0xFE PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP POP PUSH3 0x280 JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x1EE DUP3 PUSH3 0x1C3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x200 DUP2 PUSH3 0x1E2 JUMP JUMPDEST DUP2 EQ PUSH3 0x20B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH3 0x21E DUP2 PUSH3 0x1F5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x23C JUMPI PUSH3 0x23B PUSH3 0x1BF JUMP JUMPDEST JUMPDEST PUSH0 PUSH3 0x24B DUP5 DUP3 DUP6 ADD PUSH3 0x20E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x25F DUP2 PUSH3 0x1E2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x27A PUSH0 DUP4 ADD DUP5 PUSH3 0x254 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0xAF1 PUSH3 0x2AE PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH2 0x1AF ADD MSTORE DUP2 DUP2 PUSH2 0x1D4 ADD MSTORE DUP2 DUP2 PUSH2 0x2D1 ADD MSTORE PUSH2 0x3AA ADD MSTORE PUSH2 0xAF1 PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x86 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xC39124AB GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xC39124AB EQ PUSH2 0xEE JUMPI DUP1 PUSH4 0xC71DACCB EQ PUSH2 0x10C JUMPI DUP1 PUSH4 0xE4E103DC EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x146 JUMPI PUSH2 0x86 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x8A JUMPI DUP1 PUSH4 0x86A35F25 EQ PUSH2 0x94 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xB2 JUMPI DUP1 PUSH4 0xA04F6B4B EQ PUSH2 0xD0 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x92 PUSH2 0x162 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x9C PUSH2 0x175 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0x6E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xBA PUSH2 0x179 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC7 SWAP2 SWAP1 PUSH2 0x739 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD8 PUSH2 0x1A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE5 SWAP2 SWAP1 PUSH2 0x6E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF6 PUSH2 0x1AD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x103 SWAP2 SWAP1 PUSH2 0x7AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x114 PUSH2 0x1D1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x121 SWAP2 SWAP1 PUSH2 0x6E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x144 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x13F SWAP2 SWAP1 PUSH2 0x81E JUMP JUMPDEST PUSH2 0x26F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x160 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x15B SWAP2 SWAP1 PUSH2 0x85C JUMP JUMPDEST PUSH2 0x49E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x16A PUSH2 0x522 JUMP JUMPDEST PUSH2 0x173 PUSH0 PUSH2 0x5A9 JUMP JUMPDEST JUMP JUMPDEST PUSH0 DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH9 0x1B1AE4D6E2EF500000 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x22B SWAP2 SWAP1 PUSH2 0x739 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x246 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x26A SWAP2 SWAP1 PUSH2 0x89B JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x277 PUSH2 0x66A JUMP JUMPDEST PUSH0 DUP2 GT DUP1 ISZERO PUSH2 0x28F JUMPI POP PUSH9 0x1B1AE4D6E2EF500000 DUP2 GT ISZERO JUMPDEST PUSH2 0x2CE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2C5 SWAP1 PUSH2 0x946 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x328 SWAP2 SWAP1 PUSH2 0x739 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x343 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x367 SWAP2 SWAP1 PUSH2 0x89B JUMP JUMPDEST LT ISZERO PUSH2 0x3A8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x39F SWAP1 PUSH2 0x9AE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP4 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x403 SWAP3 SWAP2 SWAP1 PUSH2 0x9CC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x41F JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x443 SWAP2 SWAP1 PUSH2 0xA28 JUMP JUMPDEST POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xE366EF68D2C0620E9E4C5074FD7AD0CE6739B65287F9C2D09B7D002DA556879B DUP3 PUSH1 0x40 MLOAD PUSH2 0x48A SWAP2 SWAP1 PUSH2 0x6E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0x49A PUSH2 0x6B9 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x4A6 PUSH2 0x522 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x516 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x50D SWAP2 SWAP1 PUSH2 0x739 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x51F DUP2 PUSH2 0x5A9 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x52A PUSH2 0x6C2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x548 PUSH2 0x179 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x5A7 JUMPI PUSH2 0x56B PUSH2 0x6C2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x59E SWAP2 SWAP1 PUSH2 0x739 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x6AF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6A6 SWAP1 PUSH2 0xA9D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6DB DUP2 PUSH2 0x6C9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x6F4 PUSH0 DUP4 ADD DUP5 PUSH2 0x6D2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x723 DUP3 PUSH2 0x6FA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x733 DUP2 PUSH2 0x719 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x74C PUSH0 DUP4 ADD DUP5 PUSH2 0x72A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x775 PUSH2 0x770 PUSH2 0x76B DUP5 PUSH2 0x6FA JUMP JUMPDEST PUSH2 0x752 JUMP JUMPDEST PUSH2 0x6FA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x786 DUP3 PUSH2 0x75B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x797 DUP3 PUSH2 0x77C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7A7 DUP2 PUSH2 0x78D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x7C0 PUSH0 DUP4 ADD DUP5 PUSH2 0x79E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x7D3 DUP2 PUSH2 0x719 JUMP JUMPDEST DUP2 EQ PUSH2 0x7DD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x7EE DUP2 PUSH2 0x7CA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x7FD DUP2 PUSH2 0x6C9 JUMP JUMPDEST DUP2 EQ PUSH2 0x807 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x818 DUP2 PUSH2 0x7F4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x834 JUMPI PUSH2 0x833 PUSH2 0x7C6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x841 DUP6 DUP3 DUP7 ADD PUSH2 0x7E0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x852 DUP6 DUP3 DUP7 ADD PUSH2 0x80A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x871 JUMPI PUSH2 0x870 PUSH2 0x7C6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x87E DUP5 DUP3 DUP6 ADD PUSH2 0x7E0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x895 DUP2 PUSH2 0x7F4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8B0 JUMPI PUSH2 0x8AF PUSH2 0x7C6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x8BD DUP5 DUP3 DUP6 ADD PUSH2 0x887 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E207A65726F PUSH0 DUP3 ADD MSTORE PUSH32 0x20616E64206C657373207468616E206F7220657175616C20746F203530300000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x930 PUSH1 0x3E DUP4 PUSH2 0x8C6 JUMP JUMPDEST SWAP2 POP PUSH2 0x93B DUP3 PUSH2 0x8D6 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x95D DUP2 PUSH2 0x924 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742066756E64730000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x998 PUSH1 0x12 DUP4 PUSH2 0x8C6 JUMP JUMPDEST SWAP2 POP PUSH2 0x9A3 DUP3 PUSH2 0x964 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x9C5 DUP2 PUSH2 0x98C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x9DF PUSH0 DUP4 ADD DUP6 PUSH2 0x72A JUMP JUMPDEST PUSH2 0x9EC PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x6D2 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA07 DUP2 PUSH2 0x9F3 JUMP JUMPDEST DUP2 EQ PUSH2 0xA11 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xA22 DUP2 PUSH2 0x9FE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA3D JUMPI PUSH2 0xA3C PUSH2 0x7C6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xA4A DUP5 DUP3 DUP6 ADD PUSH2 0xA14 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xA87 PUSH1 0x1F DUP4 PUSH2 0x8C6 JUMP JUMPDEST SWAP2 POP PUSH2 0xA92 DUP3 PUSH2 0xA53 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xAB4 DUP2 PUSH2 0xA7B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE3 CALLDATACOPY LOG0 DUP9 PREVRANDAO DUP8 CALLER 0xAA PUSH10 0xEC55FA078BFA50CA898C SMOD ADDMOD INVALID 0xAC DUP14 LT SWAP6 ISZERO 0xE0 0xA8 0xBA 0x49 0xAA PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "240:862:4:-:0;;;496:110;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;542:10;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;1716:1:1;1821:7;:22;;;;582:16:4::1;564:35;;;;;;;;::::0;::::1;496:110:::0;240:862;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;88:117:5:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;1202:118::-;1289:24;1307:5;1289:24;:::i;:::-;1284:3;1277:37;1202:118;;:::o;1326:222::-;1419:4;1457:2;1446:9;1442:18;1434:26;;1470:71;1538:1;1527:9;1523:17;1514:6;1470:71;:::i;:::-;1326:222;;;;:::o;240:862:4:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@MAX_REWARD_AMOUNT_339": {
									"entryPoint": 416,
									"id": 339,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@MAX_TAX_342": {
									"entryPoint": 373,
									"id": 342,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 1314,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_302": {
									"entryPoint": 1730,
									"id": 302,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nonReentrantAfter_200": {
									"entryPoint": 1721,
									"id": 200,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_192": {
									"entryPoint": 1642,
									"id": 192,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 1449,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@agcToken_332": {
									"entryPoint": 429,
									"id": 332,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@checkBalance_424": {
									"entryPoint": 465,
									"id": 424,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": 377,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 354,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rewardUser_410": {
									"entryPoint": 623,
									"id": 410,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@transferOwnership_126": {
									"entryPoint": 1182,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 2016,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 2580,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 2058,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 2183,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2140,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 2078,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 2600,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 2203,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1834,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC20_$290_to_t_address_fromStack": {
									"entryPoint": 1950,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_0a456521298a8e109ec715df19e15f055d32f90bbb5b7d724683fff1eb669676_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2340,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2444,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2683,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 1746,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1849,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 2508,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$290__to_t_address__fromStack_reversed": {
									"entryPoint": 1965,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0a456521298a8e109ec715df19e15f055d32f90bbb5b7d724683fff1eb669676__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2374,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2478,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2717,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 1761,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2246,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1817,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 2547,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1786,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1737,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$290_to_t_address": {
									"entryPoint": 1933,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 1916,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 1883,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 1874,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1990,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_0a456521298a8e109ec715df19e15f055d32f90bbb5b7d724683fff1eb669676": {
									"entryPoint": 2262,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d": {
									"entryPoint": 2404,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619": {
									"entryPoint": 2643,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1994,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 2558,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 2036,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:8364:5",
										"nodeType": "YulBlock",
										"src": "0:8364:5",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:32:5",
													"nodeType": "YulBlock",
													"src": "52:32:5",
													"statements": [
														{
															"nativeSrc": "62:16:5",
															"nodeType": "YulAssignment",
															"src": "62:16:5",
															"value": {
																"name": "value",
																"nativeSrc": "73:5:5",
																"nodeType": "YulIdentifier",
																"src": "73:5:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "7:77:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:5",
														"nodeType": "YulTypedName",
														"src": "34:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:5",
														"nodeType": "YulTypedName",
														"src": "44:7:5",
														"type": ""
													}
												],
												"src": "7:77:5"
											},
											{
												"body": {
													"nativeSrc": "155:53:5",
													"nodeType": "YulBlock",
													"src": "155:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "172:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "172:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "195:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "195:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "177:17:5",
																			"nodeType": "YulIdentifier",
																			"src": "177:17:5"
																		},
																		"nativeSrc": "177:24:5",
																		"nodeType": "YulFunctionCall",
																		"src": "177:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "165:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "165:6:5"
																},
																"nativeSrc": "165:37:5",
																"nodeType": "YulFunctionCall",
																"src": "165:37:5"
															},
															"nativeSrc": "165:37:5",
															"nodeType": "YulExpressionStatement",
															"src": "165:37:5"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "90:118:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "143:5:5",
														"nodeType": "YulTypedName",
														"src": "143:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "150:3:5",
														"nodeType": "YulTypedName",
														"src": "150:3:5",
														"type": ""
													}
												],
												"src": "90:118:5"
											},
											{
												"body": {
													"nativeSrc": "312:124:5",
													"nodeType": "YulBlock",
													"src": "312:124:5",
													"statements": [
														{
															"nativeSrc": "322:26:5",
															"nodeType": "YulAssignment",
															"src": "322:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "334:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "334:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "345:2:5",
																		"nodeType": "YulLiteral",
																		"src": "345:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "330:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "330:3:5"
																},
																"nativeSrc": "330:18:5",
																"nodeType": "YulFunctionCall",
																"src": "330:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "322:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "322:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "402:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "402:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "415:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "415:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "426:1:5",
																				"nodeType": "YulLiteral",
																				"src": "426:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "411:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "411:3:5"
																		},
																		"nativeSrc": "411:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "411:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "358:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "358:43:5"
																},
																"nativeSrc": "358:71:5",
																"nodeType": "YulFunctionCall",
																"src": "358:71:5"
															},
															"nativeSrc": "358:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "358:71:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "214:222:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "284:9:5",
														"nodeType": "YulTypedName",
														"src": "284:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "296:6:5",
														"nodeType": "YulTypedName",
														"src": "296:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "307:4:5",
														"nodeType": "YulTypedName",
														"src": "307:4:5",
														"type": ""
													}
												],
												"src": "214:222:5"
											},
											{
												"body": {
													"nativeSrc": "487:81:5",
													"nodeType": "YulBlock",
													"src": "487:81:5",
													"statements": [
														{
															"nativeSrc": "497:65:5",
															"nodeType": "YulAssignment",
															"src": "497:65:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "512:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "512:5:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "519:42:5",
																		"nodeType": "YulLiteral",
																		"src": "519:42:5",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "508:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "508:3:5"
																},
																"nativeSrc": "508:54:5",
																"nodeType": "YulFunctionCall",
																"src": "508:54:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "497:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "497:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "442:126:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "469:5:5",
														"nodeType": "YulTypedName",
														"src": "469:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "479:7:5",
														"nodeType": "YulTypedName",
														"src": "479:7:5",
														"type": ""
													}
												],
												"src": "442:126:5"
											},
											{
												"body": {
													"nativeSrc": "619:51:5",
													"nodeType": "YulBlock",
													"src": "619:51:5",
													"statements": [
														{
															"nativeSrc": "629:35:5",
															"nodeType": "YulAssignment",
															"src": "629:35:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "658:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "658:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "640:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "640:17:5"
																},
																"nativeSrc": "640:24:5",
																"nodeType": "YulFunctionCall",
																"src": "640:24:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "629:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "629:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "574:96:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "601:5:5",
														"nodeType": "YulTypedName",
														"src": "601:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "611:7:5",
														"nodeType": "YulTypedName",
														"src": "611:7:5",
														"type": ""
													}
												],
												"src": "574:96:5"
											},
											{
												"body": {
													"nativeSrc": "741:53:5",
													"nodeType": "YulBlock",
													"src": "741:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "758:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "758:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "781:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "781:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "763:17:5",
																			"nodeType": "YulIdentifier",
																			"src": "763:17:5"
																		},
																		"nativeSrc": "763:24:5",
																		"nodeType": "YulFunctionCall",
																		"src": "763:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "751:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "751:6:5"
																},
																"nativeSrc": "751:37:5",
																"nodeType": "YulFunctionCall",
																"src": "751:37:5"
															},
															"nativeSrc": "751:37:5",
															"nodeType": "YulExpressionStatement",
															"src": "751:37:5"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "676:118:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "729:5:5",
														"nodeType": "YulTypedName",
														"src": "729:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "736:3:5",
														"nodeType": "YulTypedName",
														"src": "736:3:5",
														"type": ""
													}
												],
												"src": "676:118:5"
											},
											{
												"body": {
													"nativeSrc": "898:124:5",
													"nodeType": "YulBlock",
													"src": "898:124:5",
													"statements": [
														{
															"nativeSrc": "908:26:5",
															"nodeType": "YulAssignment",
															"src": "908:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "920:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "920:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "931:2:5",
																		"nodeType": "YulLiteral",
																		"src": "931:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "916:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "916:3:5"
																},
																"nativeSrc": "916:18:5",
																"nodeType": "YulFunctionCall",
																"src": "916:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "908:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "908:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "988:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "988:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1001:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1001:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1012:1:5",
																				"nodeType": "YulLiteral",
																				"src": "1012:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "997:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "997:3:5"
																		},
																		"nativeSrc": "997:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "997:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "944:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "944:43:5"
																},
																"nativeSrc": "944:71:5",
																"nodeType": "YulFunctionCall",
																"src": "944:71:5"
															},
															"nativeSrc": "944:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "944:71:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "800:222:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "870:9:5",
														"nodeType": "YulTypedName",
														"src": "870:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "882:6:5",
														"nodeType": "YulTypedName",
														"src": "882:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "893:4:5",
														"nodeType": "YulTypedName",
														"src": "893:4:5",
														"type": ""
													}
												],
												"src": "800:222:5"
											},
											{
												"body": {
													"nativeSrc": "1060:28:5",
													"nodeType": "YulBlock",
													"src": "1060:28:5",
													"statements": [
														{
															"nativeSrc": "1070:12:5",
															"nodeType": "YulAssignment",
															"src": "1070:12:5",
															"value": {
																"name": "value",
																"nativeSrc": "1077:5:5",
																"nodeType": "YulIdentifier",
																"src": "1077:5:5"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1070:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1070:3:5"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "1028:60:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1046:5:5",
														"nodeType": "YulTypedName",
														"src": "1046:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1056:3:5",
														"nodeType": "YulTypedName",
														"src": "1056:3:5",
														"type": ""
													}
												],
												"src": "1028:60:5"
											},
											{
												"body": {
													"nativeSrc": "1154:82:5",
													"nodeType": "YulBlock",
													"src": "1154:82:5",
													"statements": [
														{
															"nativeSrc": "1164:66:5",
															"nodeType": "YulAssignment",
															"src": "1164:66:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1222:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "1222:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "1204:17:5",
																					"nodeType": "YulIdentifier",
																					"src": "1204:17:5"
																				},
																				"nativeSrc": "1204:24:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1204:24:5"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "1195:8:5",
																			"nodeType": "YulIdentifier",
																			"src": "1195:8:5"
																		},
																		"nativeSrc": "1195:34:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1195:34:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1177:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "1177:17:5"
																},
																"nativeSrc": "1177:53:5",
																"nodeType": "YulFunctionCall",
																"src": "1177:53:5"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "1164:9:5",
																	"nodeType": "YulIdentifier",
																	"src": "1164:9:5"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "1094:142:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1134:5:5",
														"nodeType": "YulTypedName",
														"src": "1134:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "1144:9:5",
														"nodeType": "YulTypedName",
														"src": "1144:9:5",
														"type": ""
													}
												],
												"src": "1094:142:5"
											},
											{
												"body": {
													"nativeSrc": "1302:66:5",
													"nodeType": "YulBlock",
													"src": "1302:66:5",
													"statements": [
														{
															"nativeSrc": "1312:50:5",
															"nodeType": "YulAssignment",
															"src": "1312:50:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1356:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "1356:5:5"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "1325:30:5",
																	"nodeType": "YulIdentifier",
																	"src": "1325:30:5"
																},
																"nativeSrc": "1325:37:5",
																"nodeType": "YulFunctionCall",
																"src": "1325:37:5"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "1312:9:5",
																	"nodeType": "YulIdentifier",
																	"src": "1312:9:5"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "1242:126:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1282:5:5",
														"nodeType": "YulTypedName",
														"src": "1282:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "1292:9:5",
														"nodeType": "YulTypedName",
														"src": "1292:9:5",
														"type": ""
													}
												],
												"src": "1242:126:5"
											},
											{
												"body": {
													"nativeSrc": "1448:66:5",
													"nodeType": "YulBlock",
													"src": "1448:66:5",
													"statements": [
														{
															"nativeSrc": "1458:50:5",
															"nodeType": "YulAssignment",
															"src": "1458:50:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1502:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "1502:5:5"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "1471:30:5",
																	"nodeType": "YulIdentifier",
																	"src": "1471:30:5"
																},
																"nativeSrc": "1471:37:5",
																"nodeType": "YulFunctionCall",
																"src": "1471:37:5"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "1458:9:5",
																	"nodeType": "YulIdentifier",
																	"src": "1458:9:5"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$290_to_t_address",
												"nativeSrc": "1374:140:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1428:5:5",
														"nodeType": "YulTypedName",
														"src": "1428:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "1438:9:5",
														"nodeType": "YulTypedName",
														"src": "1438:9:5",
														"type": ""
													}
												],
												"src": "1374:140:5"
											},
											{
												"body": {
													"nativeSrc": "1599:80:5",
													"nodeType": "YulBlock",
													"src": "1599:80:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1616:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "1616:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1666:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "1666:5:5"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$290_to_t_address",
																			"nativeSrc": "1621:44:5",
																			"nodeType": "YulIdentifier",
																			"src": "1621:44:5"
																		},
																		"nativeSrc": "1621:51:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1621:51:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1609:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1609:6:5"
																},
																"nativeSrc": "1609:64:5",
																"nodeType": "YulFunctionCall",
																"src": "1609:64:5"
															},
															"nativeSrc": "1609:64:5",
															"nodeType": "YulExpressionStatement",
															"src": "1609:64:5"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$290_to_t_address_fromStack",
												"nativeSrc": "1520:159:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1587:5:5",
														"nodeType": "YulTypedName",
														"src": "1587:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1594:3:5",
														"nodeType": "YulTypedName",
														"src": "1594:3:5",
														"type": ""
													}
												],
												"src": "1520:159:5"
											},
											{
												"body": {
													"nativeSrc": "1797:138:5",
													"nodeType": "YulBlock",
													"src": "1797:138:5",
													"statements": [
														{
															"nativeSrc": "1807:26:5",
															"nodeType": "YulAssignment",
															"src": "1807:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1819:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "1819:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1830:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1830:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1815:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1815:3:5"
																},
																"nativeSrc": "1815:18:5",
																"nodeType": "YulFunctionCall",
																"src": "1815:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1807:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "1807:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1901:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "1901:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1914:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1914:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1925:1:5",
																				"nodeType": "YulLiteral",
																				"src": "1925:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1910:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1910:3:5"
																		},
																		"nativeSrc": "1910:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1910:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$290_to_t_address_fromStack",
																	"nativeSrc": "1843:57:5",
																	"nodeType": "YulIdentifier",
																	"src": "1843:57:5"
																},
																"nativeSrc": "1843:85:5",
																"nodeType": "YulFunctionCall",
																"src": "1843:85:5"
															},
															"nativeSrc": "1843:85:5",
															"nodeType": "YulExpressionStatement",
															"src": "1843:85:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$290__to_t_address__fromStack_reversed",
												"nativeSrc": "1685:250:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1769:9:5",
														"nodeType": "YulTypedName",
														"src": "1769:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1781:6:5",
														"nodeType": "YulTypedName",
														"src": "1781:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1792:4:5",
														"nodeType": "YulTypedName",
														"src": "1792:4:5",
														"type": ""
													}
												],
												"src": "1685:250:5"
											},
											{
												"body": {
													"nativeSrc": "1981:35:5",
													"nodeType": "YulBlock",
													"src": "1981:35:5",
													"statements": [
														{
															"nativeSrc": "1991:19:5",
															"nodeType": "YulAssignment",
															"src": "1991:19:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2007:2:5",
																		"nodeType": "YulLiteral",
																		"src": "2007:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2001:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "2001:5:5"
																},
																"nativeSrc": "2001:9:5",
																"nodeType": "YulFunctionCall",
																"src": "2001:9:5"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1991:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1991:6:5"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1941:75:5",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1974:6:5",
														"nodeType": "YulTypedName",
														"src": "1974:6:5",
														"type": ""
													}
												],
												"src": "1941:75:5"
											},
											{
												"body": {
													"nativeSrc": "2111:28:5",
													"nodeType": "YulBlock",
													"src": "2111:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2128:1:5",
																		"nodeType": "YulLiteral",
																		"src": "2128:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2131:1:5",
																		"nodeType": "YulLiteral",
																		"src": "2131:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2121:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2121:6:5"
																},
																"nativeSrc": "2121:12:5",
																"nodeType": "YulFunctionCall",
																"src": "2121:12:5"
															},
															"nativeSrc": "2121:12:5",
															"nodeType": "YulExpressionStatement",
															"src": "2121:12:5"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "2022:117:5",
												"nodeType": "YulFunctionDefinition",
												"src": "2022:117:5"
											},
											{
												"body": {
													"nativeSrc": "2234:28:5",
													"nodeType": "YulBlock",
													"src": "2234:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2251:1:5",
																		"nodeType": "YulLiteral",
																		"src": "2251:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2254:1:5",
																		"nodeType": "YulLiteral",
																		"src": "2254:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2244:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2244:6:5"
																},
																"nativeSrc": "2244:12:5",
																"nodeType": "YulFunctionCall",
																"src": "2244:12:5"
															},
															"nativeSrc": "2244:12:5",
															"nodeType": "YulExpressionStatement",
															"src": "2244:12:5"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "2145:117:5",
												"nodeType": "YulFunctionDefinition",
												"src": "2145:117:5"
											},
											{
												"body": {
													"nativeSrc": "2311:79:5",
													"nodeType": "YulBlock",
													"src": "2311:79:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "2368:16:5",
																"nodeType": "YulBlock",
																"src": "2368:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2377:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2377:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2380:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2380:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2370:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "2370:6:5"
																			},
																			"nativeSrc": "2370:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2370:12:5"
																		},
																		"nativeSrc": "2370:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "2370:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2334:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "2334:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2359:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "2359:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "2341:17:5",
																					"nodeType": "YulIdentifier",
																					"src": "2341:17:5"
																				},
																				"nativeSrc": "2341:24:5",
																				"nodeType": "YulFunctionCall",
																				"src": "2341:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2331:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "2331:2:5"
																		},
																		"nativeSrc": "2331:35:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2331:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2324:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2324:6:5"
																},
																"nativeSrc": "2324:43:5",
																"nodeType": "YulFunctionCall",
																"src": "2324:43:5"
															},
															"nativeSrc": "2321:63:5",
															"nodeType": "YulIf",
															"src": "2321:63:5"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "2268:122:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2304:5:5",
														"nodeType": "YulTypedName",
														"src": "2304:5:5",
														"type": ""
													}
												],
												"src": "2268:122:5"
											},
											{
												"body": {
													"nativeSrc": "2448:87:5",
													"nodeType": "YulBlock",
													"src": "2448:87:5",
													"statements": [
														{
															"nativeSrc": "2458:29:5",
															"nodeType": "YulAssignment",
															"src": "2458:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2480:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "2480:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2467:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "2467:12:5"
																},
																"nativeSrc": "2467:20:5",
																"nodeType": "YulFunctionCall",
																"src": "2467:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2458:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "2458:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2523:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "2523:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2496:26:5",
																	"nodeType": "YulIdentifier",
																	"src": "2496:26:5"
																},
																"nativeSrc": "2496:33:5",
																"nodeType": "YulFunctionCall",
																"src": "2496:33:5"
															},
															"nativeSrc": "2496:33:5",
															"nodeType": "YulExpressionStatement",
															"src": "2496:33:5"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "2396:139:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2426:6:5",
														"nodeType": "YulTypedName",
														"src": "2426:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2434:3:5",
														"nodeType": "YulTypedName",
														"src": "2434:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2442:5:5",
														"nodeType": "YulTypedName",
														"src": "2442:5:5",
														"type": ""
													}
												],
												"src": "2396:139:5"
											},
											{
												"body": {
													"nativeSrc": "2584:79:5",
													"nodeType": "YulBlock",
													"src": "2584:79:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "2641:16:5",
																"nodeType": "YulBlock",
																"src": "2641:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2650:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2650:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2653:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2653:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2643:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "2643:6:5"
																			},
																			"nativeSrc": "2643:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2643:12:5"
																		},
																		"nativeSrc": "2643:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "2643:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2607:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "2607:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2632:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "2632:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2614:17:5",
																					"nodeType": "YulIdentifier",
																					"src": "2614:17:5"
																				},
																				"nativeSrc": "2614:24:5",
																				"nodeType": "YulFunctionCall",
																				"src": "2614:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2604:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "2604:2:5"
																		},
																		"nativeSrc": "2604:35:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2604:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2597:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2597:6:5"
																},
																"nativeSrc": "2597:43:5",
																"nodeType": "YulFunctionCall",
																"src": "2597:43:5"
															},
															"nativeSrc": "2594:63:5",
															"nodeType": "YulIf",
															"src": "2594:63:5"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2541:122:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2577:5:5",
														"nodeType": "YulTypedName",
														"src": "2577:5:5",
														"type": ""
													}
												],
												"src": "2541:122:5"
											},
											{
												"body": {
													"nativeSrc": "2721:87:5",
													"nodeType": "YulBlock",
													"src": "2721:87:5",
													"statements": [
														{
															"nativeSrc": "2731:29:5",
															"nodeType": "YulAssignment",
															"src": "2731:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2753:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "2753:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2740:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "2740:12:5"
																},
																"nativeSrc": "2740:20:5",
																"nodeType": "YulFunctionCall",
																"src": "2740:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2731:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "2731:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2796:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "2796:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2769:26:5",
																	"nodeType": "YulIdentifier",
																	"src": "2769:26:5"
																},
																"nativeSrc": "2769:33:5",
																"nodeType": "YulFunctionCall",
																"src": "2769:33:5"
															},
															"nativeSrc": "2769:33:5",
															"nodeType": "YulExpressionStatement",
															"src": "2769:33:5"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2669:139:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2699:6:5",
														"nodeType": "YulTypedName",
														"src": "2699:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2707:3:5",
														"nodeType": "YulTypedName",
														"src": "2707:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2715:5:5",
														"nodeType": "YulTypedName",
														"src": "2715:5:5",
														"type": ""
													}
												],
												"src": "2669:139:5"
											},
											{
												"body": {
													"nativeSrc": "2897:391:5",
													"nodeType": "YulBlock",
													"src": "2897:391:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "2943:83:5",
																"nodeType": "YulBlock",
																"src": "2943:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2945:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "2945:77:5"
																			},
																			"nativeSrc": "2945:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2945:79:5"
																		},
																		"nativeSrc": "2945:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "2945:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2918:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "2918:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2927:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "2927:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2914:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2914:3:5"
																		},
																		"nativeSrc": "2914:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2914:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2939:2:5",
																		"nodeType": "YulLiteral",
																		"src": "2939:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2910:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2910:3:5"
																},
																"nativeSrc": "2910:32:5",
																"nodeType": "YulFunctionCall",
																"src": "2910:32:5"
															},
															"nativeSrc": "2907:119:5",
															"nodeType": "YulIf",
															"src": "2907:119:5"
														},
														{
															"nativeSrc": "3036:117:5",
															"nodeType": "YulBlock",
															"src": "3036:117:5",
															"statements": [
																{
																	"nativeSrc": "3051:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3051:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3065:1:5",
																		"nodeType": "YulLiteral",
																		"src": "3065:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3055:6:5",
																			"nodeType": "YulTypedName",
																			"src": "3055:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3080:63:5",
																	"nodeType": "YulAssignment",
																	"src": "3080:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3115:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "3115:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3126:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "3126:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3111:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "3111:3:5"
																				},
																				"nativeSrc": "3111:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "3111:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3135:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "3135:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3090:20:5",
																			"nodeType": "YulIdentifier",
																			"src": "3090:20:5"
																		},
																		"nativeSrc": "3090:53:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3090:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3080:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "3080:6:5"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3163:118:5",
															"nodeType": "YulBlock",
															"src": "3163:118:5",
															"statements": [
																{
																	"nativeSrc": "3178:16:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3178:16:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3192:2:5",
																		"nodeType": "YulLiteral",
																		"src": "3192:2:5",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3182:6:5",
																			"nodeType": "YulTypedName",
																			"src": "3182:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3208:63:5",
																	"nodeType": "YulAssignment",
																	"src": "3208:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3243:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "3243:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3254:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "3254:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3239:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "3239:3:5"
																				},
																				"nativeSrc": "3239:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "3239:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3263:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "3263:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3218:20:5",
																			"nodeType": "YulIdentifier",
																			"src": "3218:20:5"
																		},
																		"nativeSrc": "3218:53:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3218:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3208:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "3208:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2814:474:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2859:9:5",
														"nodeType": "YulTypedName",
														"src": "2859:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2870:7:5",
														"nodeType": "YulTypedName",
														"src": "2870:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2882:6:5",
														"nodeType": "YulTypedName",
														"src": "2882:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2890:6:5",
														"nodeType": "YulTypedName",
														"src": "2890:6:5",
														"type": ""
													}
												],
												"src": "2814:474:5"
											},
											{
												"body": {
													"nativeSrc": "3360:263:5",
													"nodeType": "YulBlock",
													"src": "3360:263:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "3406:83:5",
																"nodeType": "YulBlock",
																"src": "3406:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3408:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "3408:77:5"
																			},
																			"nativeSrc": "3408:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "3408:79:5"
																		},
																		"nativeSrc": "3408:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "3408:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3381:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "3381:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3390:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3390:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3377:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3377:3:5"
																		},
																		"nativeSrc": "3377:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3377:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3402:2:5",
																		"nodeType": "YulLiteral",
																		"src": "3402:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3373:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3373:3:5"
																},
																"nativeSrc": "3373:32:5",
																"nodeType": "YulFunctionCall",
																"src": "3373:32:5"
															},
															"nativeSrc": "3370:119:5",
															"nodeType": "YulIf",
															"src": "3370:119:5"
														},
														{
															"nativeSrc": "3499:117:5",
															"nodeType": "YulBlock",
															"src": "3499:117:5",
															"statements": [
																{
																	"nativeSrc": "3514:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3514:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3528:1:5",
																		"nodeType": "YulLiteral",
																		"src": "3528:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3518:6:5",
																			"nodeType": "YulTypedName",
																			"src": "3518:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3543:63:5",
																	"nodeType": "YulAssignment",
																	"src": "3543:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3578:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "3578:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3589:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "3589:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3574:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "3574:3:5"
																				},
																				"nativeSrc": "3574:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "3574:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3598:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "3598:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3553:20:5",
																			"nodeType": "YulIdentifier",
																			"src": "3553:20:5"
																		},
																		"nativeSrc": "3553:53:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3553:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3543:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "3543:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "3294:329:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3330:9:5",
														"nodeType": "YulTypedName",
														"src": "3330:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3341:7:5",
														"nodeType": "YulTypedName",
														"src": "3341:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3353:6:5",
														"nodeType": "YulTypedName",
														"src": "3353:6:5",
														"type": ""
													}
												],
												"src": "3294:329:5"
											},
											{
												"body": {
													"nativeSrc": "3692:80:5",
													"nodeType": "YulBlock",
													"src": "3692:80:5",
													"statements": [
														{
															"nativeSrc": "3702:22:5",
															"nodeType": "YulAssignment",
															"src": "3702:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3717:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "3717:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3711:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "3711:5:5"
																},
																"nativeSrc": "3711:13:5",
																"nodeType": "YulFunctionCall",
																"src": "3711:13:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3702:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "3702:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3760:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "3760:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "3733:26:5",
																	"nodeType": "YulIdentifier",
																	"src": "3733:26:5"
																},
																"nativeSrc": "3733:33:5",
																"nodeType": "YulFunctionCall",
																"src": "3733:33:5"
															},
															"nativeSrc": "3733:33:5",
															"nodeType": "YulExpressionStatement",
															"src": "3733:33:5"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "3629:143:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3670:6:5",
														"nodeType": "YulTypedName",
														"src": "3670:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3678:3:5",
														"nodeType": "YulTypedName",
														"src": "3678:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3686:5:5",
														"nodeType": "YulTypedName",
														"src": "3686:5:5",
														"type": ""
													}
												],
												"src": "3629:143:5"
											},
											{
												"body": {
													"nativeSrc": "3855:274:5",
													"nodeType": "YulBlock",
													"src": "3855:274:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "3901:83:5",
																"nodeType": "YulBlock",
																"src": "3901:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3903:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "3903:77:5"
																			},
																			"nativeSrc": "3903:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "3903:79:5"
																		},
																		"nativeSrc": "3903:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "3903:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3876:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "3876:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3885:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3885:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3872:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3872:3:5"
																		},
																		"nativeSrc": "3872:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3872:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3897:2:5",
																		"nodeType": "YulLiteral",
																		"src": "3897:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3868:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3868:3:5"
																},
																"nativeSrc": "3868:32:5",
																"nodeType": "YulFunctionCall",
																"src": "3868:32:5"
															},
															"nativeSrc": "3865:119:5",
															"nodeType": "YulIf",
															"src": "3865:119:5"
														},
														{
															"nativeSrc": "3994:128:5",
															"nodeType": "YulBlock",
															"src": "3994:128:5",
															"statements": [
																{
																	"nativeSrc": "4009:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4009:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4023:1:5",
																		"nodeType": "YulLiteral",
																		"src": "4023:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4013:6:5",
																			"nodeType": "YulTypedName",
																			"src": "4013:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4038:74:5",
																	"nodeType": "YulAssignment",
																	"src": "4038:74:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4084:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "4084:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4095:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "4095:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4080:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "4080:3:5"
																				},
																				"nativeSrc": "4080:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "4080:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4104:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "4104:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "4048:31:5",
																			"nodeType": "YulIdentifier",
																			"src": "4048:31:5"
																		},
																		"nativeSrc": "4048:64:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4048:64:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4038:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "4038:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "3778:351:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3825:9:5",
														"nodeType": "YulTypedName",
														"src": "3825:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3836:7:5",
														"nodeType": "YulTypedName",
														"src": "3836:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3848:6:5",
														"nodeType": "YulTypedName",
														"src": "3848:6:5",
														"type": ""
													}
												],
												"src": "3778:351:5"
											},
											{
												"body": {
													"nativeSrc": "4231:73:5",
													"nodeType": "YulBlock",
													"src": "4231:73:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4248:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "4248:3:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4253:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "4253:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4241:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4241:6:5"
																},
																"nativeSrc": "4241:19:5",
																"nodeType": "YulFunctionCall",
																"src": "4241:19:5"
															},
															"nativeSrc": "4241:19:5",
															"nodeType": "YulExpressionStatement",
															"src": "4241:19:5"
														},
														{
															"nativeSrc": "4269:29:5",
															"nodeType": "YulAssignment",
															"src": "4269:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4288:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "4288:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4293:4:5",
																		"nodeType": "YulLiteral",
																		"src": "4293:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4284:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4284:3:5"
																},
																"nativeSrc": "4284:14:5",
																"nodeType": "YulFunctionCall",
																"src": "4284:14:5"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "4269:11:5",
																	"nodeType": "YulIdentifier",
																	"src": "4269:11:5"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "4135:169:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "4203:3:5",
														"nodeType": "YulTypedName",
														"src": "4203:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "4208:6:5",
														"nodeType": "YulTypedName",
														"src": "4208:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "4219:11:5",
														"nodeType": "YulTypedName",
														"src": "4219:11:5",
														"type": ""
													}
												],
												"src": "4135:169:5"
											},
											{
												"body": {
													"nativeSrc": "4416:143:5",
													"nodeType": "YulBlock",
													"src": "4416:143:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "4438:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "4438:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4446:1:5",
																				"nodeType": "YulLiteral",
																				"src": "4446:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4434:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4434:3:5"
																		},
																		"nativeSrc": "4434:14:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4434:14:5"
																	},
																	{
																		"hexValue": "416d6f756e74206d7573742062652067726561746572207468616e207a65726f",
																		"kind": "string",
																		"nativeSrc": "4450:34:5",
																		"nodeType": "YulLiteral",
																		"src": "4450:34:5",
																		"type": "",
																		"value": "Amount must be greater than zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4427:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4427:6:5"
																},
																"nativeSrc": "4427:58:5",
																"nodeType": "YulFunctionCall",
																"src": "4427:58:5"
															},
															"nativeSrc": "4427:58:5",
															"nodeType": "YulExpressionStatement",
															"src": "4427:58:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "4506:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "4506:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4514:2:5",
																				"nodeType": "YulLiteral",
																				"src": "4514:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4502:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4502:3:5"
																		},
																		"nativeSrc": "4502:15:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4502:15:5"
																	},
																	{
																		"hexValue": "20616e64206c657373207468616e206f7220657175616c20746f20353030",
																		"kind": "string",
																		"nativeSrc": "4519:32:5",
																		"nodeType": "YulLiteral",
																		"src": "4519:32:5",
																		"type": "",
																		"value": " and less than or equal to 500"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4495:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4495:6:5"
																},
																"nativeSrc": "4495:57:5",
																"nodeType": "YulFunctionCall",
																"src": "4495:57:5"
															},
															"nativeSrc": "4495:57:5",
															"nodeType": "YulExpressionStatement",
															"src": "4495:57:5"
														}
													]
												},
												"name": "store_literal_in_memory_0a456521298a8e109ec715df19e15f055d32f90bbb5b7d724683fff1eb669676",
												"nativeSrc": "4310:249:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "4408:6:5",
														"nodeType": "YulTypedName",
														"src": "4408:6:5",
														"type": ""
													}
												],
												"src": "4310:249:5"
											},
											{
												"body": {
													"nativeSrc": "4711:220:5",
													"nodeType": "YulBlock",
													"src": "4711:220:5",
													"statements": [
														{
															"nativeSrc": "4721:74:5",
															"nodeType": "YulAssignment",
															"src": "4721:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4787:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "4787:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4792:2:5",
																		"nodeType": "YulLiteral",
																		"src": "4792:2:5",
																		"type": "",
																		"value": "62"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4728:58:5",
																	"nodeType": "YulIdentifier",
																	"src": "4728:58:5"
																},
																"nativeSrc": "4728:67:5",
																"nodeType": "YulFunctionCall",
																"src": "4728:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "4721:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4721:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4893:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "4893:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0a456521298a8e109ec715df19e15f055d32f90bbb5b7d724683fff1eb669676",
																	"nativeSrc": "4804:88:5",
																	"nodeType": "YulIdentifier",
																	"src": "4804:88:5"
																},
																"nativeSrc": "4804:93:5",
																"nodeType": "YulFunctionCall",
																"src": "4804:93:5"
															},
															"nativeSrc": "4804:93:5",
															"nodeType": "YulExpressionStatement",
															"src": "4804:93:5"
														},
														{
															"nativeSrc": "4906:19:5",
															"nodeType": "YulAssignment",
															"src": "4906:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4917:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "4917:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4922:2:5",
																		"nodeType": "YulLiteral",
																		"src": "4922:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4913:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4913:3:5"
																},
																"nativeSrc": "4913:12:5",
																"nodeType": "YulFunctionCall",
																"src": "4913:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "4906:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4906:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0a456521298a8e109ec715df19e15f055d32f90bbb5b7d724683fff1eb669676_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "4565:366:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "4699:3:5",
														"nodeType": "YulTypedName",
														"src": "4699:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "4707:3:5",
														"nodeType": "YulTypedName",
														"src": "4707:3:5",
														"type": ""
													}
												],
												"src": "4565:366:5"
											},
											{
												"body": {
													"nativeSrc": "5108:248:5",
													"nodeType": "YulBlock",
													"src": "5108:248:5",
													"statements": [
														{
															"nativeSrc": "5118:26:5",
															"nodeType": "YulAssignment",
															"src": "5118:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5130:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "5130:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5141:2:5",
																		"nodeType": "YulLiteral",
																		"src": "5141:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5126:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5126:3:5"
																},
																"nativeSrc": "5126:18:5",
																"nodeType": "YulFunctionCall",
																"src": "5126:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5118:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "5118:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5165:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "5165:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5176:1:5",
																				"nodeType": "YulLiteral",
																				"src": "5176:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5161:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5161:3:5"
																		},
																		"nativeSrc": "5161:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5161:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "5184:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "5184:4:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5190:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "5190:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5180:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5180:3:5"
																		},
																		"nativeSrc": "5180:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5180:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5154:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5154:6:5"
																},
																"nativeSrc": "5154:47:5",
																"nodeType": "YulFunctionCall",
																"src": "5154:47:5"
															},
															"nativeSrc": "5154:47:5",
															"nodeType": "YulExpressionStatement",
															"src": "5154:47:5"
														},
														{
															"nativeSrc": "5210:139:5",
															"nodeType": "YulAssignment",
															"src": "5210:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "5344:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "5344:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0a456521298a8e109ec715df19e15f055d32f90bbb5b7d724683fff1eb669676_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5218:124:5",
																	"nodeType": "YulIdentifier",
																	"src": "5218:124:5"
																},
																"nativeSrc": "5218:131:5",
																"nodeType": "YulFunctionCall",
																"src": "5218:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5210:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "5210:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0a456521298a8e109ec715df19e15f055d32f90bbb5b7d724683fff1eb669676__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4937:419:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5088:9:5",
														"nodeType": "YulTypedName",
														"src": "5088:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5103:4:5",
														"nodeType": "YulTypedName",
														"src": "5103:4:5",
														"type": ""
													}
												],
												"src": "4937:419:5"
											},
											{
												"body": {
													"nativeSrc": "5468:62:5",
													"nodeType": "YulBlock",
													"src": "5468:62:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "5490:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "5490:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5498:1:5",
																				"nodeType": "YulLiteral",
																				"src": "5498:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5486:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5486:3:5"
																		},
																		"nativeSrc": "5486:14:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5486:14:5"
																	},
																	{
																		"hexValue": "496e73756666696369656e742066756e6473",
																		"kind": "string",
																		"nativeSrc": "5502:20:5",
																		"nodeType": "YulLiteral",
																		"src": "5502:20:5",
																		"type": "",
																		"value": "Insufficient funds"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5479:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5479:6:5"
																},
																"nativeSrc": "5479:44:5",
																"nodeType": "YulFunctionCall",
																"src": "5479:44:5"
															},
															"nativeSrc": "5479:44:5",
															"nodeType": "YulExpressionStatement",
															"src": "5479:44:5"
														}
													]
												},
												"name": "store_literal_in_memory_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d",
												"nativeSrc": "5362:168:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "5460:6:5",
														"nodeType": "YulTypedName",
														"src": "5460:6:5",
														"type": ""
													}
												],
												"src": "5362:168:5"
											},
											{
												"body": {
													"nativeSrc": "5682:220:5",
													"nodeType": "YulBlock",
													"src": "5682:220:5",
													"statements": [
														{
															"nativeSrc": "5692:74:5",
															"nodeType": "YulAssignment",
															"src": "5692:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5758:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "5758:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5763:2:5",
																		"nodeType": "YulLiteral",
																		"src": "5763:2:5",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5699:58:5",
																	"nodeType": "YulIdentifier",
																	"src": "5699:58:5"
																},
																"nativeSrc": "5699:67:5",
																"nodeType": "YulFunctionCall",
																"src": "5699:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "5692:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5692:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5864:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "5864:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d",
																	"nativeSrc": "5775:88:5",
																	"nodeType": "YulIdentifier",
																	"src": "5775:88:5"
																},
																"nativeSrc": "5775:93:5",
																"nodeType": "YulFunctionCall",
																"src": "5775:93:5"
															},
															"nativeSrc": "5775:93:5",
															"nodeType": "YulExpressionStatement",
															"src": "5775:93:5"
														},
														{
															"nativeSrc": "5877:19:5",
															"nodeType": "YulAssignment",
															"src": "5877:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5888:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "5888:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5893:2:5",
																		"nodeType": "YulLiteral",
																		"src": "5893:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5884:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5884:3:5"
																},
																"nativeSrc": "5884:12:5",
																"nodeType": "YulFunctionCall",
																"src": "5884:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "5877:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5877:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "5536:366:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "5670:3:5",
														"nodeType": "YulTypedName",
														"src": "5670:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "5678:3:5",
														"nodeType": "YulTypedName",
														"src": "5678:3:5",
														"type": ""
													}
												],
												"src": "5536:366:5"
											},
											{
												"body": {
													"nativeSrc": "6079:248:5",
													"nodeType": "YulBlock",
													"src": "6079:248:5",
													"statements": [
														{
															"nativeSrc": "6089:26:5",
															"nodeType": "YulAssignment",
															"src": "6089:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6101:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "6101:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6112:2:5",
																		"nodeType": "YulLiteral",
																		"src": "6112:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6097:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "6097:3:5"
																},
																"nativeSrc": "6097:18:5",
																"nodeType": "YulFunctionCall",
																"src": "6097:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6089:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "6089:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6136:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "6136:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6147:1:5",
																				"nodeType": "YulLiteral",
																				"src": "6147:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6132:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "6132:3:5"
																		},
																		"nativeSrc": "6132:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6132:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "6155:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "6155:4:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6161:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "6161:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6151:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "6151:3:5"
																		},
																		"nativeSrc": "6151:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6151:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6125:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "6125:6:5"
																},
																"nativeSrc": "6125:47:5",
																"nodeType": "YulFunctionCall",
																"src": "6125:47:5"
															},
															"nativeSrc": "6125:47:5",
															"nodeType": "YulExpressionStatement",
															"src": "6125:47:5"
														},
														{
															"nativeSrc": "6181:139:5",
															"nodeType": "YulAssignment",
															"src": "6181:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "6315:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "6315:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6189:124:5",
																	"nodeType": "YulIdentifier",
																	"src": "6189:124:5"
																},
																"nativeSrc": "6189:131:5",
																"nodeType": "YulFunctionCall",
																"src": "6189:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6181:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "6181:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5908:419:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6059:9:5",
														"nodeType": "YulTypedName",
														"src": "6059:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6074:4:5",
														"nodeType": "YulTypedName",
														"src": "6074:4:5",
														"type": ""
													}
												],
												"src": "5908:419:5"
											},
											{
												"body": {
													"nativeSrc": "6459:206:5",
													"nodeType": "YulBlock",
													"src": "6459:206:5",
													"statements": [
														{
															"nativeSrc": "6469:26:5",
															"nodeType": "YulAssignment",
															"src": "6469:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6481:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "6481:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6492:2:5",
																		"nodeType": "YulLiteral",
																		"src": "6492:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6477:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "6477:3:5"
																},
																"nativeSrc": "6477:18:5",
																"nodeType": "YulFunctionCall",
																"src": "6477:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6469:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "6469:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6549:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "6549:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6562:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "6562:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6573:1:5",
																				"nodeType": "YulLiteral",
																				"src": "6573:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6558:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "6558:3:5"
																		},
																		"nativeSrc": "6558:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6558:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6505:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "6505:43:5"
																},
																"nativeSrc": "6505:71:5",
																"nodeType": "YulFunctionCall",
																"src": "6505:71:5"
															},
															"nativeSrc": "6505:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "6505:71:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "6630:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "6630:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6643:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "6643:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6654:2:5",
																				"nodeType": "YulLiteral",
																				"src": "6654:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6639:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "6639:3:5"
																		},
																		"nativeSrc": "6639:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6639:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6586:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "6586:43:5"
																},
																"nativeSrc": "6586:72:5",
																"nodeType": "YulFunctionCall",
																"src": "6586:72:5"
															},
															"nativeSrc": "6586:72:5",
															"nodeType": "YulExpressionStatement",
															"src": "6586:72:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "6333:332:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6423:9:5",
														"nodeType": "YulTypedName",
														"src": "6423:9:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6435:6:5",
														"nodeType": "YulTypedName",
														"src": "6435:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6443:6:5",
														"nodeType": "YulTypedName",
														"src": "6443:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6454:4:5",
														"nodeType": "YulTypedName",
														"src": "6454:4:5",
														"type": ""
													}
												],
												"src": "6333:332:5"
											},
											{
												"body": {
													"nativeSrc": "6713:48:5",
													"nodeType": "YulBlock",
													"src": "6713:48:5",
													"statements": [
														{
															"nativeSrc": "6723:32:5",
															"nodeType": "YulAssignment",
															"src": "6723:32:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6748:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "6748:5:5"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "6741:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "6741:6:5"
																		},
																		"nativeSrc": "6741:13:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6741:13:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6734:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "6734:6:5"
																},
																"nativeSrc": "6734:21:5",
																"nodeType": "YulFunctionCall",
																"src": "6734:21:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "6723:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "6723:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "6671:90:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6695:5:5",
														"nodeType": "YulTypedName",
														"src": "6695:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "6705:7:5",
														"nodeType": "YulTypedName",
														"src": "6705:7:5",
														"type": ""
													}
												],
												"src": "6671:90:5"
											},
											{
												"body": {
													"nativeSrc": "6807:76:5",
													"nodeType": "YulBlock",
													"src": "6807:76:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "6861:16:5",
																"nodeType": "YulBlock",
																"src": "6861:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6870:1:5",
																					"nodeType": "YulLiteral",
																					"src": "6870:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6873:1:5",
																					"nodeType": "YulLiteral",
																					"src": "6873:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6863:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "6863:6:5"
																			},
																			"nativeSrc": "6863:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "6863:12:5"
																		},
																		"nativeSrc": "6863:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "6863:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6830:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "6830:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "6852:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "6852:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "6837:14:5",
																					"nodeType": "YulIdentifier",
																					"src": "6837:14:5"
																				},
																				"nativeSrc": "6837:21:5",
																				"nodeType": "YulFunctionCall",
																				"src": "6837:21:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "6827:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "6827:2:5"
																		},
																		"nativeSrc": "6827:32:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6827:32:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6820:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "6820:6:5"
																},
																"nativeSrc": "6820:40:5",
																"nodeType": "YulFunctionCall",
																"src": "6820:40:5"
															},
															"nativeSrc": "6817:60:5",
															"nodeType": "YulIf",
															"src": "6817:60:5"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "6767:116:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6800:5:5",
														"nodeType": "YulTypedName",
														"src": "6800:5:5",
														"type": ""
													}
												],
												"src": "6767:116:5"
											},
											{
												"body": {
													"nativeSrc": "6949:77:5",
													"nodeType": "YulBlock",
													"src": "6949:77:5",
													"statements": [
														{
															"nativeSrc": "6959:22:5",
															"nodeType": "YulAssignment",
															"src": "6959:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "6974:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "6974:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "6968:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "6968:5:5"
																},
																"nativeSrc": "6968:13:5",
																"nodeType": "YulFunctionCall",
																"src": "6968:13:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "6959:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "6959:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7014:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "7014:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "6990:23:5",
																	"nodeType": "YulIdentifier",
																	"src": "6990:23:5"
																},
																"nativeSrc": "6990:30:5",
																"nodeType": "YulFunctionCall",
																"src": "6990:30:5"
															},
															"nativeSrc": "6990:30:5",
															"nodeType": "YulExpressionStatement",
															"src": "6990:30:5"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "6889:137:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "6927:6:5",
														"nodeType": "YulTypedName",
														"src": "6927:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6935:3:5",
														"nodeType": "YulTypedName",
														"src": "6935:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "6943:5:5",
														"nodeType": "YulTypedName",
														"src": "6943:5:5",
														"type": ""
													}
												],
												"src": "6889:137:5"
											},
											{
												"body": {
													"nativeSrc": "7106:271:5",
													"nodeType": "YulBlock",
													"src": "7106:271:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "7152:83:5",
																"nodeType": "YulBlock",
																"src": "7152:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7154:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "7154:77:5"
																			},
																			"nativeSrc": "7154:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "7154:79:5"
																		},
																		"nativeSrc": "7154:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "7154:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7127:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "7127:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7136:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "7136:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7123:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "7123:3:5"
																		},
																		"nativeSrc": "7123:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7123:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7148:2:5",
																		"nodeType": "YulLiteral",
																		"src": "7148:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7119:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "7119:3:5"
																},
																"nativeSrc": "7119:32:5",
																"nodeType": "YulFunctionCall",
																"src": "7119:32:5"
															},
															"nativeSrc": "7116:119:5",
															"nodeType": "YulIf",
															"src": "7116:119:5"
														},
														{
															"nativeSrc": "7245:125:5",
															"nodeType": "YulBlock",
															"src": "7245:125:5",
															"statements": [
																{
																	"nativeSrc": "7260:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7260:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7274:1:5",
																		"nodeType": "YulLiteral",
																		"src": "7274:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7264:6:5",
																			"nodeType": "YulTypedName",
																			"src": "7264:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7289:71:5",
																	"nodeType": "YulAssignment",
																	"src": "7289:71:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7332:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "7332:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7343:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "7343:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7328:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "7328:3:5"
																				},
																				"nativeSrc": "7328:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "7328:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7352:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "7352:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "7299:28:5",
																			"nodeType": "YulIdentifier",
																			"src": "7299:28:5"
																		},
																		"nativeSrc": "7299:61:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7299:61:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7289:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "7289:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "7032:345:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7076:9:5",
														"nodeType": "YulTypedName",
														"src": "7076:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7087:7:5",
														"nodeType": "YulTypedName",
														"src": "7087:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7099:6:5",
														"nodeType": "YulTypedName",
														"src": "7099:6:5",
														"type": ""
													}
												],
												"src": "7032:345:5"
											},
											{
												"body": {
													"nativeSrc": "7489:75:5",
													"nodeType": "YulBlock",
													"src": "7489:75:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "7511:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "7511:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7519:1:5",
																				"nodeType": "YulLiteral",
																				"src": "7519:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7507:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "7507:3:5"
																		},
																		"nativeSrc": "7507:14:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7507:14:5"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nativeSrc": "7523:33:5",
																		"nodeType": "YulLiteral",
																		"src": "7523:33:5",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7500:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "7500:6:5"
																},
																"nativeSrc": "7500:57:5",
																"nodeType": "YulFunctionCall",
																"src": "7500:57:5"
															},
															"nativeSrc": "7500:57:5",
															"nodeType": "YulExpressionStatement",
															"src": "7500:57:5"
														}
													]
												},
												"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
												"nativeSrc": "7383:181:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "7481:6:5",
														"nodeType": "YulTypedName",
														"src": "7481:6:5",
														"type": ""
													}
												],
												"src": "7383:181:5"
											},
											{
												"body": {
													"nativeSrc": "7716:220:5",
													"nodeType": "YulBlock",
													"src": "7716:220:5",
													"statements": [
														{
															"nativeSrc": "7726:74:5",
															"nodeType": "YulAssignment",
															"src": "7726:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7792:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "7792:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7797:2:5",
																		"nodeType": "YulLiteral",
																		"src": "7797:2:5",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7733:58:5",
																	"nodeType": "YulIdentifier",
																	"src": "7733:58:5"
																},
																"nativeSrc": "7733:67:5",
																"nodeType": "YulFunctionCall",
																"src": "7733:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7726:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "7726:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7898:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "7898:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																	"nativeSrc": "7809:88:5",
																	"nodeType": "YulIdentifier",
																	"src": "7809:88:5"
																},
																"nativeSrc": "7809:93:5",
																"nodeType": "YulFunctionCall",
																"src": "7809:93:5"
															},
															"nativeSrc": "7809:93:5",
															"nodeType": "YulExpressionStatement",
															"src": "7809:93:5"
														},
														{
															"nativeSrc": "7911:19:5",
															"nodeType": "YulAssignment",
															"src": "7911:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7922:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "7922:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7927:2:5",
																		"nodeType": "YulLiteral",
																		"src": "7927:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7918:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "7918:3:5"
																},
																"nativeSrc": "7918:12:5",
																"nodeType": "YulFunctionCall",
																"src": "7918:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7911:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "7911:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "7570:366:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7704:3:5",
														"nodeType": "YulTypedName",
														"src": "7704:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7712:3:5",
														"nodeType": "YulTypedName",
														"src": "7712:3:5",
														"type": ""
													}
												],
												"src": "7570:366:5"
											},
											{
												"body": {
													"nativeSrc": "8113:248:5",
													"nodeType": "YulBlock",
													"src": "8113:248:5",
													"statements": [
														{
															"nativeSrc": "8123:26:5",
															"nodeType": "YulAssignment",
															"src": "8123:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8135:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "8135:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8146:2:5",
																		"nodeType": "YulLiteral",
																		"src": "8146:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8131:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "8131:3:5"
																},
																"nativeSrc": "8131:18:5",
																"nodeType": "YulFunctionCall",
																"src": "8131:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8123:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "8123:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8170:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "8170:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8181:1:5",
																				"nodeType": "YulLiteral",
																				"src": "8181:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8166:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "8166:3:5"
																		},
																		"nativeSrc": "8166:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8166:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8189:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "8189:4:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8195:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "8195:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8185:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "8185:3:5"
																		},
																		"nativeSrc": "8185:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8185:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8159:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "8159:6:5"
																},
																"nativeSrc": "8159:47:5",
																"nodeType": "YulFunctionCall",
																"src": "8159:47:5"
															},
															"nativeSrc": "8159:47:5",
															"nodeType": "YulExpressionStatement",
															"src": "8159:47:5"
														},
														{
															"nativeSrc": "8215:139:5",
															"nodeType": "YulAssignment",
															"src": "8215:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "8349:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "8349:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8223:124:5",
																	"nodeType": "YulIdentifier",
																	"src": "8223:124:5"
																},
																"nativeSrc": "8223:131:5",
																"nodeType": "YulFunctionCall",
																"src": "8223:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8215:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "8215:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7942:419:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8093:9:5",
														"nodeType": "YulTypedName",
														"src": "8093:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8108:4:5",
														"nodeType": "YulTypedName",
														"src": "8108:4:5",
														"type": ""
													}
												],
												"src": "7942:419:5"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$290_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$290_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$290_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$290__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$290_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_0a456521298a8e109ec715df19e15f055d32f90bbb5b7d724683fff1eb669676(memPtr) {\n\n        mstore(add(memPtr, 0), \"Amount must be greater than zero\")\n\n        mstore(add(memPtr, 32), \" and less than or equal to 500\")\n\n    }\n\n    function abi_encode_t_stringliteral_0a456521298a8e109ec715df19e15f055d32f90bbb5b7d724683fff1eb669676_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 62)\n        store_literal_in_memory_0a456521298a8e109ec715df19e15f055d32f90bbb5b7d724683fff1eb669676(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0a456521298a8e109ec715df19e15f055d32f90bbb5b7d724683fff1eb669676__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0a456521298a8e109ec715df19e15f055d32f90bbb5b7d724683fff1eb669676_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient funds\")\n\n    }\n\n    function abi_encode_t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(memPtr) {\n\n        mstore(add(memPtr, 0), \"ReentrancyGuard: reentrant call\")\n\n    }\n\n    function abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"332": [
									{
										"length": 32,
										"start": 431
									},
									{
										"length": 32,
										"start": 468
									},
									{
										"length": 32,
										"start": 721
									},
									{
										"length": 32,
										"start": 938
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610086575f3560e01c8063c39124ab11610059578063c39124ab146100ee578063c71daccb1461010c578063e4e103dc1461012a578063f2fde38b1461014657610086565b8063715018a61461008a57806386a35f25146100945780638da5cb5b146100b2578063a04f6b4b146100d0575b5f80fd5b610092610162565b005b61009c610175565b6040516100a991906106e1565b60405180910390f35b6100ba610179565b6040516100c79190610739565b60405180910390f35b6100d86101a0565b6040516100e591906106e1565b60405180910390f35b6100f66101ad565b60405161010391906107ad565b60405180910390f35b6101146101d1565b60405161012191906106e1565b60405180910390f35b610144600480360381019061013f919061081e565b61026f565b005b610160600480360381019061015b919061085c565b61049e565b005b61016a610522565b6101735f6105a9565b565b5f81565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b681b1ae4d6e2ef50000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b5f7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161022b9190610739565b602060405180830381865afa158015610246573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061026a919061089b565b905090565b61027761066a565b5f8111801561028f5750681b1ae4d6e2ef5000008111155b6102ce576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102c590610946565b60405180910390fd5b807f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016103289190610739565b602060405180830381865afa158015610343573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610367919061089b565b10156103a8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161039f906109ae565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff1660e01b81526004016104039291906109cc565b6020604051808303815f875af115801561041f573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104439190610a28565b508173ffffffffffffffffffffffffffffffffffffffff167fe366ef68d2c0620e9e4c5074fd7ad0ce6739b65287f9c2d09b7d002da556879b8260405161048a91906106e1565b60405180910390a261049a6106b9565b5050565b6104a6610522565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610516575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161050d9190610739565b60405180910390fd5b61051f816105a9565b50565b61052a6106c2565b73ffffffffffffffffffffffffffffffffffffffff16610548610179565b73ffffffffffffffffffffffffffffffffffffffff16146105a75761056b6106c2565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161059e9190610739565b60405180910390fd5b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6002600154036106af576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106a690610a9d565b60405180910390fd5b6002600181905550565b60018081905550565b5f33905090565b5f819050919050565b6106db816106c9565b82525050565b5f6020820190506106f45f8301846106d2565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610723826106fa565b9050919050565b61073381610719565b82525050565b5f60208201905061074c5f83018461072a565b92915050565b5f819050919050565b5f61077561077061076b846106fa565b610752565b6106fa565b9050919050565b5f6107868261075b565b9050919050565b5f6107978261077c565b9050919050565b6107a78161078d565b82525050565b5f6020820190506107c05f83018461079e565b92915050565b5f80fd5b6107d381610719565b81146107dd575f80fd5b50565b5f813590506107ee816107ca565b92915050565b6107fd816106c9565b8114610807575f80fd5b50565b5f81359050610818816107f4565b92915050565b5f8060408385031215610834576108336107c6565b5b5f610841858286016107e0565b92505060206108528582860161080a565b9150509250929050565b5f60208284031215610871576108706107c6565b5b5f61087e848285016107e0565b91505092915050565b5f81519050610895816107f4565b92915050565b5f602082840312156108b0576108af6107c6565b5b5f6108bd84828501610887565b91505092915050565b5f82825260208201905092915050565b7f416d6f756e74206d7573742062652067726561746572207468616e207a65726f5f8201527f20616e64206c657373207468616e206f7220657175616c20746f203530300000602082015250565b5f610930603e836108c6565b915061093b826108d6565b604082019050919050565b5f6020820190508181035f83015261095d81610924565b9050919050565b7f496e73756666696369656e742066756e647300000000000000000000000000005f82015250565b5f6109986012836108c6565b91506109a382610964565b602082019050919050565b5f6020820190508181035f8301526109c58161098c565b9050919050565b5f6040820190506109df5f83018561072a565b6109ec60208301846106d2565b9392505050565b5f8115159050919050565b610a07816109f3565b8114610a11575f80fd5b50565b5f81519050610a22816109fe565b92915050565b5f60208284031215610a3d57610a3c6107c6565b5b5f610a4a84828501610a14565b91505092915050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c005f82015250565b5f610a87601f836108c6565b9150610a9282610a53565b602082019050919050565b5f6020820190508181035f830152610ab481610a7b565b905091905056fea2646970667358221220e337a088448733aa69ec55fa078bfa50ca898c0708feac8d109515e0a8ba49aa64736f6c63430008160033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x86 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xC39124AB GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xC39124AB EQ PUSH2 0xEE JUMPI DUP1 PUSH4 0xC71DACCB EQ PUSH2 0x10C JUMPI DUP1 PUSH4 0xE4E103DC EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x146 JUMPI PUSH2 0x86 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x8A JUMPI DUP1 PUSH4 0x86A35F25 EQ PUSH2 0x94 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xB2 JUMPI DUP1 PUSH4 0xA04F6B4B EQ PUSH2 0xD0 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x92 PUSH2 0x162 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x9C PUSH2 0x175 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0x6E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xBA PUSH2 0x179 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC7 SWAP2 SWAP1 PUSH2 0x739 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD8 PUSH2 0x1A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE5 SWAP2 SWAP1 PUSH2 0x6E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF6 PUSH2 0x1AD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x103 SWAP2 SWAP1 PUSH2 0x7AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x114 PUSH2 0x1D1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x121 SWAP2 SWAP1 PUSH2 0x6E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x144 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x13F SWAP2 SWAP1 PUSH2 0x81E JUMP JUMPDEST PUSH2 0x26F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x160 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x15B SWAP2 SWAP1 PUSH2 0x85C JUMP JUMPDEST PUSH2 0x49E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x16A PUSH2 0x522 JUMP JUMPDEST PUSH2 0x173 PUSH0 PUSH2 0x5A9 JUMP JUMPDEST JUMP JUMPDEST PUSH0 DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH9 0x1B1AE4D6E2EF500000 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x22B SWAP2 SWAP1 PUSH2 0x739 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x246 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x26A SWAP2 SWAP1 PUSH2 0x89B JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x277 PUSH2 0x66A JUMP JUMPDEST PUSH0 DUP2 GT DUP1 ISZERO PUSH2 0x28F JUMPI POP PUSH9 0x1B1AE4D6E2EF500000 DUP2 GT ISZERO JUMPDEST PUSH2 0x2CE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2C5 SWAP1 PUSH2 0x946 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x328 SWAP2 SWAP1 PUSH2 0x739 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x343 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x367 SWAP2 SWAP1 PUSH2 0x89B JUMP JUMPDEST LT ISZERO PUSH2 0x3A8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x39F SWAP1 PUSH2 0x9AE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP4 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x403 SWAP3 SWAP2 SWAP1 PUSH2 0x9CC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x41F JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x443 SWAP2 SWAP1 PUSH2 0xA28 JUMP JUMPDEST POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xE366EF68D2C0620E9E4C5074FD7AD0CE6739B65287F9C2D09B7D002DA556879B DUP3 PUSH1 0x40 MLOAD PUSH2 0x48A SWAP2 SWAP1 PUSH2 0x6E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0x49A PUSH2 0x6B9 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x4A6 PUSH2 0x522 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x516 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x50D SWAP2 SWAP1 PUSH2 0x739 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x51F DUP2 PUSH2 0x5A9 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x52A PUSH2 0x6C2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x548 PUSH2 0x179 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x5A7 JUMPI PUSH2 0x56B PUSH2 0x6C2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x59E SWAP2 SWAP1 PUSH2 0x739 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x6AF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6A6 SWAP1 PUSH2 0xA9D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6DB DUP2 PUSH2 0x6C9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x6F4 PUSH0 DUP4 ADD DUP5 PUSH2 0x6D2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x723 DUP3 PUSH2 0x6FA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x733 DUP2 PUSH2 0x719 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x74C PUSH0 DUP4 ADD DUP5 PUSH2 0x72A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x775 PUSH2 0x770 PUSH2 0x76B DUP5 PUSH2 0x6FA JUMP JUMPDEST PUSH2 0x752 JUMP JUMPDEST PUSH2 0x6FA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x786 DUP3 PUSH2 0x75B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x797 DUP3 PUSH2 0x77C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7A7 DUP2 PUSH2 0x78D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x7C0 PUSH0 DUP4 ADD DUP5 PUSH2 0x79E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x7D3 DUP2 PUSH2 0x719 JUMP JUMPDEST DUP2 EQ PUSH2 0x7DD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x7EE DUP2 PUSH2 0x7CA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x7FD DUP2 PUSH2 0x6C9 JUMP JUMPDEST DUP2 EQ PUSH2 0x807 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x818 DUP2 PUSH2 0x7F4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x834 JUMPI PUSH2 0x833 PUSH2 0x7C6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x841 DUP6 DUP3 DUP7 ADD PUSH2 0x7E0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x852 DUP6 DUP3 DUP7 ADD PUSH2 0x80A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x871 JUMPI PUSH2 0x870 PUSH2 0x7C6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x87E DUP5 DUP3 DUP6 ADD PUSH2 0x7E0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x895 DUP2 PUSH2 0x7F4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8B0 JUMPI PUSH2 0x8AF PUSH2 0x7C6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x8BD DUP5 DUP3 DUP6 ADD PUSH2 0x887 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E207A65726F PUSH0 DUP3 ADD MSTORE PUSH32 0x20616E64206C657373207468616E206F7220657175616C20746F203530300000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x930 PUSH1 0x3E DUP4 PUSH2 0x8C6 JUMP JUMPDEST SWAP2 POP PUSH2 0x93B DUP3 PUSH2 0x8D6 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x95D DUP2 PUSH2 0x924 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742066756E64730000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x998 PUSH1 0x12 DUP4 PUSH2 0x8C6 JUMP JUMPDEST SWAP2 POP PUSH2 0x9A3 DUP3 PUSH2 0x964 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x9C5 DUP2 PUSH2 0x98C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x9DF PUSH0 DUP4 ADD DUP6 PUSH2 0x72A JUMP JUMPDEST PUSH2 0x9EC PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x6D2 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA07 DUP2 PUSH2 0x9F3 JUMP JUMPDEST DUP2 EQ PUSH2 0xA11 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xA22 DUP2 PUSH2 0x9FE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA3D JUMPI PUSH2 0xA3C PUSH2 0x7C6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xA4A DUP5 DUP3 DUP6 ADD PUSH2 0xA14 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xA87 PUSH1 0x1F DUP4 PUSH2 0x8C6 JUMP JUMPDEST SWAP2 POP PUSH2 0xA92 DUP3 PUSH2 0xA53 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xAB4 DUP2 PUSH2 0xA7B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE3 CALLDATACOPY LOG0 DUP9 PREVRANDAO DUP8 CALLER 0xAA PUSH10 0xEC55FA078BFA50CA898C SMOD ADDMOD INVALID 0xAC DUP14 LT SWAP6 ISZERO 0xE0 0xA8 0xBA 0x49 0xAA PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "240:862:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2293:101:0;;;:::i;:::-;;397:30:4;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1638:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;337:54:4;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;298:32;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;987:113;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;611:371;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2293:101;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;397:30:4:-;426:1;397:30;:::o;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;337:54:4:-;381:10;337:54;:::o;298:32::-;;;:::o;987:113::-;1034:7;1060:8;:18;;;1087:4;1060:33;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1053:40;;987:113;:::o;611:371::-;2261:21:1;:19;:21::i;:::-;710:1:4::1;701:6;:10;:41;;;;;381:10;715:6;:27;;701:41;693:116;;;;;;;;;;;;:::i;:::-;;;;;;;;;864:6;827:8;:18;;;854:4;827:33;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:43;;819:74;;;;;;;;;;;;:::i;:::-;;;;;;;;;903:8;:17;;;921:4;927:6;903:31;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;962:4;949:26;;;968:6;949:26;;;;;;:::i;:::-;;;;;;;;2303:20:1::0;:18;:20::i;:::-;611:371:4;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;1796:162::-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;2336:287:1:-;1759:1;2468:7;;:19;2460:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1759:1;2598:7;:18;;;;2336:287::o;2629:209::-;1716:1;2809:7;:22;;;;2629:209::o;656:96:3:-;709:7;735:10;728:17;;656:96;:::o;7:77:5:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;442:126::-;479:7;519:42;512:5;508:54;497:65;;442:126;;;:::o;574:96::-;611:7;640:24;658:5;640:24;:::i;:::-;629:35;;574:96;;;:::o;676:118::-;763:24;781:5;763:24;:::i;:::-;758:3;751:37;676:118;;:::o;800:222::-;893:4;931:2;920:9;916:18;908:26;;944:71;1012:1;1001:9;997:17;988:6;944:71;:::i;:::-;800:222;;;;:::o;1028:60::-;1056:3;1077:5;1070:12;;1028:60;;;:::o;1094:142::-;1144:9;1177:53;1195:34;1204:24;1222:5;1204:24;:::i;:::-;1195:34;:::i;:::-;1177:53;:::i;:::-;1164:66;;1094:142;;;:::o;1242:126::-;1292:9;1325:37;1356:5;1325:37;:::i;:::-;1312:50;;1242:126;;;:::o;1374:140::-;1438:9;1471:37;1502:5;1471:37;:::i;:::-;1458:50;;1374:140;;;:::o;1520:159::-;1621:51;1666:5;1621:51;:::i;:::-;1616:3;1609:64;1520:159;;:::o;1685:250::-;1792:4;1830:2;1819:9;1815:18;1807:26;;1843:85;1925:1;1914:9;1910:17;1901:6;1843:85;:::i;:::-;1685:250;;;;:::o;2022:117::-;2131:1;2128;2121:12;2268:122;2341:24;2359:5;2341:24;:::i;:::-;2334:5;2331:35;2321:63;;2380:1;2377;2370:12;2321:63;2268:122;:::o;2396:139::-;2442:5;2480:6;2467:20;2458:29;;2496:33;2523:5;2496:33;:::i;:::-;2396:139;;;;:::o;2541:122::-;2614:24;2632:5;2614:24;:::i;:::-;2607:5;2604:35;2594:63;;2653:1;2650;2643:12;2594:63;2541:122;:::o;2669:139::-;2715:5;2753:6;2740:20;2731:29;;2769:33;2796:5;2769:33;:::i;:::-;2669:139;;;;:::o;2814:474::-;2882:6;2890;2939:2;2927:9;2918:7;2914:23;2910:32;2907:119;;;2945:79;;:::i;:::-;2907:119;3065:1;3090:53;3135:7;3126:6;3115:9;3111:22;3090:53;:::i;:::-;3080:63;;3036:117;3192:2;3218:53;3263:7;3254:6;3243:9;3239:22;3218:53;:::i;:::-;3208:63;;3163:118;2814:474;;;;;:::o;3294:329::-;3353:6;3402:2;3390:9;3381:7;3377:23;3373:32;3370:119;;;3408:79;;:::i;:::-;3370:119;3528:1;3553:53;3598:7;3589:6;3578:9;3574:22;3553:53;:::i;:::-;3543:63;;3499:117;3294:329;;;;:::o;3629:143::-;3686:5;3717:6;3711:13;3702:22;;3733:33;3760:5;3733:33;:::i;:::-;3629:143;;;;:::o;3778:351::-;3848:6;3897:2;3885:9;3876:7;3872:23;3868:32;3865:119;;;3903:79;;:::i;:::-;3865:119;4023:1;4048:64;4104:7;4095:6;4084:9;4080:22;4048:64;:::i;:::-;4038:74;;3994:128;3778:351;;;;:::o;4135:169::-;4219:11;4253:6;4248:3;4241:19;4293:4;4288:3;4284:14;4269:29;;4135:169;;;;:::o;4310:249::-;4450:34;4446:1;4438:6;4434:14;4427:58;4519:32;4514:2;4506:6;4502:15;4495:57;4310:249;:::o;4565:366::-;4707:3;4728:67;4792:2;4787:3;4728:67;:::i;:::-;4721:74;;4804:93;4893:3;4804:93;:::i;:::-;4922:2;4917:3;4913:12;4906:19;;4565:366;;;:::o;4937:419::-;5103:4;5141:2;5130:9;5126:18;5118:26;;5190:9;5184:4;5180:20;5176:1;5165:9;5161:17;5154:47;5218:131;5344:4;5218:131;:::i;:::-;5210:139;;4937:419;;;:::o;5362:168::-;5502:20;5498:1;5490:6;5486:14;5479:44;5362:168;:::o;5536:366::-;5678:3;5699:67;5763:2;5758:3;5699:67;:::i;:::-;5692:74;;5775:93;5864:3;5775:93;:::i;:::-;5893:2;5888:3;5884:12;5877:19;;5536:366;;;:::o;5908:419::-;6074:4;6112:2;6101:9;6097:18;6089:26;;6161:9;6155:4;6151:20;6147:1;6136:9;6132:17;6125:47;6189:131;6315:4;6189:131;:::i;:::-;6181:139;;5908:419;;;:::o;6333:332::-;6454:4;6492:2;6481:9;6477:18;6469:26;;6505:71;6573:1;6562:9;6558:17;6549:6;6505:71;:::i;:::-;6586:72;6654:2;6643:9;6639:18;6630:6;6586:72;:::i;:::-;6333:332;;;;;:::o;6671:90::-;6705:7;6748:5;6741:13;6734:21;6723:32;;6671:90;;;:::o;6767:116::-;6837:21;6852:5;6837:21;:::i;:::-;6830:5;6827:32;6817:60;;6873:1;6870;6863:12;6817:60;6767:116;:::o;6889:137::-;6943:5;6974:6;6968:13;6959:22;;6990:30;7014:5;6990:30;:::i;:::-;6889:137;;;;:::o;7032:345::-;7099:6;7148:2;7136:9;7127:7;7123:23;7119:32;7116:119;;;7154:79;;:::i;:::-;7116:119;7274:1;7299:61;7352:7;7343:6;7332:9;7328:22;7299:61;:::i;:::-;7289:71;;7245:125;7032:345;;;;:::o;7383:181::-;7523:33;7519:1;7511:6;7507:14;7500:57;7383:181;:::o;7570:366::-;7712:3;7733:67;7797:2;7792:3;7733:67;:::i;:::-;7726:74;;7809:93;7898:3;7809:93;:::i;:::-;7927:2;7922:3;7918:12;7911:19;;7570:366;;;:::o;7942:419::-;8108:4;8146:2;8135:9;8131:18;8123:26;;8195:9;8189:4;8185:20;8181:1;8170:9;8166:17;8159:47;8223:131;8349:4;8223:131;:::i;:::-;8215:139;;7942:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "560200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"MAX_REWARD_AMOUNT()": "392",
								"MAX_TAX()": "347",
								"agcToken()": "infinite",
								"checkBalance()": "infinite",
								"owner()": "2560",
								"renounceOwnership()": "infinite",
								"rewardUser(address,uint256)": "infinite",
								"transferOwnership(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 240,
									"end": 1102,
									"name": "PUSH",
									"source": 4,
									"value": "A0"
								},
								{
									"begin": 240,
									"end": 1102,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 240,
									"end": 1102,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 496,
									"end": 606,
									"name": "CALLVALUE",
									"source": 4
								},
								{
									"begin": 496,
									"end": 606,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 496,
									"end": 606,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 496,
									"end": 606,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 496,
									"end": 606,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 496,
									"end": 606,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 496,
									"end": 606,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 496,
									"end": 606,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 496,
									"end": 606,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 496,
									"end": 606,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 496,
									"end": 606,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 496,
									"end": 606,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 496,
									"end": 606,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 496,
									"end": 606,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 496,
									"end": 606,
									"name": "CODESIZE",
									"source": 4
								},
								{
									"begin": 496,
									"end": 606,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 496,
									"end": 606,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 496,
									"end": 606,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 496,
									"end": 606,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 496,
									"end": 606,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 496,
									"end": 606,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 496,
									"end": 606,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 496,
									"end": 606,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 496,
									"end": 606,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 496,
									"end": 606,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 496,
									"end": 606,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 496,
									"end": 606,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 496,
									"end": 606,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 496,
									"end": 606,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 496,
									"end": 606,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 496,
									"end": 606,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 496,
									"end": 606,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 496,
									"end": 606,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 496,
									"end": 606,
									"name": "tag",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 496,
									"end": 606,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 542,
									"end": 552,
									"name": "CALLER",
									"source": 4
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1821,
									"end": 1828,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 582,
									"end": 598,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 564,
									"end": 599,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 564,
									"end": 599,
									"modifierDepth": 1,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 564,
									"end": 599,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 564,
									"end": 599,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 564,
									"end": 599,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 564,
									"end": 599,
									"modifierDepth": 1,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 564,
									"end": 599,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 564,
									"end": 599,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 564,
									"end": 599,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 564,
									"end": 599,
									"modifierDepth": 1,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 496,
									"end": 606,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 240,
									"end": 1102,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "15"
								},
								{
									"begin": 240,
									"end": 1102,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 5,
									"value": "18"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 5,
									"value": "21"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "31"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 5,
									"value": "31"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "33"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "21"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 5,
									"value": "33"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "34"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 5,
									"value": "34"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 5,
									"value": "23"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "36"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 5,
									"value": "36"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "tag",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 915,
									"end": 921,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 966,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 952,
									"end": 961,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 943,
									"end": 950,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 939,
									"end": 962,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 935,
									"end": 967,
									"name": "SLT",
									"source": 5
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "38"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "39"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "18"
								},
								{
									"begin": 970,
									"end": 1049,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "tag",
									"source": 5,
									"value": "39"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "tag",
									"source": 5,
									"value": "38"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1090,
									"end": 1091,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1171,
									"end": 1178,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 1162,
									"end": 1168,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1151,
									"end": 1160,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 1147,
									"end": 1169,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "23"
								},
								{
									"begin": 1115,
									"end": 1179,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "tag",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1061,
									"end": 1189,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 845,
									"end": 1196,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1202,
									"end": 1320,
									"name": "tag",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 1202,
									"end": 1320,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1289,
									"end": 1313,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "42"
								},
								{
									"begin": 1307,
									"end": 1312,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1289,
									"end": 1313,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "21"
								},
								{
									"begin": 1289,
									"end": 1313,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1289,
									"end": 1313,
									"name": "tag",
									"source": 5,
									"value": "42"
								},
								{
									"begin": 1289,
									"end": 1313,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1284,
									"end": 1287,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1277,
									"end": 1314,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1202,
									"end": 1320,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1202,
									"end": 1320,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1202,
									"end": 1320,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1326,
									"end": 1548,
									"name": "tag",
									"source": 5,
									"value": "10"
								},
								{
									"begin": 1326,
									"end": 1548,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1419,
									"end": 1423,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1457,
									"end": 1459,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1446,
									"end": 1455,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1442,
									"end": 1460,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1434,
									"end": 1460,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1434,
									"end": 1460,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1470,
									"end": 1541,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "44"
								},
								{
									"begin": 1538,
									"end": 1539,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1527,
									"end": 1536,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1523,
									"end": 1540,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1514,
									"end": 1520,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 1470,
									"end": 1541,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 1470,
									"end": 1541,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1470,
									"end": 1541,
									"name": "tag",
									"source": 5,
									"value": "44"
								},
								{
									"begin": 1470,
									"end": 1541,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1326,
									"end": 1548,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 1326,
									"end": 1548,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1326,
									"end": 1548,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1326,
									"end": 1548,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1326,
									"end": 1548,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 240,
									"end": 1102,
									"name": "tag",
									"source": 4,
									"value": "15"
								},
								{
									"begin": 240,
									"end": 1102,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 240,
									"end": 1102,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 240,
									"end": 1102,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 240,
									"end": 1102,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 240,
									"end": 1102,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 240,
									"end": 1102,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 240,
									"end": 1102,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 240,
									"end": 1102,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 240,
									"end": 1102,
									"name": "ASSIGNIMMUTABLE",
									"source": 4,
									"value": "332"
								},
								{
									"begin": 240,
									"end": 1102,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 240,
									"end": 1102,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 240,
									"end": 1102,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e337a088448733aa69ec55fa078bfa50ca898c0708feac8d109515e0a8ba49aa64736f6c63430008160033",
									".code": [
										{
											"begin": 240,
											"end": 1102,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 240,
											"end": 1102,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 240,
											"end": 1102,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 240,
											"end": 1102,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 240,
											"end": 1102,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 240,
											"end": 1102,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 240,
											"end": 1102,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 240,
											"end": 1102,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 240,
											"end": 1102,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 240,
											"end": 1102,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 240,
											"end": 1102,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 240,
											"end": 1102,
											"name": "tag",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 240,
											"end": 1102,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 240,
											"end": 1102,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 240,
											"end": 1102,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 240,
											"end": 1102,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 240,
											"end": 1102,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 240,
											"end": 1102,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 240,
											"end": 1102,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 240,
											"end": 1102,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 240,
											"end": 1102,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 240,
											"end": 1102,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 240,
											"end": 1102,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 240,
											"end": 1102,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 240,
											"end": 1102,
											"name": "PUSH",
											"source": 4,
											"value": "C39124AB"
										},
										{
											"begin": 240,
											"end": 1102,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 240,
											"end": 1102,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 240,
											"end": 1102,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 240,
											"end": 1102,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 240,
											"end": 1102,
											"name": "PUSH",
											"source": 4,
											"value": "C39124AB"
										},
										{
											"begin": 240,
											"end": 1102,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 240,
											"end": 1102,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 240,
											"end": 1102,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 240,
											"end": 1102,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 240,
											"end": 1102,
											"name": "PUSH",
											"source": 4,
											"value": "C71DACCB"
										},
										{
											"begin": 240,
											"end": 1102,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 240,
											"end": 1102,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 240,
											"end": 1102,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 240,
											"end": 1102,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 240,
											"end": 1102,
											"name": "PUSH",
											"source": 4,
											"value": "E4E103DC"
										},
										{
											"begin": 240,
											"end": 1102,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 240,
											"end": 1102,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 240,
											"end": 1102,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 240,
											"end": 1102,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 240,
											"end": 1102,
											"name": "PUSH",
											"source": 4,
											"value": "F2FDE38B"
										},
										{
											"begin": 240,
											"end": 1102,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 240,
											"end": 1102,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 240,
											"end": 1102,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 240,
											"end": 1102,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 240,
											"end": 1102,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 240,
											"end": 1102,
											"name": "tag",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 240,
											"end": 1102,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 240,
											"end": 1102,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 240,
											"end": 1102,
											"name": "PUSH",
											"source": 4,
											"value": "715018A6"
										},
										{
											"begin": 240,
											"end": 1102,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 240,
											"end": 1102,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 240,
											"end": 1102,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 240,
											"end": 1102,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 240,
											"end": 1102,
											"name": "PUSH",
											"source": 4,
											"value": "86A35F25"
										},
										{
											"begin": 240,
											"end": 1102,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 240,
											"end": 1102,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 240,
											"end": 1102,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 240,
											"end": 1102,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 240,
											"end": 1102,
											"name": "PUSH",
											"source": 4,
											"value": "8DA5CB5B"
										},
										{
											"begin": 240,
											"end": 1102,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 240,
											"end": 1102,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 240,
											"end": 1102,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 240,
											"end": 1102,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 240,
											"end": 1102,
											"name": "PUSH",
											"source": 4,
											"value": "A04F6B4B"
										},
										{
											"begin": 240,
											"end": 1102,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 240,
											"end": 1102,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 240,
											"end": 1102,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 240,
											"end": 1102,
											"name": "tag",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 240,
											"end": 1102,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 240,
											"end": 1102,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 240,
											"end": 1102,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 240,
											"end": 1102,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 397,
											"end": 427,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 397,
											"end": 427,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 397,
											"end": 427,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 397,
											"end": 427,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 397,
											"end": 427,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 397,
											"end": 427,
											"name": "tag",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 397,
											"end": 427,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 397,
											"end": 427,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 397,
											"end": 427,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 397,
											"end": 427,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 397,
											"end": 427,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 397,
											"end": 427,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 397,
											"end": 427,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 397,
											"end": 427,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 397,
											"end": 427,
											"name": "tag",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 397,
											"end": 427,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 397,
											"end": 427,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 397,
											"end": 427,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 397,
											"end": 427,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 397,
											"end": 427,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 397,
											"end": 427,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 397,
											"end": 427,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 397,
											"end": 427,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 337,
											"end": 391,
											"name": "tag",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 337,
											"end": 391,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 337,
											"end": 391,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 337,
											"end": 391,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 337,
											"end": 391,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 337,
											"end": 391,
											"name": "tag",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 337,
											"end": 391,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 337,
											"end": 391,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 337,
											"end": 391,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 337,
											"end": 391,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 337,
											"end": 391,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 337,
											"end": 391,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 337,
											"end": 391,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 337,
											"end": 391,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 337,
											"end": 391,
											"name": "tag",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 337,
											"end": 391,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 337,
											"end": 391,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 337,
											"end": 391,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 337,
											"end": 391,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 337,
											"end": 391,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 337,
											"end": 391,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 337,
											"end": 391,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 337,
											"end": 391,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 298,
											"end": 330,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 298,
											"end": 330,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 298,
											"end": 330,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 298,
											"end": 330,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 298,
											"end": 330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 298,
											"end": 330,
											"name": "tag",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 298,
											"end": 330,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 298,
											"end": 330,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 298,
											"end": 330,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 298,
											"end": 330,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 298,
											"end": 330,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 298,
											"end": 330,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 298,
											"end": 330,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 298,
											"end": 330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 298,
											"end": 330,
											"name": "tag",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 298,
											"end": 330,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 298,
											"end": 330,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 298,
											"end": 330,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 298,
											"end": 330,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 298,
											"end": 330,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 298,
											"end": 330,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 298,
											"end": 330,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 298,
											"end": 330,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 987,
											"end": 1100,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 987,
											"end": 1100,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 987,
											"end": 1100,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 987,
											"end": 1100,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 987,
											"end": 1100,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 987,
											"end": 1100,
											"name": "tag",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 987,
											"end": 1100,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 987,
											"end": 1100,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 987,
											"end": 1100,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 987,
											"end": 1100,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 987,
											"end": 1100,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 987,
											"end": 1100,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 987,
											"end": 1100,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 987,
											"end": 1100,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 987,
											"end": 1100,
											"name": "tag",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 987,
											"end": 1100,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 987,
											"end": 1100,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 987,
											"end": 1100,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 987,
											"end": 1100,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 987,
											"end": 1100,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 987,
											"end": 1100,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 987,
											"end": 1100,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 987,
											"end": 1100,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 611,
											"end": 982,
											"name": "tag",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 611,
											"end": 982,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 611,
											"end": 982,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 611,
											"end": 982,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 611,
											"end": 982,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 611,
											"end": 982,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 611,
											"end": 982,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 611,
											"end": 982,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 611,
											"end": 982,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 611,
											"end": 982,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 611,
											"end": 982,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 611,
											"end": 982,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 611,
											"end": 982,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 611,
											"end": 982,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 611,
											"end": 982,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 611,
											"end": 982,
											"name": "tag",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 611,
											"end": 982,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 611,
											"end": 982,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 611,
											"end": 982,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 611,
											"end": 982,
											"name": "tag",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 611,
											"end": 982,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 611,
											"end": 982,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 397,
											"end": 427,
											"name": "tag",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 397,
											"end": 427,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 426,
											"end": 427,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 397,
											"end": 427,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 397,
											"end": 427,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 337,
											"end": 391,
											"name": "tag",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 337,
											"end": 391,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 381,
											"end": 391,
											"name": "PUSH",
											"source": 4,
											"value": "1B1AE4D6E2EF500000"
										},
										{
											"begin": 337,
											"end": 391,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 337,
											"end": 391,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 298,
											"end": 330,
											"name": "tag",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 298,
											"end": 330,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 298,
											"end": 330,
											"name": "PUSHIMMUTABLE",
											"source": 4,
											"value": "332"
										},
										{
											"begin": 298,
											"end": 330,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 298,
											"end": 330,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 987,
											"end": 1100,
											"name": "tag",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 987,
											"end": 1100,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1034,
											"end": 1041,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1060,
											"end": 1068,
											"name": "PUSHIMMUTABLE",
											"source": 4,
											"value": "332"
										},
										{
											"begin": 1060,
											"end": 1078,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1060,
											"end": 1078,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1060,
											"end": 1078,
											"name": "PUSH",
											"source": 4,
											"value": "70A08231"
										},
										{
											"begin": 1087,
											"end": 1091,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 1060,
											"end": 1093,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1060,
											"end": 1093,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1060,
											"end": 1093,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1060,
											"end": 1093,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1060,
											"end": 1093,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1060,
											"end": 1093,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 1060,
											"end": 1093,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 1060,
											"end": 1093,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1060,
											"end": 1093,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1060,
											"end": 1093,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1060,
											"end": 1093,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1060,
											"end": 1093,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 1060,
											"end": 1093,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1060,
											"end": 1093,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1060,
											"end": 1093,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 1060,
											"end": 1093,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1060,
											"end": 1093,
											"name": "tag",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 1060,
											"end": 1093,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1060,
											"end": 1093,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1060,
											"end": 1093,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1060,
											"end": 1093,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1060,
											"end": 1093,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1060,
											"end": 1093,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1060,
											"end": 1093,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1060,
											"end": 1093,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1060,
											"end": 1093,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1060,
											"end": 1093,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 1060,
											"end": 1093,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 1060,
											"end": 1093,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1060,
											"end": 1093,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1060,
											"end": 1093,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1060,
											"end": 1093,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 1060,
											"end": 1093,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1060,
											"end": 1093,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1060,
											"end": 1093,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1060,
											"end": 1093,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1060,
											"end": 1093,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 1060,
											"end": 1093,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1060,
											"end": 1093,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1060,
											"end": 1093,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1060,
											"end": 1093,
											"name": "tag",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 1060,
											"end": 1093,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1060,
											"end": 1093,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1060,
											"end": 1093,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1060,
											"end": 1093,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1060,
											"end": 1093,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1060,
											"end": 1093,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1060,
											"end": 1093,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1060,
											"end": 1093,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1060,
											"end": 1093,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1060,
											"end": 1093,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1060,
											"end": 1093,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1060,
											"end": 1093,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1060,
											"end": 1093,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1060,
											"end": 1093,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1060,
											"end": 1093,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1060,
											"end": 1093,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1060,
											"end": 1093,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1060,
											"end": 1093,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1060,
											"end": 1093,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1060,
											"end": 1093,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1060,
											"end": 1093,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1060,
											"end": 1093,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1060,
											"end": 1093,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1060,
											"end": 1093,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 1060,
											"end": 1093,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1060,
											"end": 1093,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1060,
											"end": 1093,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 1060,
											"end": 1093,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1060,
											"end": 1093,
											"name": "tag",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 1060,
											"end": 1093,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1053,
											"end": 1093,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1053,
											"end": 1093,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 987,
											"end": 1100,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 987,
											"end": 1100,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 611,
											"end": 982,
											"name": "tag",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 611,
											"end": 982,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 710,
											"end": 711,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 701,
											"end": 707,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 701,
											"end": 711,
											"modifierDepth": 1,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 701,
											"end": 742,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 701,
											"end": 742,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 701,
											"end": 742,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 701,
											"end": 742,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 701,
											"end": 742,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 381,
											"end": 391,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "1B1AE4D6E2EF500000"
										},
										{
											"begin": 715,
											"end": 721,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 715,
											"end": 742,
											"modifierDepth": 1,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 715,
											"end": 742,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 701,
											"end": 742,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 701,
											"end": 742,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 693,
											"end": 809,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 693,
											"end": 809,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 693,
											"end": 809,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 693,
											"end": 809,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 693,
											"end": 809,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 693,
											"end": 809,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 693,
											"end": 809,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 693,
											"end": 809,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 693,
											"end": 809,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 693,
											"end": 809,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 693,
											"end": 809,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 693,
											"end": 809,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 693,
											"end": 809,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 693,
											"end": 809,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 693,
											"end": 809,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 693,
											"end": 809,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 693,
											"end": 809,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 693,
											"end": 809,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 693,
											"end": 809,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 693,
											"end": 809,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 693,
											"end": 809,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 693,
											"end": 809,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 693,
											"end": 809,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 693,
											"end": 809,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 864,
											"end": 870,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 827,
											"end": 835,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 4,
											"value": "332"
										},
										{
											"begin": 827,
											"end": 845,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 827,
											"end": 845,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 827,
											"end": 845,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "70A08231"
										},
										{
											"begin": 854,
											"end": 858,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 827,
											"end": 860,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 827,
											"end": 860,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 827,
											"end": 860,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 827,
											"end": 860,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 827,
											"end": 860,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 827,
											"end": 860,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 827,
											"end": 860,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 827,
											"end": 860,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 827,
											"end": 860,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 827,
											"end": 860,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 827,
											"end": 860,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 827,
											"end": 860,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 827,
											"end": 860,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 827,
											"end": 860,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 827,
											"end": 860,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 827,
											"end": 860,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 827,
											"end": 860,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 827,
											"end": 860,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 827,
											"end": 860,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 827,
											"end": 860,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 827,
											"end": 860,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 827,
											"end": 860,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 827,
											"end": 860,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 827,
											"end": 860,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 827,
											"end": 860,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 827,
											"end": 860,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 827,
											"end": 860,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 827,
											"end": 860,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 827,
											"end": 860,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 827,
											"end": 860,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 827,
											"end": 860,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 827,
											"end": 860,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 827,
											"end": 860,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 827,
											"end": 860,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 827,
											"end": 860,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 827,
											"end": 860,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 827,
											"end": 860,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 827,
											"end": 860,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 827,
											"end": 860,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 827,
											"end": 860,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 827,
											"end": 860,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 827,
											"end": 860,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 827,
											"end": 860,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 827,
											"end": 860,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 827,
											"end": 860,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 827,
											"end": 860,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 827,
											"end": 860,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 827,
											"end": 860,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 827,
											"end": 860,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 827,
											"end": 860,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 827,
											"end": 860,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 827,
											"end": 860,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 827,
											"end": 860,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 827,
											"end": 860,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 827,
											"end": 860,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 827,
											"end": 860,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 827,
											"end": 860,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 827,
											"end": 860,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 827,
											"end": 860,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 827,
											"end": 860,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 827,
											"end": 860,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 827,
											"end": 860,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 827,
											"end": 860,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 827,
											"end": 860,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 827,
											"end": 860,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 827,
											"end": 860,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 827,
											"end": 860,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 827,
											"end": 860,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 827,
											"end": 860,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 827,
											"end": 860,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 827,
											"end": 860,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 827,
											"end": 870,
											"modifierDepth": 1,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 827,
											"end": 870,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 819,
											"end": 893,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 819,
											"end": 893,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 819,
											"end": 893,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 819,
											"end": 893,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 819,
											"end": 893,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 819,
											"end": 893,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 819,
											"end": 893,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 819,
											"end": 893,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 819,
											"end": 893,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 819,
											"end": 893,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 819,
											"end": 893,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 819,
											"end": 893,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 819,
											"end": 893,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 819,
											"end": 893,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 819,
											"end": 893,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 819,
											"end": 893,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 819,
											"end": 893,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 819,
											"end": 893,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 819,
											"end": 893,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 819,
											"end": 893,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 819,
											"end": 893,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 819,
											"end": 893,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 819,
											"end": 893,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 819,
											"end": 893,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 903,
											"end": 911,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 4,
											"value": "332"
										},
										{
											"begin": 903,
											"end": 920,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 903,
											"end": 920,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 903,
											"end": 920,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "A9059CBB"
										},
										{
											"begin": 921,
											"end": 925,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 927,
											"end": 933,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 903,
											"end": 934,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 903,
											"end": 934,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 903,
											"end": 934,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 903,
											"end": 934,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 903,
											"end": 934,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 903,
											"end": 934,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 903,
											"end": 934,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 903,
											"end": 934,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 903,
											"end": 934,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 903,
											"end": 934,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 903,
											"end": 934,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 903,
											"end": 934,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 903,
											"end": 934,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 903,
											"end": 934,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 903,
											"end": 934,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 903,
											"end": 934,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 903,
											"end": 934,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 903,
											"end": 934,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 903,
											"end": 934,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 903,
											"end": 934,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 903,
											"end": 934,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 903,
											"end": 934,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 903,
											"end": 934,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 903,
											"end": 934,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 903,
											"end": 934,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 903,
											"end": 934,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 903,
											"end": 934,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 903,
											"end": 934,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 903,
											"end": 934,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 903,
											"end": 934,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 903,
											"end": 934,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 903,
											"end": 934,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 903,
											"end": 934,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 903,
											"end": 934,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 903,
											"end": 934,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 903,
											"end": 934,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 903,
											"end": 934,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 903,
											"end": 934,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 903,
											"end": 934,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 903,
											"end": 934,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 903,
											"end": 934,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 903,
											"end": 934,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 903,
											"end": 934,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 903,
											"end": 934,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 903,
											"end": 934,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 903,
											"end": 934,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 903,
											"end": 934,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 903,
											"end": 934,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 903,
											"end": 934,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 903,
											"end": 934,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 903,
											"end": 934,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 903,
											"end": 934,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 903,
											"end": 934,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 903,
											"end": 934,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 903,
											"end": 934,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 903,
											"end": 934,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 903,
											"end": 934,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 903,
											"end": 934,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 903,
											"end": 934,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 903,
											"end": 934,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 903,
											"end": 934,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 903,
											"end": 934,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 903,
											"end": 934,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 903,
											"end": 934,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 903,
											"end": 934,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 903,
											"end": 934,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 903,
											"end": 934,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 903,
											"end": 934,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 903,
											"end": 934,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 903,
											"end": 934,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 903,
											"end": 934,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 903,
											"end": 934,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 903,
											"end": 934,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 903,
											"end": 934,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 962,
											"end": 966,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 949,
											"end": 975,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 949,
											"end": 975,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 949,
											"end": 975,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "E366EF68D2C0620E9E4C5074FD7AD0CE6739B65287F9C2D09B7D002DA556879B"
										},
										{
											"begin": 968,
											"end": 974,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 949,
											"end": 975,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 949,
											"end": 975,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 949,
											"end": 975,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 949,
											"end": 975,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 949,
											"end": 975,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 949,
											"end": 975,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 949,
											"end": 975,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 949,
											"end": 975,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 949,
											"end": 975,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 949,
											"end": 975,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 949,
											"end": 975,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 949,
											"end": 975,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 949,
											"end": 975,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 949,
											"end": 975,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 949,
											"end": 975,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 949,
											"end": 975,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 4
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 2303,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 611,
											"end": 982,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 611,
											"end": 982,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 611,
											"end": 982,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2468,
											"end": 2487,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 2460,
											"end": 2523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2598,
											"end": 2605,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2336,
											"end": 2623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1716,
											"end": 1717,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2809,
											"end": 2816,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2629,
											"end": 2838,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 84,
											"name": "tag",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 78,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 62,
											"end": 78,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 62,
											"end": 78,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7,
											"end": 84,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 84,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 90,
											"end": 208,
											"name": "tag",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 90,
											"end": 208,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 195,
											"end": 200,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 177,
											"end": 201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 177,
											"end": 201,
											"name": "tag",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 172,
											"end": 175,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 165,
											"end": 202,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 90,
											"end": 208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 214,
											"end": 436,
											"name": "tag",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 214,
											"end": 436,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 307,
											"end": 311,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 347,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 334,
											"end": 343,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 322,
											"end": 348,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 322,
											"end": 348,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 426,
											"end": 427,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 415,
											"end": 424,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 411,
											"end": 428,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 402,
											"end": 408,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 358,
											"end": 429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 358,
											"end": 429,
											"name": "tag",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 214,
											"end": 436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 442,
											"end": 568,
											"name": "tag",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 442,
											"end": 568,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 479,
											"end": 486,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 519,
											"end": 561,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 512,
											"end": 517,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 508,
											"end": 562,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 497,
											"end": 562,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 497,
											"end": 562,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 442,
											"end": 568,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 442,
											"end": 568,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 442,
											"end": 568,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 442,
											"end": 568,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 574,
											"end": 670,
											"name": "tag",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 574,
											"end": 670,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 611,
											"end": 618,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 640,
											"end": 664,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 658,
											"end": 663,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 640,
											"end": 664,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 640,
											"end": 664,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 640,
											"end": 664,
											"name": "tag",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 640,
											"end": 664,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 629,
											"end": 664,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 629,
											"end": 664,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 574,
											"end": 670,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 574,
											"end": 670,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 574,
											"end": 670,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 574,
											"end": 670,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 676,
											"end": 794,
											"name": "tag",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 676,
											"end": 794,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 763,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 781,
											"end": 786,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 763,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 763,
											"end": 787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 763,
											"end": 787,
											"name": "tag",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 763,
											"end": 787,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 758,
											"end": 761,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 751,
											"end": 788,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 676,
											"end": 794,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 676,
											"end": 794,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 676,
											"end": 794,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "tag",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 893,
											"end": 897,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 931,
											"end": 933,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 920,
											"end": 929,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 916,
											"end": 934,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 908,
											"end": 934,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 908,
											"end": 934,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 944,
											"end": 1015,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 1012,
											"end": 1013,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1001,
											"end": 1010,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 997,
											"end": 1014,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 988,
											"end": 994,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 944,
											"end": 1015,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 944,
											"end": 1015,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 944,
											"end": 1015,
											"name": "tag",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 944,
											"end": 1015,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 800,
											"end": 1022,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1028,
											"end": 1088,
											"name": "tag",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 1028,
											"end": 1088,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1056,
											"end": 1059,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1077,
											"end": 1082,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1070,
											"end": 1082,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1070,
											"end": 1082,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1028,
											"end": 1088,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1028,
											"end": 1088,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1028,
											"end": 1088,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1028,
											"end": 1088,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1094,
											"end": 1236,
											"name": "tag",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 1094,
											"end": 1236,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1144,
											"end": 1153,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1177,
											"end": 1230,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 1195,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 1204,
											"end": 1228,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 1222,
											"end": 1227,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1204,
											"end": 1228,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 1204,
											"end": 1228,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1204,
											"end": 1228,
											"name": "tag",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 1204,
											"end": 1228,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1195,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 1195,
											"end": 1229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1195,
											"end": 1229,
											"name": "tag",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 1195,
											"end": 1229,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1177,
											"end": 1230,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 1177,
											"end": 1230,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1177,
											"end": 1230,
											"name": "tag",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 1177,
											"end": 1230,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1164,
											"end": 1230,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1164,
											"end": 1230,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1094,
											"end": 1236,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1094,
											"end": 1236,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1094,
											"end": 1236,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1094,
											"end": 1236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1242,
											"end": 1368,
											"name": "tag",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 1242,
											"end": 1368,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1292,
											"end": 1301,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1325,
											"end": 1362,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 1356,
											"end": 1361,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1325,
											"end": 1362,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 1325,
											"end": 1362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1325,
											"end": 1362,
											"name": "tag",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 1325,
											"end": 1362,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1312,
											"end": 1362,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1312,
											"end": 1362,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1242,
											"end": 1368,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1242,
											"end": 1368,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1242,
											"end": 1368,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1242,
											"end": 1368,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1374,
											"end": 1514,
											"name": "tag",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 1374,
											"end": 1514,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1438,
											"end": 1447,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1471,
											"end": 1508,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 1502,
											"end": 1507,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1471,
											"end": 1508,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 1471,
											"end": 1508,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1471,
											"end": 1508,
											"name": "tag",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 1471,
											"end": 1508,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1458,
											"end": 1508,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1458,
											"end": 1508,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1374,
											"end": 1514,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1374,
											"end": 1514,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1374,
											"end": 1514,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1374,
											"end": 1514,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1520,
											"end": 1679,
											"name": "tag",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 1520,
											"end": 1679,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1621,
											"end": 1672,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 1666,
											"end": 1671,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1621,
											"end": 1672,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 1621,
											"end": 1672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1621,
											"end": 1672,
											"name": "tag",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 1621,
											"end": 1672,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1616,
											"end": 1619,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1609,
											"end": 1673,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1520,
											"end": 1679,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1520,
											"end": 1679,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1520,
											"end": 1679,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1685,
											"end": 1935,
											"name": "tag",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 1685,
											"end": 1935,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1792,
											"end": 1796,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1830,
											"end": 1832,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1819,
											"end": 1828,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1815,
											"end": 1833,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1807,
											"end": 1833,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1807,
											"end": 1833,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1843,
											"end": 1928,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 1925,
											"end": 1926,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1914,
											"end": 1923,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1910,
											"end": 1927,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1901,
											"end": 1907,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1843,
											"end": 1928,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 1843,
											"end": 1928,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1843,
											"end": 1928,
											"name": "tag",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 1843,
											"end": 1928,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1685,
											"end": 1935,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1685,
											"end": 1935,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1685,
											"end": 1935,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1685,
											"end": 1935,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1685,
											"end": 1935,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2022,
											"end": 2139,
											"name": "tag",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 2022,
											"end": 2139,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2131,
											"end": 2132,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2128,
											"end": 2129,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2121,
											"end": 2133,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2268,
											"end": 2390,
											"name": "tag",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 2268,
											"end": 2390,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2341,
											"end": 2365,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 2359,
											"end": 2364,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2341,
											"end": 2365,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2341,
											"end": 2365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2341,
											"end": 2365,
											"name": "tag",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 2341,
											"end": 2365,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2334,
											"end": 2339,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2331,
											"end": 2366,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 2321,
											"end": 2384,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 2321,
											"end": 2384,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2380,
											"end": 2381,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2377,
											"end": 2378,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2370,
											"end": 2382,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2321,
											"end": 2384,
											"name": "tag",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 2321,
											"end": 2384,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2268,
											"end": 2390,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2268,
											"end": 2390,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2396,
											"end": 2535,
											"name": "tag",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 2396,
											"end": 2535,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2442,
											"end": 2447,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2480,
											"end": 2486,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2467,
											"end": 2487,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 2458,
											"end": 2487,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2458,
											"end": 2487,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2496,
											"end": 2529,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 2523,
											"end": 2528,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2496,
											"end": 2529,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 2496,
											"end": 2529,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2496,
											"end": 2529,
											"name": "tag",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 2496,
											"end": 2529,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2396,
											"end": 2535,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2396,
											"end": 2535,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2396,
											"end": 2535,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2396,
											"end": 2535,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2396,
											"end": 2535,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2541,
											"end": 2663,
											"name": "tag",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 2541,
											"end": 2663,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2614,
											"end": 2638,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 2632,
											"end": 2637,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2614,
											"end": 2638,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 2614,
											"end": 2638,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2614,
											"end": 2638,
											"name": "tag",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 2614,
											"end": 2638,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2607,
											"end": 2612,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2604,
											"end": 2639,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 2594,
											"end": 2657,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "161"
										},
										{
											"begin": 2594,
											"end": 2657,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2653,
											"end": 2654,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2650,
											"end": 2651,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2643,
											"end": 2655,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2594,
											"end": 2657,
											"name": "tag",
											"source": 5,
											"value": "161"
										},
										{
											"begin": 2594,
											"end": 2657,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2541,
											"end": 2663,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2541,
											"end": 2663,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2669,
											"end": 2808,
											"name": "tag",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 2669,
											"end": 2808,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2715,
											"end": 2720,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2753,
											"end": 2759,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2740,
											"end": 2760,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 2731,
											"end": 2760,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2731,
											"end": 2760,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2769,
											"end": 2802,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 2796,
											"end": 2801,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2769,
											"end": 2802,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 2769,
											"end": 2802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2769,
											"end": 2802,
											"name": "tag",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 2769,
											"end": 2802,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2669,
											"end": 2808,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2669,
											"end": 2808,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2669,
											"end": 2808,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2669,
											"end": 2808,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2669,
											"end": 2808,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2814,
											"end": 3288,
											"name": "tag",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 2814,
											"end": 3288,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2882,
											"end": 2888,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2890,
											"end": 2896,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2939,
											"end": 2941,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2927,
											"end": 2936,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2918,
											"end": 2925,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2914,
											"end": 2937,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2910,
											"end": 2942,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 2907,
											"end": 3026,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2907,
											"end": 3026,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 2907,
											"end": 3026,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2945,
											"end": 3024,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 2945,
											"end": 3024,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 2945,
											"end": 3024,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2945,
											"end": 3024,
											"name": "tag",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 2945,
											"end": 3024,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2907,
											"end": 3026,
											"name": "tag",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 2907,
											"end": 3026,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3065,
											"end": 3066,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3090,
											"end": 3143,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 3135,
											"end": 3142,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3126,
											"end": 3132,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3115,
											"end": 3124,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 3111,
											"end": 3133,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3090,
											"end": 3143,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 3090,
											"end": 3143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3090,
											"end": 3143,
											"name": "tag",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 3090,
											"end": 3143,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3080,
											"end": 3143,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3080,
											"end": 3143,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3036,
											"end": 3153,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3192,
											"end": 3194,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3218,
											"end": 3271,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 3263,
											"end": 3270,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3254,
											"end": 3260,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3243,
											"end": 3252,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 3239,
											"end": 3261,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3218,
											"end": 3271,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 3218,
											"end": 3271,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3218,
											"end": 3271,
											"name": "tag",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 3218,
											"end": 3271,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3208,
											"end": 3271,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3208,
											"end": 3271,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3163,
											"end": 3281,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2814,
											"end": 3288,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2814,
											"end": 3288,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2814,
											"end": 3288,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2814,
											"end": 3288,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2814,
											"end": 3288,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2814,
											"end": 3288,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3294,
											"end": 3623,
											"name": "tag",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 3294,
											"end": 3623,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3353,
											"end": 3359,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3402,
											"end": 3404,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3390,
											"end": 3399,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3381,
											"end": 3388,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3377,
											"end": 3400,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3373,
											"end": 3405,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 3370,
											"end": 3489,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3370,
											"end": 3489,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 3370,
											"end": 3489,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3408,
											"end": 3487,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 3408,
											"end": 3487,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 3408,
											"end": 3487,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3408,
											"end": 3487,
											"name": "tag",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 3408,
											"end": 3487,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3370,
											"end": 3489,
											"name": "tag",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 3370,
											"end": 3489,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3528,
											"end": 3529,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3553,
											"end": 3606,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 3598,
											"end": 3605,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3589,
											"end": 3595,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3578,
											"end": 3587,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3574,
											"end": 3596,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3553,
											"end": 3606,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 3553,
											"end": 3606,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3553,
											"end": 3606,
											"name": "tag",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 3553,
											"end": 3606,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3543,
											"end": 3606,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3543,
											"end": 3606,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3499,
											"end": 3616,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3294,
											"end": 3623,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3294,
											"end": 3623,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3294,
											"end": 3623,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3294,
											"end": 3623,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3294,
											"end": 3623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3629,
											"end": 3772,
											"name": "tag",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 3629,
											"end": 3772,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3686,
											"end": 3691,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3717,
											"end": 3723,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3711,
											"end": 3724,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3702,
											"end": 3724,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3702,
											"end": 3724,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3733,
											"end": 3766,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "174"
										},
										{
											"begin": 3760,
											"end": 3765,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3733,
											"end": 3766,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 3733,
											"end": 3766,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3733,
											"end": 3766,
											"name": "tag",
											"source": 5,
											"value": "174"
										},
										{
											"begin": 3733,
											"end": 3766,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3629,
											"end": 3772,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3629,
											"end": 3772,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3629,
											"end": 3772,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3629,
											"end": 3772,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3629,
											"end": 3772,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3778,
											"end": 4129,
											"name": "tag",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 3778,
											"end": 4129,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3848,
											"end": 3854,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3897,
											"end": 3899,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3885,
											"end": 3894,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3876,
											"end": 3883,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3872,
											"end": 3895,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3868,
											"end": 3900,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 3865,
											"end": 3984,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3865,
											"end": 3984,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 3865,
											"end": 3984,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3903,
											"end": 3982,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "177"
										},
										{
											"begin": 3903,
											"end": 3982,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 3903,
											"end": 3982,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3903,
											"end": 3982,
											"name": "tag",
											"source": 5,
											"value": "177"
										},
										{
											"begin": 3903,
											"end": 3982,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3865,
											"end": 3984,
											"name": "tag",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 3865,
											"end": 3984,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4023,
											"end": 4024,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4048,
											"end": 4112,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "178"
										},
										{
											"begin": 4104,
											"end": 4111,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4095,
											"end": 4101,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4084,
											"end": 4093,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4080,
											"end": 4102,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4048,
											"end": 4112,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 4048,
											"end": 4112,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4048,
											"end": 4112,
											"name": "tag",
											"source": 5,
											"value": "178"
										},
										{
											"begin": 4048,
											"end": 4112,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4038,
											"end": 4112,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4038,
											"end": 4112,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3994,
											"end": 4122,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3778,
											"end": 4129,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3778,
											"end": 4129,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3778,
											"end": 4129,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3778,
											"end": 4129,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3778,
											"end": 4129,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4135,
											"end": 4304,
											"name": "tag",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 4135,
											"end": 4304,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4219,
											"end": 4230,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4253,
											"end": 4259,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4248,
											"end": 4251,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4241,
											"end": 4260,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4293,
											"end": 4297,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4288,
											"end": 4291,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4284,
											"end": 4298,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4269,
											"end": 4298,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4269,
											"end": 4298,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4135,
											"end": 4304,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4135,
											"end": 4304,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4135,
											"end": 4304,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4135,
											"end": 4304,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4135,
											"end": 4304,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4310,
											"end": 4559,
											"name": "tag",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 4310,
											"end": 4559,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4450,
											"end": 4484,
											"name": "PUSH",
											"source": 5,
											"value": "416D6F756E74206D7573742062652067726561746572207468616E207A65726F"
										},
										{
											"begin": 4446,
											"end": 4447,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4438,
											"end": 4444,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4434,
											"end": 4448,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4427,
											"end": 4485,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4519,
											"end": 4551,
											"name": "PUSH",
											"source": 5,
											"value": "20616E64206C657373207468616E206F7220657175616C20746F203530300000"
										},
										{
											"begin": 4514,
											"end": 4516,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4506,
											"end": 4512,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4502,
											"end": 4517,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4495,
											"end": 4552,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4310,
											"end": 4559,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4310,
											"end": 4559,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4565,
											"end": 4931,
											"name": "tag",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 4565,
											"end": 4931,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4707,
											"end": 4710,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4728,
											"end": 4795,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "182"
										},
										{
											"begin": 4792,
											"end": 4794,
											"name": "PUSH",
											"source": 5,
											"value": "3E"
										},
										{
											"begin": 4787,
											"end": 4790,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4728,
											"end": 4795,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 4728,
											"end": 4795,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4728,
											"end": 4795,
											"name": "tag",
											"source": 5,
											"value": "182"
										},
										{
											"begin": 4728,
											"end": 4795,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4721,
											"end": 4795,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4721,
											"end": 4795,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4804,
											"end": 4897,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "183"
										},
										{
											"begin": 4893,
											"end": 4896,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4804,
											"end": 4897,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 4804,
											"end": 4897,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4804,
											"end": 4897,
											"name": "tag",
											"source": 5,
											"value": "183"
										},
										{
											"begin": 4804,
											"end": 4897,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4922,
											"end": 4924,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4917,
											"end": 4920,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4913,
											"end": 4925,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4906,
											"end": 4925,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4906,
											"end": 4925,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4565,
											"end": 4931,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4565,
											"end": 4931,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4565,
											"end": 4931,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4565,
											"end": 4931,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4937,
											"end": 5356,
											"name": "tag",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 4937,
											"end": 5356,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5103,
											"end": 5107,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5141,
											"end": 5143,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5130,
											"end": 5139,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5126,
											"end": 5144,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5118,
											"end": 5144,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5118,
											"end": 5144,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5190,
											"end": 5199,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5184,
											"end": 5188,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5180,
											"end": 5200,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5176,
											"end": 5177,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5165,
											"end": 5174,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5161,
											"end": 5178,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5154,
											"end": 5201,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5218,
											"end": 5349,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "185"
										},
										{
											"begin": 5344,
											"end": 5348,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5218,
											"end": 5349,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 5218,
											"end": 5349,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5218,
											"end": 5349,
											"name": "tag",
											"source": 5,
											"value": "185"
										},
										{
											"begin": 5218,
											"end": 5349,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5210,
											"end": 5349,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5210,
											"end": 5349,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4937,
											"end": 5356,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4937,
											"end": 5356,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4937,
											"end": 5356,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4937,
											"end": 5356,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5362,
											"end": 5530,
											"name": "tag",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 5362,
											"end": 5530,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5502,
											"end": 5522,
											"name": "PUSH",
											"source": 5,
											"value": "496E73756666696369656E742066756E64730000000000000000000000000000"
										},
										{
											"begin": 5498,
											"end": 5499,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5490,
											"end": 5496,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5486,
											"end": 5500,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5479,
											"end": 5523,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5362,
											"end": 5530,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5362,
											"end": 5530,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5536,
											"end": 5902,
											"name": "tag",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 5536,
											"end": 5902,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5678,
											"end": 5681,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5699,
											"end": 5766,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "188"
										},
										{
											"begin": 5763,
											"end": 5765,
											"name": "PUSH",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 5758,
											"end": 5761,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5699,
											"end": 5766,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 5699,
											"end": 5766,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5699,
											"end": 5766,
											"name": "tag",
											"source": 5,
											"value": "188"
										},
										{
											"begin": 5699,
											"end": 5766,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5692,
											"end": 5766,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5692,
											"end": 5766,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5775,
											"end": 5868,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "189"
										},
										{
											"begin": 5864,
											"end": 5867,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5775,
											"end": 5868,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 5775,
											"end": 5868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5775,
											"end": 5868,
											"name": "tag",
											"source": 5,
											"value": "189"
										},
										{
											"begin": 5775,
											"end": 5868,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5893,
											"end": 5895,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5888,
											"end": 5891,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5884,
											"end": 5896,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5877,
											"end": 5896,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5877,
											"end": 5896,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5536,
											"end": 5902,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5536,
											"end": 5902,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5536,
											"end": 5902,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5536,
											"end": 5902,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5908,
											"end": 6327,
											"name": "tag",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 5908,
											"end": 6327,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6074,
											"end": 6078,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6112,
											"end": 6114,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6101,
											"end": 6110,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6089,
											"end": 6115,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6089,
											"end": 6115,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6161,
											"end": 6170,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6155,
											"end": 6159,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6151,
											"end": 6171,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6147,
											"end": 6148,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6136,
											"end": 6145,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6132,
											"end": 6149,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6125,
											"end": 6172,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6189,
											"end": 6320,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "191"
										},
										{
											"begin": 6315,
											"end": 6319,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6189,
											"end": 6320,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 6189,
											"end": 6320,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6189,
											"end": 6320,
											"name": "tag",
											"source": 5,
											"value": "191"
										},
										{
											"begin": 6189,
											"end": 6320,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6181,
											"end": 6320,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6181,
											"end": 6320,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5908,
											"end": 6327,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5908,
											"end": 6327,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5908,
											"end": 6327,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5908,
											"end": 6327,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6333,
											"end": 6665,
											"name": "tag",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 6333,
											"end": 6665,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6454,
											"end": 6458,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6492,
											"end": 6494,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6481,
											"end": 6490,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6477,
											"end": 6495,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6469,
											"end": 6495,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6469,
											"end": 6495,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6505,
											"end": 6576,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "193"
										},
										{
											"begin": 6573,
											"end": 6574,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6562,
											"end": 6571,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6558,
											"end": 6575,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6549,
											"end": 6555,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 6505,
											"end": 6576,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 6505,
											"end": 6576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6505,
											"end": 6576,
											"name": "tag",
											"source": 5,
											"value": "193"
										},
										{
											"begin": 6505,
											"end": 6576,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6586,
											"end": 6658,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "194"
										},
										{
											"begin": 6654,
											"end": 6656,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6643,
											"end": 6652,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6639,
											"end": 6657,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6630,
											"end": 6636,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6586,
											"end": 6658,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 6586,
											"end": 6658,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6586,
											"end": 6658,
											"name": "tag",
											"source": 5,
											"value": "194"
										},
										{
											"begin": 6586,
											"end": 6658,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6333,
											"end": 6665,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 6333,
											"end": 6665,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6333,
											"end": 6665,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6333,
											"end": 6665,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6333,
											"end": 6665,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6333,
											"end": 6665,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6671,
											"end": 6761,
											"name": "tag",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 6671,
											"end": 6761,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6705,
											"end": 6712,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6748,
											"end": 6753,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6741,
											"end": 6754,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6734,
											"end": 6755,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6723,
											"end": 6755,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6723,
											"end": 6755,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6671,
											"end": 6761,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6671,
											"end": 6761,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6671,
											"end": 6761,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6671,
											"end": 6761,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6767,
											"end": 6883,
											"name": "tag",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 6767,
											"end": 6883,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6837,
											"end": 6858,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 6852,
											"end": 6857,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6837,
											"end": 6858,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 6837,
											"end": 6858,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6837,
											"end": 6858,
											"name": "tag",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 6837,
											"end": 6858,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6830,
											"end": 6835,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6827,
											"end": 6859,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 6817,
											"end": 6877,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "198"
										},
										{
											"begin": 6817,
											"end": 6877,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6873,
											"end": 6874,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6870,
											"end": 6871,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6863,
											"end": 6875,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 6817,
											"end": 6877,
											"name": "tag",
											"source": 5,
											"value": "198"
										},
										{
											"begin": 6817,
											"end": 6877,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6767,
											"end": 6883,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6767,
											"end": 6883,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6889,
											"end": 7026,
											"name": "tag",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 6889,
											"end": 7026,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6943,
											"end": 6948,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6974,
											"end": 6980,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6968,
											"end": 6981,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6959,
											"end": 6981,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6959,
											"end": 6981,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6990,
											"end": 7020,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "200"
										},
										{
											"begin": 7014,
											"end": 7019,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6990,
											"end": 7020,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 6990,
											"end": 7020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6990,
											"end": 7020,
											"name": "tag",
											"source": 5,
											"value": "200"
										},
										{
											"begin": 6990,
											"end": 7020,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6889,
											"end": 7026,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6889,
											"end": 7026,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6889,
											"end": 7026,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6889,
											"end": 7026,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6889,
											"end": 7026,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7032,
											"end": 7377,
											"name": "tag",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 7032,
											"end": 7377,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7099,
											"end": 7105,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7148,
											"end": 7150,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7136,
											"end": 7145,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7127,
											"end": 7134,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 7123,
											"end": 7146,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7119,
											"end": 7151,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 7116,
											"end": 7235,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7116,
											"end": 7235,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 7116,
											"end": 7235,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7154,
											"end": 7233,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "203"
										},
										{
											"begin": 7154,
											"end": 7233,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 7154,
											"end": 7233,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7154,
											"end": 7233,
											"name": "tag",
											"source": 5,
											"value": "203"
										},
										{
											"begin": 7154,
											"end": 7233,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7116,
											"end": 7235,
											"name": "tag",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 7116,
											"end": 7235,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7274,
											"end": 7275,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7299,
											"end": 7360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "204"
										},
										{
											"begin": 7352,
											"end": 7359,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 7343,
											"end": 7349,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7332,
											"end": 7341,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 7328,
											"end": 7350,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7299,
											"end": 7360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 7299,
											"end": 7360,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7299,
											"end": 7360,
											"name": "tag",
											"source": 5,
											"value": "204"
										},
										{
											"begin": 7299,
											"end": 7360,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7289,
											"end": 7360,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7289,
											"end": 7360,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7245,
											"end": 7370,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7032,
											"end": 7377,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7032,
											"end": 7377,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7032,
											"end": 7377,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7032,
											"end": 7377,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7032,
											"end": 7377,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7383,
											"end": 7564,
											"name": "tag",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 7383,
											"end": 7564,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7523,
											"end": 7556,
											"name": "PUSH",
											"source": 5,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 7519,
											"end": 7520,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7511,
											"end": 7517,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7507,
											"end": 7521,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7500,
											"end": 7557,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7383,
											"end": 7564,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7383,
											"end": 7564,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7570,
											"end": 7936,
											"name": "tag",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 7570,
											"end": 7936,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7712,
											"end": 7715,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7733,
											"end": 7800,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "207"
										},
										{
											"begin": 7797,
											"end": 7799,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 7792,
											"end": 7795,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7733,
											"end": 7800,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 7733,
											"end": 7800,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7733,
											"end": 7800,
											"name": "tag",
											"source": 5,
											"value": "207"
										},
										{
											"begin": 7733,
											"end": 7800,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7726,
											"end": 7800,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7726,
											"end": 7800,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7809,
											"end": 7902,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "208"
										},
										{
											"begin": 7898,
											"end": 7901,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7809,
											"end": 7902,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 7809,
											"end": 7902,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7809,
											"end": 7902,
											"name": "tag",
											"source": 5,
											"value": "208"
										},
										{
											"begin": 7809,
											"end": 7902,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7927,
											"end": 7929,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7922,
											"end": 7925,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7918,
											"end": 7930,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7911,
											"end": 7930,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7911,
											"end": 7930,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7570,
											"end": 7936,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7570,
											"end": 7936,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7570,
											"end": 7936,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7570,
											"end": 7936,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7942,
											"end": 8361,
											"name": "tag",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 7942,
											"end": 8361,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8108,
											"end": 8112,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8146,
											"end": 8148,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8135,
											"end": 8144,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8131,
											"end": 8149,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8123,
											"end": 8149,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8123,
											"end": 8149,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8195,
											"end": 8204,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8189,
											"end": 8193,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8185,
											"end": 8205,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 8181,
											"end": 8182,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8170,
											"end": 8179,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8166,
											"end": 8183,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8159,
											"end": 8206,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8223,
											"end": 8354,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "210"
										},
										{
											"begin": 8349,
											"end": 8353,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8223,
											"end": 8354,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 8223,
											"end": 8354,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8223,
											"end": 8354,
											"name": "tag",
											"source": 5,
											"value": "210"
										},
										{
											"begin": 8223,
											"end": 8354,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8215,
											"end": 8354,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8215,
											"end": 8354,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7942,
											"end": 8361,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7942,
											"end": 8361,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7942,
											"end": 8361,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7942,
											"end": 8361,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"AGC_FInal/AGCReward.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"MAX_REWARD_AMOUNT()": "a04f6b4b",
							"MAX_TAX()": "86a35f25",
							"agcToken()": "c39124ab",
							"checkBalance()": "c71daccb",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"rewardUser(address,uint256)": "e4e103dc",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_agcTokenAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"UserRewarded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MAX_REWARD_AMOUNT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_TAX\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"agcToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"checkBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"rewardUser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"AGC_FInal/AGCReward.sol\":\"RewardContract\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"AGC_FInal/AGCReward.sol\":{\"keccak256\":\"0xaf8f776e39286b0729d363b33f3f015ea80c9afb10b3cd76a7fe542d97b369f1\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://7138420e48695b7f0b75c2686534e9bfd5adc8757c252cb33856987cd2fe6158\",\"dweb:/ipfs/QmPcRJJJfzJgW5eny5Es9faX29r89pzSU1gPYESNYqpEpZ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "AGC_FInal/AGCReward.sol:RewardContract",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 158,
								"contract": "AGC_FInal/AGCReward.sol:RewardContract",
								"label": "_status",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							320
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 321,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 320,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 320,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								320
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 302,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 302,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							212
						]
					},
					"id": 213,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "137:750:1",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 212,
							"linearizedBaseContracts": [
								212
							],
							"name": "ReentrancyGuard",
							"nameLocation": "906:15:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 153,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1701:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 212,
									"src": "1676:41:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 151,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1676:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 152,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1716:1:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 156,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1748:8:1",
									"nodeType": "VariableDeclaration",
									"scope": 212,
									"src": "1723:37:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 154,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1723:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 155,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1759:1:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 158,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1783:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 212,
									"src": "1767:23:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 157,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1767:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 165,
										"nodeType": "Block",
										"src": "1811:39:1",
										"statements": [
											{
												"expression": {
													"id": 163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 161,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 158,
														"src": "1821:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 162,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 153,
														"src": "1831:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1821:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 164,
												"nodeType": "ExpressionStatement",
												"src": "1821:22:1"
											}
										]
									},
									"id": 166,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1808:2:1"
									},
									"returnParameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1811:0:1"
									},
									"scope": 212,
									"src": "1797:53:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 176,
										"nodeType": "Block",
										"src": "2251:79:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 169,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 192,
														"src": "2261:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 170,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2261:21:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 171,
												"nodeType": "ExpressionStatement",
												"src": "2261:21:1"
											},
											{
												"id": 172,
												"nodeType": "PlaceholderStatement",
												"src": "2292:1:1"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 173,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 200,
														"src": "2303:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 175,
												"nodeType": "ExpressionStatement",
												"src": "2303:20:1"
											}
										]
									},
									"documentation": {
										"id": 167,
										"nodeType": "StructuredDocumentation",
										"src": "1856:366:1",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 177,
									"name": "nonReentrant",
									"nameLocation": "2236:12:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2248:2:1"
									},
									"src": "2227:103:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 191,
										"nodeType": "Block",
										"src": "2375:248:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 183,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 181,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 158,
																"src": "2468:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 182,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 156,
																"src": "2479:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2468:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 184,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2489:33:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 180,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2460:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:63:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 186,
												"nodeType": "ExpressionStatement",
												"src": "2460:63:1"
											},
											{
												"expression": {
													"id": 189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 187,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 158,
														"src": "2598:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 188,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 156,
														"src": "2608:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2598:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 190,
												"nodeType": "ExpressionStatement",
												"src": "2598:18:1"
											}
										]
									},
									"id": 192,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2345:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2364:2:1"
									},
									"returnParameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2375:0:1"
									},
									"scope": 212,
									"src": "2336:287:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 199,
										"nodeType": "Block",
										"src": "2667:171:1",
										"statements": [
											{
												"expression": {
													"id": 197,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 195,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 158,
														"src": "2809:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 196,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 153,
														"src": "2819:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2809:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 198,
												"nodeType": "ExpressionStatement",
												"src": "2809:22:1"
											}
										]
									},
									"id": 200,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2638:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2656:2:1"
									},
									"returnParameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2667:0:1"
									},
									"scope": 212,
									"src": "2629:209:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 210,
										"nodeType": "Block",
										"src": "3081:43:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 206,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 158,
														"src": "3098:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 207,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 156,
														"src": "3109:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3098:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 205,
												"id": 209,
												"nodeType": "Return",
												"src": "3091:26:1"
											}
										]
									},
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "2844:168:1",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 211,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3026:23:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3049:2:1"
									},
									"returnParameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "3075:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 203,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3075:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3074:6:1"
									},
									"scope": 212,
									"src": "3017:107:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 213,
							"src": "888:2238:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "112:3015:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							290
						]
					},
					"id": 291,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 214,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 215,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:2",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 290,
							"linearizedBaseContracts": [
								290
							],
							"name": "IERC20",
							"nameLocation": "213:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 216,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 224,
									"name": "Transfer",
									"nameLocation": "395:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 218,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "404:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 217,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 220,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "426:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 219,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 222,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "446:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 221,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:2"
									},
									"src": "389:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 225,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 233,
									"name": "Approval",
									"nameLocation": "626:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 227,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "635:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 229,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "658:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 231,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "683:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 230,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:2"
									},
									"src": "620:78:2"
								},
								{
									"documentation": {
										"id": 234,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:2",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 239,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:2"
									},
									"returnParameters": {
										"id": 238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 237,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "820:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 236,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:2"
									},
									"scope": 290,
									"src": "774:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 240,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:2",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 247,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 247,
												"src": "930:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 241,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:2"
									},
									"returnParameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 247,
												"src": "970:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:2"
									},
									"scope": 290,
									"src": "911:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 248,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:2",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 257,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 250,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "1221:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 249,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "1233:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 251,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:2"
									},
									"returnParameters": {
										"id": 256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 255,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "1266:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 254,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:2"
									},
									"scope": 290,
									"src": "1203:69:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 258,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 267,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 267,
												"src": "1566:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 259,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 267,
												"src": "1581:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:2"
									},
									"returnParameters": {
										"id": 266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 267,
												"src": "1621:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 264,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:2"
									},
									"scope": 290,
									"src": "1547:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 268,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:2",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 277,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "2325:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 269,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 272,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "2342:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 271,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:2"
									},
									"returnParameters": {
										"id": 276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 275,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "2375:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 274,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:2"
									},
									"scope": 290,
									"src": "2308:73:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 278,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 289,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 285,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 280,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 289,
												"src": "2711:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 279,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 282,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 289,
												"src": "2725:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 281,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 284,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 289,
												"src": "2737:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 283,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:2"
									},
									"returnParameters": {
										"id": 288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 287,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 289,
												"src": "2770:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 286,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:2"
									},
									"scope": 290,
									"src": "2689:87:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 291,
							"src": "203:2575:2",
							"usedErrors": [],
							"usedEvents": [
								224,
								233
							]
						}
					],
					"src": "106:2673:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							320
						]
					},
					"id": 321,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 292,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:3"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 293,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:3",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 320,
							"linearizedBaseContracts": [
								320
							],
							"name": "Context",
							"nameLocation": "642:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 301,
										"nodeType": "Block",
										"src": "718:34:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 298,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 299,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:3",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 297,
												"id": 300,
												"nodeType": "Return",
												"src": "728:17:3"
											}
										]
									},
									"id": 302,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 294,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:3"
									},
									"returnParameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 296,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "709:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 295,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:3"
									},
									"scope": 320,
									"src": "656:96:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 310,
										"nodeType": "Block",
										"src": "825:32:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 307,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 308,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:3",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 306,
												"id": 309,
												"nodeType": "Return",
												"src": "835:15:3"
											}
										]
									},
									"id": 311,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 303,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:3"
									},
									"returnParameters": {
										"id": 306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "809:14:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 304,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:3"
									},
									"scope": 320,
									"src": "758:99:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 318,
										"nodeType": "Block",
										"src": "935:25:3",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 316,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:3",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 315,
												"id": 317,
												"nodeType": "Return",
												"src": "945:8:3"
											}
										]
									},
									"id": 319,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 312,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:3"
									},
									"returnParameters": {
										"id": 315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 314,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 319,
												"src": "926:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 313,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:3"
									},
									"scope": 320,
									"src": "863:97:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 321,
							"src": "624:338:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:3"
				},
				"id": 3
			},
			"AGC_FInal/AGCReward.sol": {
				"ast": {
					"absolutePath": "AGC_FInal/AGCReward.sol",
					"exportedSymbols": {
						"Context": [
							320
						],
						"IERC20": [
							290
						],
						"Ownable": [
							147
						],
						"ReentrancyGuard": [
							212
						],
						"RewardContract": [
							425
						]
					},
					"id": 426,
					"license": "UNLICENSED",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 322,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".22"
							],
							"nodeType": "PragmaDirective",
							"src": "40:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 323,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 426,
							"sourceUnit": 291,
							"src": "66:56:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 324,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 426,
							"sourceUnit": 148,
							"src": "123:52:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 325,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 426,
							"sourceUnit": 213,
							"src": "176:62:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 326,
										"name": "Ownable",
										"nameLocations": [
											"267:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "267:7:4"
									},
									"id": 327,
									"nodeType": "InheritanceSpecifier",
									"src": "267:7:4"
								},
								{
									"baseName": {
										"id": 328,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"276:15:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 212,
										"src": "276:15:4"
									},
									"id": 329,
									"nodeType": "InheritanceSpecifier",
									"src": "276:15:4"
								}
							],
							"canonicalName": "RewardContract",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 425,
							"linearizedBaseContracts": [
								425,
								212,
								147,
								320
							],
							"name": "RewardContract",
							"nameLocation": "249:14:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "c39124ab",
									"id": 332,
									"mutability": "immutable",
									"name": "agcToken",
									"nameLocation": "322:8:4",
									"nodeType": "VariableDeclaration",
									"scope": 425,
									"src": "298:32:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$290",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 331,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 330,
											"name": "IERC20",
											"nameLocations": [
												"298:6:4"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 290,
											"src": "298:6:4"
										},
										"referencedDeclaration": 290,
										"src": "298:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$290",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "a04f6b4b",
									"id": 339,
									"mutability": "constant",
									"name": "MAX_REWARD_AMOUNT",
									"nameLocation": "361:17:4",
									"nodeType": "VariableDeclaration",
									"scope": 425,
									"src": "337:54:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 333,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "337:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_500000000000000000000_by_1",
											"typeString": "int_const 500000000000000000000"
										},
										"id": 338,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "353030",
											"id": 334,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "381:3:4",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_500_by_1",
												"typeString": "int_const 500"
											},
											"value": "500"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"commonType": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											},
											"id": 337,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "3130",
												"id": 335,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "385:2:4",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"hexValue": "3138",
												"id": 336,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "389:2:4",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_18_by_1",
													"typeString": "int_const 18"
												},
												"value": "18"
											},
											"src": "385:6:4",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											}
										},
										"src": "381:10:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_500000000000000000000_by_1",
											"typeString": "int_const 500000000000000000000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "86a35f25",
									"id": 342,
									"mutability": "constant",
									"name": "MAX_TAX",
									"nameLocation": "418:7:4",
									"nodeType": "VariableDeclaration",
									"scope": 425,
									"src": "397:30:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 340,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "397:4:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 341,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "426:1:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "e366ef68d2c0620e9e4c5074fd7ad0ce6739b65287f9c2d09b7d002da556879b",
									"id": 348,
									"name": "UserRewarded",
									"nameLocation": "440:12:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 344,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "469:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 348,
												"src": "453:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 343,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "453:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 346,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "483:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 348,
												"src": "475:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 345,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "475:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "452:38:4"
									},
									"src": "434:57:4"
								},
								{
									"body": {
										"id": 363,
										"nodeType": "Block",
										"src": "554:52:4",
										"statements": [
											{
												"expression": {
													"id": 361,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 357,
														"name": "agcToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 332,
														"src": "564:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$290",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 359,
																"name": "_agcTokenAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 350,
																"src": "582:16:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 358,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 290,
															"src": "575:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$290_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 360,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "575:24:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$290",
															"typeString": "contract IERC20"
														}
													},
													"src": "564:35:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$290",
														"typeString": "contract IERC20"
													}
												},
												"id": 362,
												"nodeType": "ExpressionStatement",
												"src": "564:35:4"
											}
										]
									},
									"id": 364,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"expression": {
														"id": 353,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "542:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 354,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "546:6:4",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "542:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 355,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 352,
												"name": "Ownable",
												"nameLocations": [
													"534:7:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "534:7:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "534:19:4"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 350,
												"mutability": "mutable",
												"name": "_agcTokenAddress",
												"nameLocation": "516:16:4",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "508:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 349,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "508:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "507:26:4"
									},
									"returnParameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "554:0:4"
									},
									"scope": 425,
									"src": "496:110:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 409,
										"nodeType": "Block",
										"src": "683:299:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 380,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 376,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 374,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 368,
																	"src": "701:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 375,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "710:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "701:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 379,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 377,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 368,
																	"src": "715:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"id": 378,
																	"name": "MAX_REWARD_AMOUNT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 339,
																	"src": "725:17:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "715:27:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "701:41:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e74206d7573742062652067726561746572207468616e207a65726f20616e64206c657373207468616e206f7220657175616c20746f20353030",
															"id": 381,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "744:64:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0a456521298a8e109ec715df19e15f055d32f90bbb5b7d724683fff1eb669676",
																"typeString": "literal_string \"Amount must be greater than zero and less than or equal to 500\""
															},
															"value": "Amount must be greater than zero and less than or equal to 500"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0a456521298a8e109ec715df19e15f055d32f90bbb5b7d724683fff1eb669676",
																"typeString": "literal_string \"Amount must be greater than zero and less than or equal to 500\""
															}
														],
														"id": 373,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "693:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 382,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "693:116:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 383,
												"nodeType": "ExpressionStatement",
												"src": "693:116:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 393,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 389,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "854:4:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_RewardContract_$425",
																					"typeString": "contract RewardContract"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_RewardContract_$425",
																					"typeString": "contract RewardContract"
																				}
																			],
																			"id": 388,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "846:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 387,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "846:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 390,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "846:13:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 385,
																		"name": "agcToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 332,
																		"src": "827:8:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$290",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 386,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "836:9:4",
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 247,
																	"src": "827:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 391,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "827:33:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 392,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 368,
																"src": "864:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "827:43:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e742066756e6473",
															"id": 394,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "872:20:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d",
																"typeString": "literal_string \"Insufficient funds\""
															},
															"value": "Insufficient funds"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d",
																"typeString": "literal_string \"Insufficient funds\""
															}
														],
														"id": 384,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "819:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 395,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "819:74:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 396,
												"nodeType": "ExpressionStatement",
												"src": "819:74:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 400,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 366,
															"src": "921:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 401,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 368,
															"src": "927:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 397,
															"name": "agcToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 332,
															"src": "903:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$290",
																"typeString": "contract IERC20"
															}
														},
														"id": 399,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "912:8:4",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 257,
														"src": "903:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 402,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "903:31:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 403,
												"nodeType": "ExpressionStatement",
												"src": "903:31:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 405,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 366,
															"src": "962:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 406,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 368,
															"src": "968:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 404,
														"name": "UserRewarded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 348,
														"src": "949:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 407,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "949:26:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 408,
												"nodeType": "EmitStatement",
												"src": "944:31:4"
											}
										]
									},
									"functionSelector": "e4e103dc",
									"id": 410,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 371,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 370,
												"name": "nonReentrant",
												"nameLocations": [
													"670:12:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 177,
												"src": "670:12:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "670:12:4"
										}
									],
									"name": "rewardUser",
									"nameLocation": "620:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 369,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "639:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 410,
												"src": "631:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 365,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "631:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 368,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "653:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 410,
												"src": "645:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 367,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "645:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "630:30:4"
									},
									"returnParameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "683:0:4"
									},
									"scope": 425,
									"src": "611:371:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 423,
										"nodeType": "Block",
										"src": "1043:57:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 419,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1087:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_RewardContract_$425",
																		"typeString": "contract RewardContract"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_RewardContract_$425",
																		"typeString": "contract RewardContract"
																	}
																],
																"id": 418,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1079:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 417,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1079:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 420,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1079:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 415,
															"name": "agcToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 332,
															"src": "1060:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$290",
																"typeString": "contract IERC20"
															}
														},
														"id": 416,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1069:9:4",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 247,
														"src": "1060:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 421,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1060:33:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 414,
												"id": 422,
												"nodeType": "Return",
												"src": "1053:40:4"
											}
										]
									},
									"functionSelector": "c71daccb",
									"id": 424,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "checkBalance",
									"nameLocation": "996:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 411,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1008:2:4"
									},
									"returnParameters": {
										"id": 414,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 413,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 424,
												"src": "1034:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 412,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1034:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1033:9:4"
									},
									"scope": 425,
									"src": "987:113:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 426,
							"src": "240:862:4",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24,
								348
							]
						}
					],
					"src": "40:1062:4"
				},
				"id": 4
			}
		}
	}
}